[
    {
        "text": "Components",
        "value": "vue\/component",
        "items": [
            {
                "text": "appui",
                "url": "bbn-vue\/component\/appui\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "audio",
                "url": "bbn-vue\/component\/audio\/overview",
                "props": [],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/audio\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "autocomplete",
                "url": "bbn-vue\/component\/autocomplete\/overview",
                "props": [
                    {
                        "text": "filterable",
                        "desc": "For to apply the filters or not.",
                        "url": "bbn-vue\/component\/autocomplete\/props\/filterable"
                    },
                    {
                        "text": "minLength",
                        "desc": "To define the length of the string to start the filter.",
                        "url": "bbn-vue\/component\/autocomplete\/props\/minLength"
                    },
                    {
                        "text": "delay",
                        "desc": "Specifies the time of delay.",
                        "url": "bbn-vue\/component\/autocomplete\/props\/delay"
                    },
                    {
                        "text": "filterMode",
                        "desc": "Specifies the mode of the filter.",
                        "url": "bbn-vue\/component\/autocomplete\/props\/filterMode"
                    }
                ],
                "methods": [
                    {
                        "text": "click",
                        "desc": "Puts the focus on the element.",
                        "url": "bbn-vue\/component\/autocomplete\/methods\/click"
                    },
                    {
                        "text": "leave",
                        "desc": "Remove the filter and close the list if it is notabove it.",
                        "url": "bbn-vue\/component\/autocomplete\/methods\/leave"
                    },
                    {
                        "text": "select",
                        "desc": "Emits the event 'select'.",
                        "url": "bbn-vue\/component\/autocomplete\/methods\/select"
                    },
                    {
                        "text": "resetDropdown",
                        "desc": "Function to do the reset and if the component is open it closes it.",
                        "url": "bbn-vue\/component\/autocomplete\/methods\/resetDropdown"
                    },
                    {
                        "text": "keydown",
                        "desc": "Function that performs different actions based on what is being pressed.",
                        "url": "bbn-vue\/component\/autocomplete\/methods\/keydown"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/inputComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/listComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/keynavComponent"
                    },
                    {
                        "text": "urlComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/urlComponent"
                    },
                    {
                        "text": "dropdownComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/autocomplete\/mixins\/dropdownComponent"
                    }
                ]
            },
            {
                "text": "breadcrumb",
                "url": "bbn-vue\/component\/breadcrumb\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/source"
                    },
                    {
                        "text": "value",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/value"
                    },
                    {
                        "text": "content",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/content"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Sets if the tabs' titles will be scrollable in case they have a greater width than the page (true), or if they will be shown multilines (false, default).",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/scrollable"
                    },
                    {
                        "text": "maxTitleLength",
                        "desc": "The max length for a title",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/maxTitleLength"
                    },
                    {
                        "text": "menu",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/menu"
                    },
                    {
                        "text": "master",
                        "desc": "Set it to true if you want to set this breadcrumb as a master.",
                        "url": "bbn-vue\/component\/breadcrumb\/props\/master"
                    }
                ],
                "methods": [
                    {
                        "text": "isNumber",
                        "desc": "Alias of bbn.fn.isNumber",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/isNumber"
                    },
                    {
                        "text": "register",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/register"
                    },
                    {
                        "text": "unregister",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/unregister"
                    },
                    {
                        "text": "getMenuFn",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/getMenuFn"
                    },
                    {
                        "text": "close",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/close"
                    },
                    {
                        "text": "closeAll",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/closeAll"
                    },
                    {
                        "text": "closeAllBut",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/closeAllBut"
                    },
                    {
                        "text": "isvalidIndex",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/isvalidIndex"
                    },
                    {
                        "text": "getList",
                        "desc": "Returns the breadcrumb's source list.",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/getList"
                    },
                    {
                        "text": "getParents",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/getParents"
                    },
                    {
                        "text": "openMenu",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/methods\/openMenu"
                    }
                ],
                "mixins": [
                    {
                        "text": "observerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/breadcrumb\/mixins\/observerComponent"
                    }
                ]
            },
            {
                "text": "browser",
                "url": "bbn-vue\/component\/browser\/overview",
                "props": [
                    {
                        "text": "Source",
                        "desc": "The object source of component bbn-browser.",
                        "url": "bbn-vue\/component\/browser\/props\/Source"
                    },
                    {
                        "text": "tabs",
                        "desc": "",
                        "url": "bbn-vue\/component\/browser\/props\/tabs"
                    }
                ],
                "methods": [
                    {
                        "text": "click",
                        "desc": "The role of the button when clicked.",
                        "url": "bbn-vue\/component\/browser\/methods\/click"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/browser\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "button",
                "url": "bbn-vue\/component\/button\/overview",
                "props": [
                    {
                        "text": "title",
                        "desc": "The title of the button.",
                        "url": "bbn-vue\/component\/button\/props\/title"
                    },
                    {
                        "text": "text",
                        "desc": "The button's text.",
                        "url": "bbn-vue\/component\/button\/props\/text"
                    },
                    {
                        "text": "notext",
                        "desc": "Set to false for no text on the button.",
                        "url": "bbn-vue\/component\/button\/props\/notext"
                    },
                    {
                        "text": "url",
                        "desc": "The button links to a designated url.",
                        "url": "bbn-vue\/component\/button\/props\/url"
                    },
                    {
                        "text": "iconPosition",
                        "desc": "The icon(s) position (left or right).",
                        "url": "bbn-vue\/component\/button\/props\/iconPosition"
                    },
                    {
                        "text": "secondary",
                        "desc": "A second icon to display on the button above the main icon.",
                        "url": "bbn-vue\/component\/button\/props\/secondary"
                    },
                    {
                        "text": "secondaryColor",
                        "desc": "If defined the prop secondary, defines the color of the second icon of the button.",
                        "url": "bbn-vue\/component\/button\/props\/secondaryColor"
                    },
                    {
                        "text": "type",
                        "desc": "Specifies the type of button.",
                        "url": "bbn-vue\/component\/button\/props\/type"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true to disable the button.",
                        "url": "bbn-vue\/component\/button\/props\/disabled"
                    },
                    {
                        "text": "glowing",
                        "desc": "Set to true for the button to glow.",
                        "url": "bbn-vue\/component\/button\/props\/glowing"
                    },
                    {
                        "text": "glowingColor",
                        "desc": "State the button's glowing colour.",
                        "url": "bbn-vue\/component\/button\/props\/glowingColor"
                    },
                    {
                        "text": "action",
                        "desc": "The action that has to be performed at the event click.",
                        "url": "bbn-vue\/component\/button\/props\/action"
                    }
                ],
                "methods": [
                    {
                        "text": "click",
                        "desc": "The role of the button when clicked.",
                        "url": "bbn-vue\/component\/button\/methods\/click"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/button\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/button\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "calendar",
                "url": "bbn-vue\/component\/calendar\/overview",
                "props": [
                    {
                        "text": "autobind",
                        "desc": "Auto-loads the data at mount of the component if it's set as \"true\".",
                        "url": "bbn-vue\/component\/calendar\/props\/autobind"
                    },
                    {
                        "text": "source",
                        "desc": "The array of events for each day.\nWhen a string is set, an ajax call will be made to the corresponding url.",
                        "url": "bbn-vue\/component\/calendar\/props\/source"
                    },
                    {
                        "text": "type",
                        "desc": "The visualization mode.\nAllowed values: days, weeks, months and years.",
                        "url": "bbn-vue\/component\/calendar\/props\/type"
                    },
                    {
                        "text": "autoSelect",
                        "desc": "Set to true to autoselect the date property value.",
                        "url": "bbn-vue\/component\/calendar\/props\/autoSelect"
                    },
                    {
                        "text": "multiSelection",
                        "desc": "Set to true to select multiple values.",
                        "url": "bbn-vue\/component\/calendar\/props\/multiSelection"
                    },
                    {
                        "text": "value",
                        "desc": "The value.",
                        "url": "bbn-vue\/component\/calendar\/props\/value"
                    },
                    {
                        "text": "arrows",
                        "desc": "Shows the arrows on the header.",
                        "url": "bbn-vue\/component\/calendar\/props\/arrows"
                    },
                    {
                        "text": "arrowsButtons",
                        "desc": "Shows the arrows as buttons (only icons also).",
                        "url": "bbn-vue\/component\/calendar\/props\/arrowsButtons"
                    },
                    {
                        "text": "titleIcon",
                        "desc": "The icon displayed before the title.",
                        "url": "bbn-vue\/component\/calendar\/props\/titleIcon"
                    },
                    {
                        "text": "titleAction",
                        "desc": "The function called on click on the title.",
                        "url": "bbn-vue\/component\/calendar\/props\/titleAction"
                    },
                    {
                        "text": "date",
                        "desc": "The initial date.",
                        "url": "bbn-vue\/component\/calendar\/props\/date"
                    },
                    {
                        "text": "extraItems",
                        "desc": "Shows\/hides the dates of the next and previous period in the current visualization.",
                        "url": "bbn-vue\/component\/calendar\/props\/extraItems"
                    },
                    {
                        "text": "itemsRange",
                        "desc": "Array of items to insert into a range.",
                        "url": "bbn-vue\/component\/calendar\/props\/itemsRange"
                    },
                    {
                        "text": "onlyEvents",
                        "desc": "Shows only dates with events.",
                        "url": "bbn-vue\/component\/calendar\/props\/onlyEvents"
                    },
                    {
                        "text": "disableNoEvents",
                        "desc": "Disables the dates without events.",
                        "url": "bbn-vue\/component\/calendar\/props\/disableNoEvents"
                    },
                    {
                        "text": "itemDetails",
                        "desc": "Shows\/hides the date's details.",
                        "url": "bbn-vue\/component\/calendar\/props\/itemDetails"
                    },
                    {
                        "text": "eventIcon",
                        "desc": "The icon used to indicate the presence of events in the item.\nIf set to false, nothing will be shown.",
                        "url": "bbn-vue\/component\/calendar\/props\/eventIcon"
                    },
                    {
                        "text": "itemPadding",
                        "desc": "Shows\/hides the padding of the item's cell.",
                        "url": "bbn-vue\/component\/calendar\/props\/itemPadding"
                    },
                    {
                        "text": "itemComponent",
                        "desc": "The component used for the items.",
                        "url": "bbn-vue\/component\/calendar\/props\/itemComponent"
                    },
                    {
                        "text": "itemTitle",
                        "desc": "The title for the item's details.",
                        "url": "bbn-vue\/component\/calendar\/props\/itemTitle"
                    },
                    {
                        "text": "headerComponent",
                        "desc": "The component used for the header.",
                        "url": "bbn-vue\/component\/calendar\/props\/headerComponent"
                    },
                    {
                        "text": "labels",
                        "desc": "The labels type.\nTypes: auto, letter, abbr, full, false.",
                        "url": "bbn-vue\/component\/calendar\/props\/labels"
                    },
                    {
                        "text": "startField",
                        "desc": "The field used for the event's start.",
                        "url": "bbn-vue\/component\/calendar\/props\/startField"
                    },
                    {
                        "text": "endField",
                        "desc": "The field used for the event's end.",
                        "url": "bbn-vue\/component\/calendar\/props\/endField"
                    },
                    {
                        "text": "startFormat",
                        "desc": "The format used for the event's start.",
                        "url": "bbn-vue\/component\/calendar\/props\/startFormat"
                    },
                    {
                        "text": "endFormat",
                        "desc": "The format used for the event's end.",
                        "url": "bbn-vue\/component\/calendar\/props\/endFormat"
                    },
                    {
                        "text": "max",
                        "desc": "The maximum allowed date.",
                        "url": "bbn-vue\/component\/calendar\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The minimum allowed date.",
                        "url": "bbn-vue\/component\/calendar\/props\/min"
                    },
                    {
                        "text": "disableDates",
                        "desc": "The disabled dates.",
                        "url": "bbn-vue\/component\/calendar\/props\/disableDates"
                    },
                    {
                        "text": "showLoading",
                        "desc": "Shows the \"loading\" text when it's loading.",
                        "url": "bbn-vue\/component\/calendar\/props\/showLoading"
                    }
                ],
                "methods": [
                    {
                        "text": "getCfg",
                        "desc": "Returns the correct configuration based on the calendar type.",
                        "url": "bbn-vue\/component\/calendar\/methods\/getCfg"
                    },
                    {
                        "text": "getLabelsFormat",
                        "desc": "Returns the correct labels' format.",
                        "url": "bbn-vue\/component\/calendar\/methods\/getLabelsFormat"
                    },
                    {
                        "text": "create",
                        "desc": "Called to the component mounted setting currentDate at max or min.",
                        "url": "bbn-vue\/component\/calendar\/methods\/create"
                    },
                    {
                        "text": "makeEvents",
                        "desc": "Defines and inserts events.",
                        "url": "bbn-vue\/component\/calendar\/methods\/makeEvents"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the calendar.",
                        "url": "bbn-vue\/component\/calendar\/methods\/init"
                    },
                    {
                        "text": "filterEvents",
                        "desc": "Filters the events.",
                        "url": "bbn-vue\/component\/calendar\/methods\/filterEvents"
                    },
                    {
                        "text": "setTitle",
                        "desc": "Sets the calendar's title.",
                        "url": "bbn-vue\/component\/calendar\/methods\/setTitle"
                    },
                    {
                        "text": "refresh",
                        "desc": "Refreshes the data",
                        "url": "bbn-vue\/component\/calendar\/methods\/refresh"
                    },
                    {
                        "text": "next",
                        "desc": "Changes the current calendar view to the next period.",
                        "url": "bbn-vue\/component\/calendar\/methods\/next"
                    },
                    {
                        "text": "prev",
                        "desc": "Changes the current calendar view to the previous period.",
                        "url": "bbn-vue\/component\/calendar\/methods\/prev"
                    },
                    {
                        "text": "select",
                        "desc": "Changes the current value after a selection.",
                        "url": "bbn-vue\/component\/calendar\/methods\/select"
                    },
                    {
                        "text": "getPostData",
                        "desc": "Additionals data to sent with the ajax call.",
                        "url": "bbn-vue\/component\/calendar\/methods\/getPostData"
                    },
                    {
                        "text": "setLabels",
                        "desc": "Sets the labels.",
                        "url": "bbn-vue\/component\/calendar\/methods\/setLabels"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize.",
                        "url": "bbn-vue\/component\/calendar\/methods\/onResize"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/calendar\/mixins\/basicComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/calendar\/mixins\/listComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/calendar\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "chart",
                "url": "bbn-vue\/component\/chart\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The component's data.",
                        "url": "bbn-vue\/component\/chart\/props\/source"
                    },
                    {
                        "text": "type",
                        "desc": "The type of chart.",
                        "url": "bbn-vue\/component\/chart\/props\/type"
                    },
                    {
                        "text": "width",
                        "desc": "The width of the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/width"
                    },
                    {
                        "text": "height",
                        "desc": "The height of the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/height"
                    },
                    {
                        "text": "theme",
                        "desc": "The theme of chart.",
                        "url": "bbn-vue\/component\/chart\/props\/theme"
                    },
                    {
                        "text": "title",
                        "desc": "The title of the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/title"
                    },
                    {
                        "text": "xTitle",
                        "desc": "The x-axis title.",
                        "url": "bbn-vue\/component\/chart\/props\/xTitle"
                    },
                    {
                        "text": "yTitle",
                        "desc": "The y-axis title.",
                        "url": "bbn-vue\/component\/chart\/props\/yTitle"
                    },
                    {
                        "text": "points",
                        "desc": "Set it to false to hide the value points on the line chart, or specific the point' size.",
                        "url": "bbn-vue\/component\/chart\/props\/points"
                    },
                    {
                        "text": "pointsLabels",
                        "desc": "Set it to false if you want to hide the labels on the points.",
                        "url": "bbn-vue\/component\/chart\/props\/pointsLabels"
                    },
                    {
                        "text": "smooth",
                        "desc": "Set to true to show a smooth line on the line chart.",
                        "url": "bbn-vue\/component\/chart\/props\/smooth"
                    },
                    {
                        "text": "step",
                        "desc": "Set it to true to see a square line on the line and area charts.",
                        "url": "bbn-vue\/component\/chart\/props\/step"
                    },
                    {
                        "text": "donut",
                        "desc": "Set to true to create a donut pie chart. Integers can be given to determine the donut width.",
                        "url": "bbn-vue\/component\/chart\/props\/donut"
                    },
                    {
                        "text": "fill",
                        "desc": "The series' background style ('gradient' or 'solid').",
                        "url": "bbn-vue\/component\/chart\/props\/fill"
                    },
                    {
                        "text": "opacity",
                        "desc": "Opacity adjustment.\r\nFrom 0.1 to 1",
                        "url": "bbn-vue\/component\/chart\/props\/opacity"
                    },
                    {
                        "text": "xAxis",
                        "desc": "X-axis configuration object.",
                        "url": "bbn-vue\/component\/chart\/props\/xAxis"
                    },
                    {
                        "text": "yAxis",
                        "desc": "Y-axis configuration object.",
                        "url": "bbn-vue\/component\/chart\/props\/yAxis"
                    },
                    {
                        "text": "grid",
                        "desc": "Set it to false to hide the grid line on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/grid"
                    },
                    {
                        "text": "xGrid",
                        "desc": "Set it to false if you want to hide the grid for the x-axis on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/xGrid"
                    },
                    {
                        "text": "yGrid",
                        "desc": "Set it to false if you want to hide the grid for the y-axis on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/yGrid"
                    },
                    {
                        "text": "gridColor",
                        "desc": "The grid's color.",
                        "url": "bbn-vue\/component\/chart\/props\/gridColor"
                    },
                    {
                        "text": "gridColor",
                        "desc": "The grid's background.",
                        "url": "bbn-vue\/component\/chart\/props\/gridColor"
                    },
                    {
                        "text": "animation",
                        "desc": "Set it to false if you want to disable the animations.\r\nIf you give a number it will be used as the time (ms) for the animations.",
                        "url": "bbn-vue\/component\/chart\/props\/animation"
                    },
                    {
                        "text": "stacked",
                        "desc": "Set it to true if you want the stacked bars.",
                        "url": "bbn-vue\/component\/chart\/props\/stacked"
                    },
                    {
                        "text": "barsDistance",
                        "desc": "The distance between the bars on the bar chart.",
                        "url": "bbn-vue\/component\/chart\/props\/barsDistance"
                    },
                    {
                        "text": "horizontalBars",
                        "desc": "Set it to true if you want to see horizontal bars on the bar chart.",
                        "url": "bbn-vue\/component\/chart\/props\/horizontalBars"
                    },
                    {
                        "text": "color",
                        "desc": "A colors list for personalization.",
                        "url": "bbn-vue\/component\/chart\/props\/color"
                    },
                    {
                        "text": "labels",
                        "desc": "Set it to false if you want to hide the labels on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/labels"
                    },
                    {
                        "text": "xLabels",
                        "desc": "Set it to false if you want to hide the x-axis labels on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabels"
                    },
                    {
                        "text": "xLabels",
                        "desc": "Set it to false if you want to hide the y-axis labels on the chart.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabels"
                    },
                    {
                        "text": "labelsColor",
                        "desc": "The labela color.",
                        "url": "bbn-vue\/component\/chart\/props\/labelsColor"
                    },
                    {
                        "text": "xLabelsColor",
                        "desc": "The x-axis labels color.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabelsColor"
                    },
                    {
                        "text": "yLabelsColor",
                        "desc": "The y-axis labels color.",
                        "url": "bbn-vue\/component\/chart\/props\/yLabelsColor"
                    },
                    {
                        "text": "xLabelsRotate",
                        "desc": "Set a rotation angle for the x-axis.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabelsRotate"
                    },
                    {
                        "text": "yLabelsRotate",
                        "desc": "Set a rotation angle for the y-axis.",
                        "url": "bbn-vue\/component\/chart\/props\/yLabelsRotate"
                    },
                    {
                        "text": "labelsRender",
                        "desc": "A custom function for the labels value.",
                        "url": "bbn-vue\/component\/chart\/props\/labelsRender"
                    },
                    {
                        "text": "xLabelsRender",
                        "desc": "A custom function for the x-axis value.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabelsRender"
                    },
                    {
                        "text": "yLabelsRender",
                        "desc": "A custom function for the y-axis value.",
                        "url": "bbn-vue\/component\/chart\/props\/yLabelsRender"
                    },
                    {
                        "text": "labelsOffsetX",
                        "desc": "X offset of the pie chart's labels.",
                        "url": "bbn-vue\/component\/chart\/props\/labelsOffsetX"
                    },
                    {
                        "text": "labelsOffsetY",
                        "desc": "Y offset of the pie chart's labels.",
                        "url": "bbn-vue\/component\/chart\/props\/labelsOffsetY"
                    },
                    {
                        "text": "xLabelsOffsetX",
                        "desc": "X offset of the x-axis' labels.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabelsOffsetX"
                    },
                    {
                        "text": "xLabelsOffsetY",
                        "desc": "Y offset of the x-axis' labels.",
                        "url": "bbn-vue\/component\/chart\/props\/xLabelsOffsetY"
                    },
                    {
                        "text": "yLabelsOffsetX",
                        "desc": "X offset of the y-axis' labels.",
                        "url": "bbn-vue\/component\/chart\/props\/yLabelsOffsetX"
                    },
                    {
                        "text": "yLabelsOffsetY",
                        "desc": "Y offset of the y-axis' labels.",
                        "url": "bbn-vue\/component\/chart\/props\/yLabelsOffsetY"
                    },
                    {
                        "text": "background",
                        "desc": "The background color for personalization.",
                        "url": "bbn-vue\/component\/chart\/props\/background"
                    },
                    {
                        "text": "max",
                        "desc": "The max value limit.",
                        "url": "bbn-vue\/component\/chart\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The min value limit.",
                        "url": "bbn-vue\/component\/chart\/props\/min"
                    },
                    {
                        "text": "tooltip",
                        "desc": "Set it to false if you want to hide the tooltip.",
                        "url": "bbn-vue\/component\/chart\/props\/tooltip"
                    },
                    {
                        "text": "tooltipRender",
                        "desc": "Tooltip value customize.",
                        "url": "bbn-vue\/component\/chart\/props\/tooltipRender"
                    },
                    {
                        "text": "tooltipLegendRender",
                        "desc": "Tooltip value customize.",
                        "url": "bbn-vue\/component\/chart\/props\/tooltipLegendRender"
                    },
                    {
                        "text": "xTooltipRender",
                        "desc": "X axis tooltip customize.",
                        "url": "bbn-vue\/component\/chart\/props\/xTooltipRender"
                    },
                    {
                        "text": "yTooltipRender",
                        "desc": "Y axis tooltip customize.",
                        "url": "bbn-vue\/component\/chart\/props\/yTooltipRender"
                    },
                    {
                        "text": "zTooltipRender",
                        "desc": "Z axis tooltip customize.",
                        "url": "bbn-vue\/component\/chart\/props\/zTooltipRender"
                    },
                    {
                        "text": "legend",
                        "desc": "The legend list.",
                        "url": "bbn-vue\/component\/chart\/props\/legend"
                    },
                    {
                        "text": "legendPosition",
                        "desc": "The legend position.\r\nYou can use 'top', 'bottom', 'left' or a 'right'.",
                        "url": "bbn-vue\/component\/chart\/props\/legendPosition"
                    },
                    {
                        "text": "legendRender",
                        "desc": "Legend customize.",
                        "url": "bbn-vue\/component\/chart\/props\/legendRender"
                    },
                    {
                        "text": "distributed",
                        "desc": "Set it to true to see distributed series on the bar chart.",
                        "url": "bbn-vue\/component\/chart\/props\/distributed"
                    },
                    {
                        "text": "currency",
                        "desc": "Set it to true if you want to transform the values to currencies.",
                        "url": "bbn-vue\/component\/chart\/props\/currency"
                    },
                    {
                        "text": "xDate",
                        "desc": "",
                        "url": "bbn-vue\/component\/chart\/props\/xDate"
                    },
                    {
                        "text": "nodata",
                        "desc": "The string used when the chart hasn't the data.",
                        "url": "bbn-vue\/component\/chart\/props\/nodata"
                    },
                    {
                        "text": "odd",
                        "desc": "Set it to true if you want to see the odd values only.",
                        "url": "bbn-vue\/component\/chart\/props\/odd"
                    },
                    {
                        "text": "even",
                        "desc": "Set it to true if you want to see the even values only.",
                        "url": "bbn-vue\/component\/chart\/props\/even"
                    },
                    {
                        "text": "onlyInteger",
                        "desc": "Shows only interger on the y-axis labels.",
                        "url": "bbn-vue\/component\/chart\/props\/onlyInteger"
                    },
                    {
                        "text": "ticksNumber",
                        "desc": "The number of ticks on the y-axis.",
                        "url": "bbn-vue\/component\/chart\/props\/ticksNumber"
                    },
                    {
                        "text": "toolbar",
                        "desc": "Display or note the toolbar\/menu in the top right corner.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbar"
                    },
                    {
                        "text": "toolbarDownload",
                        "desc": "Show the download menu \/ hamburger icon in the toolbar.\r\nIf you want to display a custom icon instead of hamburger icon, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarDownload"
                    },
                    {
                        "text": "toolbarSelection",
                        "desc": "Show the rectangle selection icon in the toolbar.\r\nIf you want to display a custom icon for selection, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarSelection"
                    },
                    {
                        "text": "toolbarZoom",
                        "desc": "Show the zoom icon which is used for zooming by dragging selection on the chart area.\r\nIf you want to display a custom icon for zoom, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarZoom"
                    },
                    {
                        "text": "toolbarZoomin",
                        "desc": "Show the zoom-in icon which zooms in 50% from the visible chart area.\r\nIf you want to display a custom icon for zoom-in, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarZoomin"
                    },
                    {
                        "text": "toolbarZoomout",
                        "desc": "Show the zoom-out icon which zooms out 50% from the visible chart area.\r\nIf you want to display a custom icon for zoom-out, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarZoomout"
                    },
                    {
                        "text": "toolbarPan",
                        "desc": "Show the panning icon in the toolbar.\r\nIf you want to display a custom icon for span, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarPan"
                    },
                    {
                        "text": "toolbarReset",
                        "desc": "Reset the chart data to it\u2019s initial state after zommin\/zoomout\/panning.\r\nIf you want to display a custom icon for reset, you can provide HTML string in this property.",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarReset"
                    },
                    {
                        "text": "toolbarCustom",
                        "desc": "Allows to add additional icon buttons in the toolbar.\r\nIn the below example, index should be used to place at a particular position in the toolbar.\r\n[{\r\n icon: '<img src=\"\/static\/icons\/chart-carpet.png\" width=\"20\">',\r\n index: 4,\r\n title: 'tooltip of the icon',\r\n class: 'custom-icon',\r\n click: function (chart, options, e) {\r\n  console.log(\"clicked custom-icon\")\r\n }\r\n}]",
                        "url": "bbn-vue\/component\/chart\/props\/toolbarCustom"
                    },
                    {
                        "text": "cfg",
                        "desc": "Use this prop to give native widget's properties.",
                        "url": "bbn-vue\/component\/chart\/props\/cfg"
                    }
                ],
                "methods": [
                    {
                        "text": "init",
                        "desc": "Destroys the current widget if it exists and fires the chart type constructor.",
                        "url": "bbn-vue\/component\/chart\/methods\/init"
                    },
                    {
                        "text": "destroy",
                        "desc": "Destroys the component chart.",
                        "url": "bbn-vue\/component\/chart\/methods\/destroy"
                    },
                    {
                        "text": "setSizes",
                        "desc": "Set the dimensions, in height and width.",
                        "url": "bbn-vue\/component\/chart\/methods\/setSizes"
                    },
                    {
                        "text": "onResize",
                        "desc": "Re-adjust the dimensions, in height and width.",
                        "url": "bbn-vue\/component\/chart\/methods\/onResize"
                    },
                    {
                        "text": "updateWidget",
                        "desc": "Update chart.",
                        "url": "bbn-vue\/component\/chart\/methods\/updateWidget"
                    },
                    {
                        "text": "getLabels",
                        "desc": "Return list labels.",
                        "url": "bbn-vue\/component\/chart\/methods\/getLabels"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/chart\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/chart\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "chat",
                "url": "bbn-vue\/component\/chat\/overview",
                "props": [
                    {
                        "text": "userId",
                        "desc": "The id of the current user",
                        "url": "bbn-vue\/component\/chat\/props\/userId"
                    },
                    {
                        "text": "users",
                        "desc": "The array of all users.",
                        "url": "bbn-vue\/component\/chat\/props\/users"
                    },
                    {
                        "text": "groups",
                        "desc": "",
                        "url": "bbn-vue\/component\/chat\/props\/groups"
                    },
                    {
                        "text": "onlineUsers",
                        "desc": "The array of users currently online.",
                        "url": "bbn-vue\/component\/chat\/props\/onlineUsers"
                    },
                    {
                        "text": "online",
                        "desc": "True if the current user is online.",
                        "url": "bbn-vue\/component\/chat\/props\/online"
                    },
                    {
                        "text": "visible",
                        "desc": "Set to true shows the list of avalaible users.",
                        "url": "bbn-vue\/component\/chat\/props\/visible"
                    },
                    {
                        "text": "url",
                        "desc": "The url used for the actions of the chat.",
                        "url": "bbn-vue\/component\/chat\/props\/url"
                    },
                    {
                        "text": "windows",
                        "desc": "The array of opened windows",
                        "url": "bbn-vue\/component\/chat\/props\/windows"
                    }
                ],
                "methods": [
                    {
                        "text": "getField",
                        "desc": "Returns the method bbn.fn.getField.",
                        "url": "bbn-vue\/component\/chat\/methods\/getField"
                    },
                    {
                        "text": "chatTo",
                        "desc": "Opens the chat window selected from the list of online users.",
                        "url": "bbn-vue\/component\/chat\/methods\/chatTo"
                    },
                    {
                        "text": "relay",
                        "desc": "Create event send.",
                        "url": "bbn-vue\/component\/chat\/methods\/relay"
                    },
                    {
                        "text": "chatById",
                        "desc": "Return the current window object basing on the given chat id.",
                        "url": "bbn-vue\/component\/chat\/methods\/chatById"
                    },
                    {
                        "text": "addUser",
                        "desc": "Add a user to the given chat.",
                        "url": "bbn-vue\/component\/chat\/methods\/addUser"
                    },
                    {
                        "text": "sendMessage",
                        "desc": "Sends the current message.",
                        "url": "bbn-vue\/component\/chat\/methods\/sendMessage"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/chat\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/chat\/mixins\/localStorageComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/chat\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "checkbox",
                "url": "bbn-vue\/component\/checkbox\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value of the checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/value"
                    },
                    {
                        "text": "novalue",
                        "desc": "The value of the checkbox when unchecked.",
                        "url": "bbn-vue\/component\/checkbox\/props\/novalue"
                    },
                    {
                        "text": "name",
                        "desc": "The name of the component checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/name"
                    },
                    {
                        "text": "id",
                        "desc": "The id of the checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/id"
                    },
                    {
                        "text": "modelValue",
                        "desc": "",
                        "url": "bbn-vue\/component\/checkbox\/props\/modelValue"
                    },
                    {
                        "text": "required",
                        "desc": "Set to true to have required checkbox selection.",
                        "url": "bbn-vue\/component\/checkbox\/props\/required"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true to disable the checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/disabled"
                    },
                    {
                        "text": "readonly",
                        "desc": "Set to true for a readonly checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/readonly"
                    },
                    {
                        "text": "label",
                        "desc": "The accompanying label for the checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/label"
                    },
                    {
                        "text": "checked",
                        "desc": "Set to true for a checked checkbox.",
                        "url": "bbn-vue\/component\/checkbox\/props\/checked"
                    },
                    {
                        "text": "strict",
                        "desc": "",
                        "url": "bbn-vue\/component\/checkbox\/props\/strict"
                    }
                ],
                "methods": [
                    {
                        "text": "toggle",
                        "desc": "Emits a change when the state of the checkbox changes.",
                        "url": "bbn-vue\/component\/checkbox\/methods\/toggle"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/checkbox\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/checkbox\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/checkbox\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "clipboard",
                "url": "bbn-vue\/component\/clipboard\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/props\/orientation"
                    },
                    {
                        "text": "source",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/props\/source"
                    }
                ],
                "methods": [
                    {
                        "text": "unsearch",
                        "desc": "Emits a change when the state of the checkbox changes.",
                        "url": "bbn-vue\/component\/clipboard\/methods\/unsearch"
                    },
                    {
                        "text": "test",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/test"
                    },
                    {
                        "text": "togle",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/togle"
                    },
                    {
                        "text": "show",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/show"
                    },
                    {
                        "text": "hide",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/hide"
                    },
                    {
                        "text": "save",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/save"
                    },
                    {
                        "text": "saveAs",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/saveAs"
                    },
                    {
                        "text": "add",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/add"
                    },
                    {
                        "text": "remove",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/remove"
                    },
                    {
                        "text": "getItem",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/getItem"
                    },
                    {
                        "text": "updateSlider",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/updateSlider"
                    },
                    {
                        "text": "clear",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/clear"
                    },
                    {
                        "text": "copy",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/copy"
                    },
                    {
                        "text": "setClipboard",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/methods\/setClipboard"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/clipboard\/mixins\/localStorageComponent"
                    }
                ]
            },
            {
                "text": "code",
                "url": "bbn-vue\/component\/code\/overview",
                "props": [
                    {
                        "text": "ecma",
                        "desc": "The ecmascript version.",
                        "url": "bbn-vue\/component\/code\/props\/ecma"
                    },
                    {
                        "text": "mode",
                        "desc": "The language mode.",
                        "url": "bbn-vue\/component\/code\/props\/mode"
                    },
                    {
                        "text": "theme",
                        "desc": "Defines the style of the editor.",
                        "url": "bbn-vue\/component\/code\/props\/theme"
                    },
                    {
                        "text": "fill",
                        "desc": "Takes the full height of the container if set to true.",
                        "url": "bbn-vue\/component\/code\/props\/fill"
                    },
                    {
                        "text": "cfg",
                        "desc": "Configuration object.",
                        "url": "bbn-vue\/component\/code\/props\/cfg"
                    },
                    {
                        "text": "themeButton",
                        "desc": "Set to true to display a button that can change the theme of the component.",
                        "url": "bbn-vue\/component\/code\/props\/themeButton"
                    }
                ],
                "methods": [
                    {
                        "text": "getMode",
                        "desc": "Gets the preset options for the given mode from the constant modes.",
                        "url": "bbn-vue\/component\/code\/methods\/getMode"
                    },
                    {
                        "text": "getOptions",
                        "desc": "Gets the options for the editor.",
                        "url": "bbn-vue\/component\/code\/methods\/getOptions"
                    },
                    {
                        "text": "cursorPosition",
                        "desc": "Places the cursor at a defined point.",
                        "url": "bbn-vue\/component\/code\/methods\/cursorPosition"
                    },
                    {
                        "text": "getState",
                        "desc": "Returns an object with the selections, marks, folding and value.",
                        "url": "bbn-vue\/component\/code\/methods\/getState"
                    },
                    {
                        "text": "loadState",
                        "desc": "Loads the state, such as the last state saved.",
                        "url": "bbn-vue\/component\/code\/methods\/loadState"
                    },
                    {
                        "text": "nextTheme",
                        "desc": "If the property themeButton is set to true, clicking the button will change the theme of the editor.",
                        "url": "bbn-vue\/component\/code\/methods\/nextTheme"
                    },
                    {
                        "text": "foldByLevel",
                        "desc": "Folds the given level.",
                        "url": "bbn-vue\/component\/code\/methods\/foldByLevel"
                    },
                    {
                        "text": "foldByLevelRec",
                        "desc": "",
                        "url": "bbn-vue\/component\/code\/methods\/foldByLevelRec"
                    },
                    {
                        "text": "foldByNodeOrder",
                        "desc": "Folds the given node.",
                        "url": "bbn-vue\/component\/code\/methods\/foldByNodeOrder"
                    },
                    {
                        "text": "foldAll",
                        "desc": "Folds all nodes.",
                        "url": "bbn-vue\/component\/code\/methods\/foldAll"
                    },
                    {
                        "text": "unfoldAll",
                        "desc": "Undfolds all nodes.",
                        "url": "bbn-vue\/component\/code\/methods\/unfoldAll"
                    },
                    {
                        "text": "initTern",
                        "desc": "Initializes the component",
                        "url": "bbn-vue\/component\/code\/methods\/initTern"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/code\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/code\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/code\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "colorpicker",
                "url": "bbn-vue\/component\/colorpicker\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The colorpicker's value.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/value"
                    },
                    {
                        "text": "wheel",
                        "desc": "Shows the coolors wheel.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/wheel"
                    },
                    {
                        "text": "slider",
                        "desc": "Show a colors slider instead of the wheel.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/slider"
                    },
                    {
                        "text": "brightness",
                        "desc": "Shows the brightness slier",
                        "url": "bbn-vue\/component\/colorpicker\/props\/brightness"
                    },
                    {
                        "text": "saturation",
                        "desc": "Shows the saturation slider.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/saturation"
                    },
                    {
                        "text": "onlyPalette",
                        "desc": "Shows the colors palette only.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/onlyPalette"
                    },
                    {
                        "text": "color",
                        "desc": "The initial color.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/color"
                    },
                    {
                        "text": "showCodes",
                        "desc": "Set it to true to show an input containing the color code.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/showCodes"
                    },
                    {
                        "text": "palette",
                        "desc": "An array containing the list of colors by hex, rgb, rgba, or hsl.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/palette"
                    },
                    {
                        "text": "emptyButton",
                        "desc": "Shows a button that empties the selection when clicked.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/emptyButton"
                    },
                    {
                        "text": "codeColor",
                        "desc": "Defines the color code.\nAccepted values: 'hex', 'rgb', 'rgba', 'hsl'.",
                        "url": "bbn-vue\/component\/colorpicker\/props\/codeColor"
                    }
                ],
                "methods": [
                    {
                        "text": "onResize",
                        "desc": "The method called at the window resize event.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/onResize"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the widget.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/init"
                    },
                    {
                        "text": "setCurrents",
                        "desc": "Sets the current values.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/setCurrents"
                    },
                    {
                        "text": "setEvents",
                        "desc": "Sets the events to the widget.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/setEvents"
                    },
                    {
                        "text": "unsetEvents",
                        "desc": "Unsets the widget's events.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/unsetEvents"
                    },
                    {
                        "text": "destroy",
                        "desc": "Destroys the widget.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/destroy"
                    },
                    {
                        "text": "empty",
                        "desc": "Empties the current calue.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/empty"
                    },
                    {
                        "text": "save",
                        "desc": "Sets the component value.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/save"
                    },
                    {
                        "text": "setColor",
                        "desc": "Sets the color to the widget.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/setColor"
                    },
                    {
                        "text": "fromInput",
                        "desc": "Sets the color inserted from the inputs.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/fromInput"
                    },
                    {
                        "text": "openCloseFloater",
                        "desc": "Opens\/closes the floater.",
                        "url": "bbn-vue\/component\/colorpicker\/methods\/openCloseFloater"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/colorpicker\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/colorpicker\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/colorpicker\/mixins\/eventsComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/colorpicker\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "combo",
                "url": "bbn-vue\/component\/combo\/overview",
                "props": [],
                "methods": [
                    {
                        "text": "leave",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/methods\/leave"
                    },
                    {
                        "text": "select",
                        "desc": "Emits the event 'select'",
                        "url": "bbn-vue\/component\/combo\/methods\/select"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/inputComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/listComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/keynavComponent"
                    },
                    {
                        "text": "urlComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/urlComponent"
                    },
                    {
                        "text": "dropdownComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/combo\/mixins\/dropdownComponent"
                    }
                ]
            },
            {
                "text": "container",
                "url": "bbn-vue\/component\/container\/overview",
                "props": [
                    {
                        "text": "idx",
                        "desc": "The index of the container",
                        "url": "bbn-vue\/component\/container\/props\/idx"
                    }
                ],
                "methods": [
                    {
                        "text": "getFullCurrentURL",
                        "desc": "Returns the full current url.",
                        "url": "bbn-vue\/component\/container\/methods\/getFullCurrentURL"
                    },
                    {
                        "text": "getFullURL",
                        "desc": "Returns the full url.",
                        "url": "bbn-vue\/component\/container\/methods\/getFullURL"
                    },
                    {
                        "text": "setLoaded",
                        "desc": "Sets the value of the property loaded to the given val.",
                        "url": "bbn-vue\/component\/container\/methods\/setLoaded"
                    },
                    {
                        "text": "randomName",
                        "desc": "Generates a random name used for the component.",
                        "url": "bbn-vue\/component\/container\/methods\/randomName"
                    },
                    {
                        "text": "show",
                        "desc": "Shows the container.",
                        "url": "bbn-vue\/component\/container\/methods\/show"
                    },
                    {
                        "text": "hide",
                        "desc": "Hides the container.",
                        "url": "bbn-vue\/component\/container\/methods\/hide"
                    },
                    {
                        "text": "setCurrent",
                        "desc": "Sets the current url.",
                        "url": "bbn-vue\/component\/container\/methods\/setCurrent"
                    },
                    {
                        "text": "setTitle",
                        "desc": "Sets the title of the container.",
                        "url": "bbn-vue\/component\/container\/methods\/setTitle"
                    },
                    {
                        "text": "setColor",
                        "desc": "Sets the color.",
                        "url": "bbn-vue\/component\/container\/methods\/setColor"
                    },
                    {
                        "text": "popup",
                        "desc": "Gets the popup object.",
                        "url": "bbn-vue\/component\/container\/methods\/popup"
                    },
                    {
                        "text": "getComponent",
                        "desc": "Gets the child component.",
                        "url": "bbn-vue\/component\/container\/methods\/getComponent"
                    },
                    {
                        "text": "enter",
                        "desc": "Fires the parent's method enter.",
                        "url": "bbn-vue\/component\/container\/methods\/enter"
                    },
                    {
                        "text": "reload",
                        "desc": "Fires the parent's method reload.",
                        "url": "bbn-vue\/component\/container\/methods\/reload"
                    },
                    {
                        "text": "deleteMenu",
                        "desc": "Deletes the given key from the container's menu.",
                        "url": "bbn-vue\/component\/container\/methods\/deleteMenu"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the component.",
                        "url": "bbn-vue\/component\/container\/methods\/init"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/container\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/container\/mixins\/resizerComponent"
                    },
                    {
                        "text": "viewComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/container\/mixins\/viewComponent"
                    },
                    {
                        "text": "observerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/container\/mixins\/observerComponent"
                    }
                ]
            },
            {
                "text": "context",
                "url": "bbn-vue\/component\/context\/overview",
                "props": [
                    {
                        "text": "tag",
                        "desc": "The html tag used to render the property content.",
                        "url": "bbn-vue\/component\/context\/props\/tag"
                    },
                    {
                        "text": "context",
                        "desc": "Set to true to show the floating element containing the menu.",
                        "url": "bbn-vue\/component\/context\/props\/context"
                    },
                    {
                        "text": "content",
                        "desc": "The content of the context menu.",
                        "url": "bbn-vue\/component\/context\/props\/content"
                    },
                    {
                        "text": "mode",
                        "desc": "Selection mode.",
                        "url": "bbn-vue\/component\/context\/props\/mode"
                    },
                    {
                        "text": "children",
                        "desc": "",
                        "url": "bbn-vue\/component\/context\/props\/children"
                    },
                    {
                        "text": "itemComponent",
                        "desc": "The component used by list's items.",
                        "url": "bbn-vue\/component\/context\/props\/itemComponent"
                    }
                ],
                "methods": [
                    {
                        "text": "clickItem",
                        "desc": "Based on the type of event and on the property context, shows or hides the floating element of the menu.",
                        "url": "bbn-vue\/component\/context\/methods\/clickItem"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/context\/mixins\/basicComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/context\/mixins\/listComponent"
                    },
                    {
                        "text": "dimensionsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/context\/mixins\/dimensionsComponent"
                    }
                ]
            },
            {
                "text": "countdown",
                "url": "bbn-vue\/component\/countdown\/overview",
                "props": [
                    {
                        "text": "precision",
                        "desc": "The precision of the countdown.",
                        "url": "bbn-vue\/component\/countdown\/props\/precision"
                    },
                    {
                        "text": "scale",
                        "desc": "The scale of the countdown.",
                        "url": "bbn-vue\/component\/countdown\/props\/scale"
                    },
                    {
                        "text": "target",
                        "desc": "The target date.",
                        "url": "bbn-vue\/component\/countdown\/props\/target"
                    },
                    {
                        "text": "showZero",
                        "desc": "Shows unit even if empty.",
                        "url": "bbn-vue\/component\/countdown\/props\/showZero"
                    },
                    {
                        "text": "zeroFill",
                        "desc": "Set to true the remaining day and month and year will be displayed.",
                        "url": "bbn-vue\/component\/countdown\/props\/zeroFill"
                    }
                ],
                "methods": [
                    {
                        "text": "check",
                        "desc": "Checks if the component has been correctly set up.",
                        "url": "bbn-vue\/component\/countdown\/methods\/check"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the component.",
                        "url": "bbn-vue\/component\/countdown\/methods\/init"
                    },
                    {
                        "text": "update",
                        "desc": "Udates the component.",
                        "url": "bbn-vue\/component\/countdown\/methods\/update"
                    },
                    {
                        "text": "getShow",
                        "desc": "Returns the descriptive list of units used in the countdown.",
                        "url": "bbn-vue\/component\/countdown\/methods\/getShow"
                    },
                    {
                        "text": "getText",
                        "desc": "Returns the descriptive list of units used in the countdown with the value that contains it when calling this function.",
                        "url": "bbn-vue\/component\/countdown\/methods\/getText"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/countdown\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "dashboard",
                "url": "bbn-vue\/component\/dashboard\/overview",
                "props": [
                    {
                        "text": "components",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/props\/components"
                    },
                    {
                        "text": "max",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/props\/max"
                    },
                    {
                        "text": "selectable",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/props\/selectable"
                    },
                    {
                        "text": "closable",
                        "desc": "Set to true makes the widgets inside the dashboard closeable.",
                        "url": "bbn-vue\/component\/dashboard\/props\/closable"
                    },
                    {
                        "text": "sortable",
                        "desc": "Set to true makes the widgets in the dashboard sortable.",
                        "url": "bbn-vue\/component\/dashboard\/props\/sortable"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Set to true makes the dashboard scrollable.",
                        "url": "bbn-vue\/component\/dashboard\/props\/scrollable"
                    },
                    {
                        "text": "source",
                        "desc": "The source of the dashboard.",
                        "url": "bbn-vue\/component\/dashboard\/props\/source"
                    },
                    {
                        "text": "url",
                        "desc": "The url for the post, in case of actions on the dashboard's widgets.",
                        "url": "bbn-vue\/component\/dashboard\/props\/url"
                    },
                    {
                        "text": "loadedConfig",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/props\/loadedConfig"
                    },
                    {
                        "text": "order",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/props\/order"
                    },
                    {
                        "text": "cfg",
                        "desc": "The object of configuration of the dashboard.",
                        "url": "bbn-vue\/component\/dashboard\/props\/cfg"
                    }
                ],
                "methods": [
                    {
                        "text": "setConfig",
                        "desc": "Sets the configuration of the dashboard.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/setConfig"
                    },
                    {
                        "text": "closeWidget",
                        "desc": "Close widget in dashboard.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/closeWidget"
                    },
                    {
                        "text": "getWidget",
                        "desc": "Gets the widget corresponding to the given key.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/getWidget"
                    },
                    {
                        "text": "hideWidget",
                        "desc": "Hides the widget corresponding to the given key.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/hideWidget"
                    },
                    {
                        "text": "hideWidget",
                        "desc": "Shows the widget corresponding to the given key.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/hideWidget"
                    },
                    {
                        "text": "toggleWidget",
                        "desc": "Hides or not the widget corresponding to the given key.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/toggleWidget"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the component.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/onResize"
                    },
                    {
                        "text": "moveWidgets",
                        "desc": "Move the widget from the old index to the new index",
                        "url": "bbn-vue\/component\/dashboard\/methods\/moveWidgets"
                    },
                    {
                        "text": "move",
                        "desc": "Move the widget from the old index to the new index considering the hidden widgets.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/move"
                    },
                    {
                        "text": "updateMenu",
                        "desc": "Updates the menu of the parent container.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/updateMenu"
                    },
                    {
                        "text": "mouseEnterWidget",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/methods\/mouseEnterWidget"
                    },
                    {
                        "text": "updateWidget",
                        "desc": "Update configuration of the given widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/updateWidget"
                    },
                    {
                        "text": "setWidgetStorage",
                        "desc": "Sets the storage of the given widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/setWidgetStorage"
                    },
                    {
                        "text": "setWidgetStorage",
                        "desc": "Sets the storage of the given widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/setWidgetStorage"
                    },
                    {
                        "text": "normalize",
                        "desc": "Normalizes the properties of the given object.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/normalize"
                    },
                    {
                        "text": "add",
                        "desc": "Adds the given widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/add"
                    },
                    {
                        "text": "resizeScroll",
                        "desc": "Handles the resize of the scroll.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/resizeScroll"
                    },
                    {
                        "text": "init",
                        "desc": "Adds bbns-widget from the slot.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/init"
                    },
                    {
                        "text": "initWidgets",
                        "desc": "Adds bbns-widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/initWidgets"
                    },
                    {
                        "text": "setCurrentSlots",
                        "desc": "Sets the currentSlots property based to the widgets' visibility into the slots.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/setCurrentSlots"
                    },
                    {
                        "text": "dragging",
                        "desc": "For dragging widget.",
                        "url": "bbn-vue\/component\/dashboard\/methods\/dragging"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/mixins\/resizerComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dashboard\/mixins\/localStorageComponent"
                    }
                ]
            },
            {
                "text": "datepicker",
                "url": "bbn-vue\/component\/datepicker\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The array of events for each day.\nWhen a string is set, an ajax call will be made to the corresponding url.",
                        "url": "bbn-vue\/component\/datepicker\/props\/source"
                    },
                    {
                        "text": "format",
                        "desc": "The format of the date displayed.",
                        "url": "bbn-vue\/component\/datepicker\/props\/format"
                    },
                    {
                        "text": "valueFormat",
                        "desc": "The format of the value.",
                        "url": "bbn-vue\/component\/datepicker\/props\/valueFormat"
                    },
                    {
                        "text": "mask",
                        "desc": "The mask for the date input.",
                        "url": "bbn-vue\/component\/datepicker\/props\/mask"
                    },
                    {
                        "text": "max",
                        "desc": "The maximum allowed value.",
                        "url": "bbn-vue\/component\/datepicker\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The minimum allowed value.",
                        "url": "bbn-vue\/component\/datepicker\/props\/min"
                    },
                    {
                        "text": "type",
                        "desc": "The visualization mode.\nAllowed values: days, weeks, months and years.",
                        "url": "bbn-vue\/component\/datepicker\/props\/type"
                    },
                    {
                        "text": "disableDates",
                        "desc": "The disabled dates.",
                        "url": "bbn-vue\/component\/datepicker\/props\/disableDates"
                    },
                    {
                        "text": "datesRange",
                        "desc": "Array of date values insertable into a range.",
                        "url": "bbn-vue\/component\/datepicker\/props\/datesRange"
                    },
                    {
                        "text": "autosize",
                        "desc": "Set it to false if you dont' want to auto-resize the input's width based on its value (in characters).",
                        "url": "bbn-vue\/component\/datepicker\/props\/autosize"
                    },
                    {
                        "text": "onlyEvents",
                        "desc": "Shows only dates with events.",
                        "url": "bbn-vue\/component\/datepicker\/props\/onlyEvents"
                    }
                ],
                "methods": [
                    {
                        "text": "getValueFormat",
                        "desc": "Gets the correct value format.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/getValueFormat"
                    },
                    {
                        "text": "setDate",
                        "desc": "Sets the value to the 'YYYY-MM-DD' format.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/setDate"
                    },
                    {
                        "text": "setValue",
                        "desc": "Sets the value.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/setValue"
                    },
                    {
                        "text": "updateCalendar",
                        "desc": "Updates the calendar.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/updateCalendar"
                    },
                    {
                        "text": "inputChanged",
                        "desc": "The method called by the input blur event.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/inputChanged"
                    },
                    {
                        "text": "setInputValue",
                        "desc": "Set the new value by updating the calendar.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/setInputValue"
                    },
                    {
                        "text": "clear",
                        "desc": "Clears the value.",
                        "url": "bbn-vue\/component\/datepicker\/methods\/clear"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datepicker\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datepicker\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datepicker\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "datetimepicker",
                "url": "bbn-vue\/component\/datetimepicker\/overview",
                "props": [
                    {
                        "text": "format",
                        "desc": "The format of the date and time displayed in the user interface.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/format"
                    },
                    {
                        "text": "valueFormat",
                        "desc": "The format of the date and time sent to the server.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/valueFormat"
                    },
                    {
                        "text": "mask",
                        "desc": "The mask for date input.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/mask"
                    },
                    {
                        "text": "max",
                        "desc": "The maximum allowed value.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The minimum allowed value.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/min"
                    },
                    {
                        "text": "disableDates",
                        "desc": "The disabled dates.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/disableDates"
                    },
                    {
                        "text": "datesRange",
                        "desc": "The array of date values insertable into a range.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/datesRange"
                    },
                    {
                        "text": "showSecond",
                        "desc": "Shows\/hides the seconds selection.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/showSecond"
                    },
                    {
                        "text": "scrollMode",
                        "desc": "Shows an alternative view for the time selection instead of the dropdowns.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/scrollMode"
                    },
                    {
                        "text": "blocksMode",
                        "desc": "Shows an alternative view for the time selection instead of the dropdowns.",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/blocksMode"
                    },
                    {
                        "text": "autosize",
                        "desc": "Set it to false if you dont' want to auto-resize the input's width based on its value (in characters).",
                        "url": "bbn-vue\/component\/datetimepicker\/props\/autosize"
                    }
                ],
                "methods": [
                    {
                        "text": "showCalendar",
                        "desc": "Shows\/hides the calendar's floater.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/showCalendar"
                    },
                    {
                        "text": "showTime",
                        "desc": "Shows\/hides the time's floater",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/showTime"
                    },
                    {
                        "text": "getValueFormat",
                        "desc": "Gets the correct value format.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/getValueFormat"
                    },
                    {
                        "text": "setDate",
                        "desc": "Sets the value from 'YYYY-MM-DD' formatted value.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/setDate"
                    },
                    {
                        "text": "setTime",
                        "desc": "Sets the value format from 'HH:mm' to 'HH:mm:ss'.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/setTime"
                    },
                    {
                        "text": "setValue",
                        "desc": "Sets the value.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/setValue"
                    },
                    {
                        "text": "updateCalendar",
                        "desc": "Updates the calendar.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/updateCalendar"
                    },
                    {
                        "text": "inputChanged",
                        "desc": "The method initialized by the input blur event.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/inputChanged"
                    },
                    {
                        "text": "setInputValue",
                        "desc": "The method value input.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/setInputValue"
                    },
                    {
                        "text": "clear",
                        "desc": "clears any contained value in input.",
                        "url": "bbn-vue\/component\/datetimepicker\/methods\/clear"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datetimepicker\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datetimepicker\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/datetimepicker\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "dropdown",
                "url": "bbn-vue\/component\/dropdown\/overview",
                "props": [],
                "methods": [
                    {
                        "text": "keydown",
                        "desc": "States the role of the enter key on the dropdown menu.",
                        "url": "bbn-vue\/component\/dropdown\/methods\/keydown"
                    },
                    {
                        "text": "keydown",
                        "desc": "Leave list.",
                        "url": "bbn-vue\/component\/dropdown\/methods\/keydown"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/inputComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/listComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/keynavComponent"
                    },
                    {
                        "text": "urlComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/urlComponent"
                    },
                    {
                        "text": "dropdownComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/dropdown\/mixins\/dropdownComponent"
                    }
                ]
            },
            {
                "text": "field",
                "url": "bbn-vue\/component\/field\/overview",
                "props": [
                    {
                        "text": "mode",
                        "desc": "The mode of the component.",
                        "url": "bbn-vue\/component\/field\/props\/mode"
                    }
                ],
                "methods": [
                    {
                        "text": "init",
                        "desc": "Initializes the component.",
                        "url": "bbn-vue\/component\/field\/methods\/init"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/field\/mixins\/basicComponent"
                    },
                    {
                        "text": "fieldComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/field\/mixins\/fieldComponent"
                    }
                ]
            },
            {
                "text": "file",
                "url": "bbn-vue\/component\/file\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "filter",
                "url": "bbn-vue\/component\/filter\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value of the filter.",
                        "url": "bbn-vue\/component\/filter\/props\/value"
                    },
                    {
                        "text": "operator",
                        "desc": "The operator of the filter.",
                        "url": "bbn-vue\/component\/filter\/props\/operator"
                    },
                    {
                        "text": "operators",
                        "desc": "",
                        "url": "bbn-vue\/component\/filter\/props\/operators"
                    },
                    {
                        "text": "conditions",
                        "desc": "The pre-existing conditions.",
                        "url": "bbn-vue\/component\/filter\/props\/conditions"
                    },
                    {
                        "text": "logic",
                        "desc": "The previously chosen logic 'AND' or 'OR'.",
                        "url": "bbn-vue\/component\/filter\/props\/logic"
                    },
                    {
                        "text": "fields",
                        "desc": "The list of fields given to the filter.",
                        "url": "bbn-vue\/component\/filter\/props\/fields"
                    },
                    {
                        "text": "num",
                        "desc": "",
                        "url": "bbn-vue\/component\/filter\/props\/num"
                    },
                    {
                        "text": "index",
                        "desc": "",
                        "url": "bbn-vue\/component\/filter\/props\/index"
                    },
                    {
                        "text": "component",
                        "desc": "The component used for a single filter.",
                        "url": "bbn-vue\/component\/filter\/props\/component"
                    },
                    {
                        "text": "componentOptions",
                        "desc": "The component options used for a single filter.",
                        "url": "bbn-vue\/component\/filter\/props\/componentOptions"
                    },
                    {
                        "text": "field",
                        "desc": "The column's value for a single column filter.",
                        "url": "bbn-vue\/component\/filter\/props\/field"
                    },
                    {
                        "text": "multi",
                        "desc": "True if the component is multi-filter.",
                        "url": "bbn-vue\/component\/filter\/props\/multi"
                    },
                    {
                        "text": "type",
                        "desc": "The type of data for the operators.",
                        "url": "bbn-vue\/component\/filter\/props\/type"
                    }
                ],
                "methods": [
                    {
                        "text": "over",
                        "desc": "Alters the filter's style on mouseover event.",
                        "url": "bbn-vue\/component\/filter\/methods\/over"
                    },
                    {
                        "text": "out",
                        "desc": "Alters the filter's style on mouseout event.",
                        "url": "bbn-vue\/component\/filter\/methods\/out"
                    },
                    {
                        "text": "setCondition",
                        "desc": "Sets the conditions for the filter.",
                        "url": "bbn-vue\/component\/filter\/methods\/setCondition"
                    },
                    {
                        "text": "unsetCondition",
                        "desc": "Removes the set filter conditions.",
                        "url": "bbn-vue\/component\/filter\/methods\/unsetCondition"
                    },
                    {
                        "text": "hasFields",
                        "desc": "Returns the number of fields.",
                        "url": "bbn-vue\/component\/filter\/methods\/hasFields"
                    },
                    {
                        "text": "condition_text",
                        "desc": "Styles the text based on the given condition.",
                        "url": "bbn-vue\/component\/filter\/methods\/condition_text"
                    },
                    {
                        "text": "delete_full_condition",
                        "desc": "Completely deletes the conditions of the given index.",
                        "url": "bbn-vue\/component\/filter\/methods\/delete_full_condition"
                    },
                    {
                        "text": "delete_condition",
                        "desc": "Deletes the given condition.",
                        "url": "bbn-vue\/component\/filter\/methods\/delete_condition"
                    },
                    {
                        "text": "add_group",
                        "desc": "Adds a condition to the given index.",
                        "url": "bbn-vue\/component\/filter\/methods\/add_group"
                    },
                    {
                        "text": "delete_group",
                        "desc": "Deletes a condition.",
                        "url": "bbn-vue\/component\/filter\/methods\/delete_group"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/filter\/mixins\/basicComponent"
                    },
                    {
                        "text": "dataEditorComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/filter\/mixins\/dataEditorComponent"
                    }
                ]
            },
            {
                "text": "finder",
                "url": "bbn-vue\/component\/finder\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "fisheye",
                "url": "bbn-vue\/component\/fisheye\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the component",
                        "url": "bbn-vue\/component\/fisheye\/props\/source"
                    },
                    {
                        "text": "fixedLeft",
                        "desc": "An array of items fixed on the left of the component",
                        "url": "bbn-vue\/component\/fisheye\/props\/fixedLeft"
                    },
                    {
                        "text": "fixedRight",
                        "desc": "An array of items fixed on the right of the component",
                        "url": "bbn-vue\/component\/fisheye\/props\/fixedRight"
                    },
                    {
                        "text": "zIndex",
                        "desc": "The zIndex of the component",
                        "url": "bbn-vue\/component\/fisheye\/props\/zIndex"
                    }
                ],
                "methods": [
                    {
                        "text": "onClick",
                        "desc": "Fires the action given to the item",
                        "url": "bbn-vue\/component\/fisheye\/methods\/onClick"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/fisheye\/mixins\/basicComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/fisheye\/mixins\/listComponent"
                    }
                ]
            },
            {
                "text": "floater",
                "url": "bbn-vue\/component\/floater\/overview",
                "props": [
                    {
                        "text": "container",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/props\/container"
                    },
                    {
                        "text": "content",
                        "desc": "The html content of the floater.",
                        "url": "bbn-vue\/component\/floater\/props\/content"
                    },
                    {
                        "text": "element",
                        "desc": "The element used in the render of the floater.",
                        "url": "bbn-vue\/component\/floater\/props\/element"
                    },
                    {
                        "text": "orientation",
                        "desc": "The floater's orientation.",
                        "url": "bbn-vue\/component\/floater\/props\/orientation"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Defines the ability of the floater to be scrollable.",
                        "url": "bbn-vue\/component\/floater\/props\/scrollable"
                    },
                    {
                        "text": "visible",
                        "desc": "Set to true to show the floater.",
                        "url": "bbn-vue\/component\/floater\/props\/visible"
                    },
                    {
                        "text": "mode",
                        "desc": "The list selection mode.",
                        "url": "bbn-vue\/component\/floater\/props\/mode"
                    },
                    {
                        "text": "level",
                        "desc": "The hierarchical level, root is 0, and for each generation 1 is added to the level.",
                        "url": "bbn-vue\/component\/floater\/props\/level"
                    },
                    {
                        "text": "itemComponent",
                        "desc": "The component used for the items.",
                        "url": "bbn-vue\/component\/floater\/props\/itemComponent"
                    },
                    {
                        "text": "autoHide",
                        "desc": "Set to true to auto-hide the component.",
                        "url": "bbn-vue\/component\/floater\/props\/autoHide"
                    },
                    {
                        "text": "closable",
                        "desc": "Set to true to show the icon that allows the closing of the floater.",
                        "url": "bbn-vue\/component\/floater\/props\/closable"
                    },
                    {
                        "text": "maximizable",
                        "desc": "Set to true to show the icon that allows the maximization of the window.",
                        "url": "bbn-vue\/component\/floater\/props\/maximizable"
                    },
                    {
                        "text": "maximizable",
                        "desc": "Set to true to open and close the window with opacity animation.",
                        "url": "bbn-vue\/component\/floater\/props\/maximizable"
                    },
                    {
                        "text": "latency",
                        "desc": "The latency of the floater.",
                        "url": "bbn-vue\/component\/floater\/props\/latency"
                    }
                ],
                "methods": [
                    {
                        "text": "getContainerPosition",
                        "desc": "Defines the position of the container.",
                        "url": "bbn-vue\/component\/floater\/methods\/getContainerPosition"
                    },
                    {
                        "text": "show",
                        "desc": "Shows the floater.",
                        "url": "bbn-vue\/component\/floater\/methods\/show"
                    },
                    {
                        "text": "hide",
                        "desc": "Hides the floater.",
                        "url": "bbn-vue\/component\/floater\/methods\/hide"
                    },
                    {
                        "text": "scrollResize",
                        "desc": "Handles the resize of the scroller.",
                        "url": "bbn-vue\/component\/floater\/methods\/scrollResize"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the component.",
                        "url": "bbn-vue\/component\/floater\/methods\/onResize"
                    },
                    {
                        "text": "blur",
                        "desc": "Closes the floater if the prop autoHide is set to true.",
                        "url": "bbn-vue\/component\/floater\/methods\/blur"
                    },
                    {
                        "text": "close",
                        "desc": "Closes the floater by hiding it.",
                        "url": "bbn-vue\/component\/floater\/methods\/close"
                    },
                    {
                        "text": "closeAll",
                        "desc": "Closes all levels.",
                        "url": "bbn-vue\/component\/floater\/methods\/closeAll"
                    },
                    {
                        "text": "select",
                        "desc": "Handles the selection of the floater's items.",
                        "url": "bbn-vue\/component\/floater\/methods\/select"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/basicComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/listComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/resizerComponent"
                    },
                    {
                        "text": "keepCoolComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/keepCoolComponent"
                    },
                    {
                        "text": "toggleComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/toggleComponent"
                    },
                    {
                        "text": "dimensionsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/dimensionsComponent"
                    },
                    {
                        "text": "positionComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/floater\/mixins\/positionComponent"
                    }
                ]
            },
            {
                "text": "form",
                "url": "bbn-vue\/component\/form\/overview",
                "props": [
                    {
                        "text": "prefilled",
                        "desc": "Set to true to enable the form's buttons without changing the form's content.",
                        "url": "bbn-vue\/component\/form\/props\/prefilled"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true to disable the form.",
                        "url": "bbn-vue\/component\/form\/props\/disabled"
                    },
                    {
                        "text": "blank",
                        "desc": "Set to true to make a postOut instead of a post when the form is submitted.",
                        "url": "bbn-vue\/component\/form\/props\/blank"
                    },
                    {
                        "text": "self",
                        "desc": "Set to true to give the attribute target the value '_self'.",
                        "url": "bbn-vue\/component\/form\/props\/self"
                    },
                    {
                        "text": "confirmMessage",
                        "desc": "A confirmation popup with a costumized message shown before the form is submitted.",
                        "url": "bbn-vue\/component\/form\/props\/confirmMessage"
                    },
                    {
                        "text": "confirmLeave",
                        "desc": "A confirmation popup with a costumized message shown before leaving the form.",
                        "url": "bbn-vue\/component\/form\/props\/confirmLeave"
                    },
                    {
                        "text": "action",
                        "desc": "The url contacted when submitting the form.",
                        "url": "bbn-vue\/component\/form\/props\/action"
                    },
                    {
                        "text": "success",
                        "desc": "A method called after a form is correctly submitted.",
                        "url": "bbn-vue\/component\/form\/props\/success"
                    },
                    {
                        "text": "failure",
                        "desc": "A method called after a form submission fails.",
                        "url": "bbn-vue\/component\/form\/props\/failure"
                    },
                    {
                        "text": "successMessage",
                        "desc": "A popup with a costumized message shown after a form is correctly submitted.",
                        "url": "bbn-vue\/component\/form\/props\/successMessage"
                    },
                    {
                        "text": "failureMessage",
                        "desc": "A popup with a costumized message shown after a form submission fails.",
                        "url": "bbn-vue\/component\/form\/props\/failureMessage"
                    },
                    {
                        "text": "method",
                        "desc": "The form's method of submission.",
                        "url": "bbn-vue\/component\/form\/props\/method"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Set to true to enable form scrolling.",
                        "url": "bbn-vue\/component\/form\/props\/scrollable"
                    },
                    {
                        "text": "buttons",
                        "desc": "The buttons shown on the form.",
                        "url": "bbn-vue\/component\/form\/props\/buttons"
                    },
                    {
                        "text": "source",
                        "desc": "The proper data used in the form.",
                        "url": "bbn-vue\/component\/form\/props\/source"
                    },
                    {
                        "text": "data",
                        "desc": "The additional data to be sent by the form.",
                        "url": "bbn-vue\/component\/form\/props\/data"
                    },
                    {
                        "text": "fixedFooter",
                        "desc": "Set to true to fix the form's footer.",
                        "url": "bbn-vue\/component\/form\/props\/fixedFooter"
                    },
                    {
                        "text": "schema",
                        "desc": "The form's schema generating the inputs.",
                        "url": "bbn-vue\/component\/form\/props\/schema"
                    },
                    {
                        "text": "sendModel",
                        "desc": "Set to true if the data property must be sent.",
                        "url": "bbn-vue\/component\/form\/props\/sendModel"
                    },
                    {
                        "text": "validation",
                        "desc": "Checks the fields' data before submitting the form.",
                        "url": "bbn-vue\/component\/form\/props\/validation"
                    },
                    {
                        "text": "windowed",
                        "desc": "If true, will consider itself as a unique element of a floater and will have its buttons incorporated in it \r\nwhereas if undefined will.",
                        "url": "bbn-vue\/component\/form\/props\/windowed"
                    },
                    {
                        "text": "fullSize",
                        "desc": "If true, will use the class bbn-overlay for its container.",
                        "url": "bbn-vue\/component\/form\/props\/fullSize"
                    }
                ],
                "methods": [
                    {
                        "text": "getModifications",
                        "desc": "Compares the actual data with the original data of the form to identify the differences.",
                        "url": "bbn-vue\/component\/form\/methods\/getModifications"
                    },
                    {
                        "text": "getData",
                        "desc": "Based on the prop 'sendModel', either the source of the form or an object of data contained in the form's fields is returned.",
                        "url": "bbn-vue\/component\/form\/methods\/getData"
                    },
                    {
                        "text": "isModified",
                        "desc": "Returns true if the form has been modified or if the value of the property 'prefilled' is true.",
                        "url": "bbn-vue\/component\/form\/methods\/isModified"
                    },
                    {
                        "text": "@param",
                        "desc": "Closes the popup containing the form.",
                        "url": "bbn-vue\/component\/form\/methods\/@param"
                    },
                    {
                        "text": "cancel",
                        "desc": "Cancels the changes and closes the window containing the form.",
                        "url": "bbn-vue\/component\/form\/methods\/cancel"
                    },
                    {
                        "text": "submit",
                        "desc": "Submits the form.",
                        "url": "bbn-vue\/component\/form\/methods\/submit"
                    },
                    {
                        "text": "reset",
                        "desc": "Resets the original data of the form.",
                        "url": "bbn-vue\/component\/form\/methods\/reset"
                    },
                    {
                        "text": "reinit",
                        "desc": "Reinitializes the form.",
                        "url": "bbn-vue\/component\/form\/methods\/reinit"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the form.",
                        "url": "bbn-vue\/component\/form\/methods\/init"
                    },
                    {
                        "text": "checkValidity",
                        "desc": "",
                        "url": "bbn-vue\/component\/form\/methods\/checkValidity"
                    },
                    {
                        "text": "reportValidity",
                        "desc": "",
                        "url": "bbn-vue\/component\/form\/methods\/reportValidity"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/form\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/form\/mixins\/localStorageComponent"
                    }
                ]
            },
            {
                "text": "frame",
                "url": "bbn-vue\/component\/frame\/overview",
                "props": [],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/frame\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "gallery",
                "url": "bbn-vue\/component\/gallery\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the component.",
                        "url": "bbn-vue\/component\/gallery\/props\/source"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Set to true to allow the component to have a scroll.",
                        "url": "bbn-vue\/component\/gallery\/props\/scrollable"
                    },
                    {
                        "text": "overlay",
                        "desc": "",
                        "url": "bbn-vue\/component\/gallery\/props\/overlay"
                    },
                    {
                        "text": "zoomable",
                        "desc": "Set to true to allow the gallery to be magnifiable.",
                        "url": "bbn-vue\/component\/gallery\/props\/zoomable"
                    },
                    {
                        "text": "pageable",
                        "desc": "Set to true to allow the gallery to be pageable.",
                        "url": "bbn-vue\/component\/gallery\/props\/pageable"
                    },
                    {
                        "text": "info",
                        "desc": "Set to true to show info on the gallery's footer.",
                        "url": "bbn-vue\/component\/gallery\/props\/info"
                    },
                    {
                        "text": "columnGap",
                        "desc": "The gap between the columns.",
                        "url": "bbn-vue\/component\/gallery\/props\/columnGap"
                    },
                    {
                        "text": "rowGap",
                        "desc": "The gap between the rows.",
                        "url": "bbn-vue\/component\/gallery\/props\/rowGap"
                    },
                    {
                        "text": "minCol",
                        "desc": "The minimum number of columns allowed.",
                        "url": "bbn-vue\/component\/gallery\/props\/minCol"
                    },
                    {
                        "text": "maxCol",
                        "desc": "The maximum number of columns allowed.",
                        "url": "bbn-vue\/component\/gallery\/props\/maxCol"
                    },
                    {
                        "text": "itemWidth",
                        "desc": "The width of the items.",
                        "url": "bbn-vue\/component\/gallery\/props\/itemWidth"
                    },
                    {
                        "text": "align",
                        "desc": "The horizontal alignment of the column.",
                        "url": "bbn-vue\/component\/gallery\/props\/align"
                    },
                    {
                        "text": "limit",
                        "desc": "The limit of items allowed.",
                        "url": "bbn-vue\/component\/gallery\/props\/limit"
                    },
                    {
                        "text": "map",
                        "desc": "A function to normalize the source.",
                        "url": "bbn-vue\/component\/gallery\/props\/map"
                    },
                    {
                        "text": "data",
                        "desc": "Additional data sent with the ajax call.",
                        "url": "bbn-vue\/component\/gallery\/props\/data"
                    },
                    {
                        "text": "upload",
                        "desc": "The function called when the toolbar's upload button is clicked.",
                        "url": "bbn-vue\/component\/gallery\/props\/upload"
                    },
                    {
                        "text": "download",
                        "desc": "The function called when the toolbar's download button is clicked.",
                        "url": "bbn-vue\/component\/gallery\/props\/download"
                    },
                    {
                        "text": "remove",
                        "desc": "The function called when the toolbar's remove button is clicked.",
                        "url": "bbn-vue\/component\/gallery\/props\/remove"
                    },
                    {
                        "text": "preview",
                        "desc": "Displays a preview of items below the slideshow.",
                        "url": "bbn-vue\/component\/gallery\/props\/preview"
                    },
                    {
                        "text": "selectingMode",
                        "desc": "The selection mode.",
                        "url": "bbn-vue\/component\/gallery\/props\/selectingMode"
                    },
                    {
                        "text": "selected",
                        "desc": "The array of selected items.",
                        "url": "bbn-vue\/component\/gallery\/props\/selected"
                    }
                ],
                "methods": [
                    {
                        "text": "isObject",
                        "desc": "Alias of bbn.fn.isObject.",
                        "url": "bbn-vue\/component\/gallery\/methods\/isObject"
                    },
                    {
                        "text": "isVue",
                        "desc": "Alias of bbn.fn.isVue.",
                        "url": "bbn-vue\/component\/gallery\/methods\/isVue"
                    },
                    {
                        "text": "correctCase",
                        "desc": "Alias of bbn.fn.correctCase.",
                        "url": "bbn-vue\/component\/gallery\/methods\/correctCase"
                    },
                    {
                        "text": "updateData",
                        "desc": "Updates the component's data.",
                        "url": "bbn-vue\/component\/gallery\/methods\/updateData"
                    },
                    {
                        "text": "setSelecting",
                        "desc": "Sets the selectingMode data property.",
                        "url": "bbn-vue\/component\/gallery\/methods\/setSelecting"
                    },
                    {
                        "text": "action",
                        "desc": "Manages actions based on the data property selectingMode.",
                        "url": "bbn-vue\/component\/gallery\/methods\/action"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the component.",
                        "url": "bbn-vue\/component\/gallery\/methods\/onResize"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/gallery\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/gallery\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "grapes",
                "url": "bbn-vue\/component\/grapes\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "icon",
                "url": "bbn-vue\/component\/icon\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "initial",
                "url": "bbn-vue\/component\/initial\/overview",
                "props": [
                    {
                        "text": "userId",
                        "desc": "The user id whose initials will be represented.",
                        "url": "bbn-vue\/component\/initial\/props\/userId"
                    },
                    {
                        "text": "userName",
                        "desc": "The username whose initials will be represented.",
                        "url": "bbn-vue\/component\/initial\/props\/userName"
                    },
                    {
                        "text": "width",
                        "desc": "The width of the rectangle containing the initials.",
                        "url": "bbn-vue\/component\/initial\/props\/width"
                    },
                    {
                        "text": "height",
                        "desc": "The height of the rectangle containing the initials.",
                        "url": "bbn-vue\/component\/initial\/props\/height"
                    },
                    {
                        "text": "defaultSize",
                        "desc": "The dimensions given to the component as width and height.",
                        "url": "bbn-vue\/component\/initial\/props\/defaultSize"
                    },
                    {
                        "text": "charCount",
                        "desc": "The number of characters shown if the property 'letter' is not specified.",
                        "url": "bbn-vue\/component\/initial\/props\/charCount"
                    },
                    {
                        "text": "textColor",
                        "desc": "The color of the text.",
                        "url": "bbn-vue\/component\/initial\/props\/textColor"
                    },
                    {
                        "text": "fontFamily",
                        "desc": "The text's font family.",
                        "url": "bbn-vue\/component\/initial\/props\/fontFamily"
                    },
                    {
                        "text": "color",
                        "desc": "The rectangle's background color.",
                        "url": "bbn-vue\/component\/initial\/props\/color"
                    },
                    {
                        "text": "fontSize",
                        "desc": "The font-size of the initials.",
                        "url": "bbn-vue\/component\/initial\/props\/fontSize"
                    },
                    {
                        "text": "fontWeight",
                        "desc": "The font-weight of the initials.",
                        "url": "bbn-vue\/component\/initial\/props\/fontWeight"
                    },
                    {
                        "text": "letters",
                        "desc": "The letters shown in the component if neither the userName or the userId are given.",
                        "url": "bbn-vue\/component\/initial\/props\/letters"
                    },
                    {
                        "text": "radius",
                        "desc": "The border-radius of the main container.",
                        "url": "bbn-vue\/component\/initial\/props\/radius"
                    },
                    {
                        "text": "source",
                        "desc": "The array of users.",
                        "url": "bbn-vue\/component\/initial\/props\/source"
                    },
                    {
                        "text": "nameField",
                        "desc": "The name of the property containing the user's name in the array source.",
                        "url": "bbn-vue\/component\/initial\/props\/nameField"
                    },
                    {
                        "text": "idField",
                        "desc": "The name of the property containing the user's id in the array source.",
                        "url": "bbn-vue\/component\/initial\/props\/idField"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/initial\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "input",
                "url": "bbn-vue\/component\/input\/overview",
                "props": [
                    {
                        "text": "loading",
                        "desc": "Specifies whether a loading icon isshown inside the input field.",
                        "url": "bbn-vue\/component\/input\/props\/loading"
                    },
                    {
                        "text": "autocomplete",
                        "desc": "Specifies whether or not the input field should have autocomplete enabled. Accepts boolean or the strings 'on' or 'off'.",
                        "url": "bbn-vue\/component\/input\/props\/autocomplete"
                    },
                    {
                        "text": "type",
                        "desc": "The type of the input.",
                        "url": "bbn-vue\/component\/input\/props\/type"
                    },
                    {
                        "text": "buttonLeft",
                        "desc": "The button's icon on the left of the input.",
                        "url": "bbn-vue\/component\/input\/props\/buttonLeft"
                    },
                    {
                        "text": "buttonRight",
                        "desc": "The button's icon on the right of the input.",
                        "url": "bbn-vue\/component\/input\/props\/buttonRight"
                    },
                    {
                        "text": "autoHideLeft",
                        "desc": "Hides the left button.",
                        "url": "bbn-vue\/component\/input\/props\/autoHideLeft"
                    },
                    {
                        "text": "autoHideRight",
                        "desc": "Hides the right button.",
                        "url": "bbn-vue\/component\/input\/props\/autoHideRight"
                    },
                    {
                        "text": "pattern",
                        "desc": "The input's attribute 'pattern'.",
                        "url": "bbn-vue\/component\/input\/props\/pattern"
                    },
                    {
                        "text": "size",
                        "desc": "The size of the input.",
                        "url": "bbn-vue\/component\/input\/props\/size"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/input\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/input\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/input\/mixins\/inputComponent"
                    }
                ]
            },
            {
                "text": "jodit",
                "url": "bbn-vue\/component\/jodit\/overview",
                "props": [
                    {
                        "text": "height",
                        "desc": "The height of the editor",
                        "url": "bbn-vue\/component\/jodit\/props\/height"
                    },
                    {
                        "text": "buttons",
                        "desc": "The buttons to show on the toolbar",
                        "url": "bbn-vue\/component\/jodit\/props\/buttons"
                    },
                    {
                        "text": "cfgfg",
                        "desc": "The object of configuration",
                        "url": "bbn-vue\/component\/jodit\/props\/cfgfg"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/jodit\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/jodit\/mixins\/inputComponent"
                    }
                ]
            },
            {
                "text": "json-editor",
                "url": "bbn-vue\/component\/json-editor\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value of the json editor.",
                        "url": "bbn-vue\/component\/json-editor\/props\/value"
                    },
                    {
                        "text": "mode",
                        "desc": "Defines the mode of the json editor. Allowed values are 'tree', 'view', 'form', 'code' and 'text'.",
                        "url": "bbn-vue\/component\/json-editor\/props\/mode"
                    },
                    {
                        "text": "cfg",
                        "desc": "The object of configuration.",
                        "url": "bbn-vue\/component\/json-editor\/props\/cfg"
                    }
                ],
                "methods": [
                    {
                        "text": "getCfg",
                        "desc": "Gets the initial configuration of the component.",
                        "url": "bbn-vue\/component\/json-editor\/methods\/getCfg"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/json-editor\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/json-editor\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/json-editor\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "key",
                "url": "bbn-vue\/component\/key\/overview",
                "props": [
                    {
                        "text": "content",
                        "desc": "The content of the context menu.",
                        "url": "bbn-vue\/component\/key\/props\/content"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/key\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "list",
                "url": "bbn-vue\/component\/list\/overview",
                "props": [
                    {
                        "text": "container",
                        "desc": "",
                        "url": "bbn-vue\/component\/list\/props\/container"
                    },
                    {
                        "text": "maxWidth",
                        "desc": "The maximum width of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/maxWidth"
                    },
                    {
                        "text": "maxHeight",
                        "desc": "The maximum height of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/maxHeight"
                    },
                    {
                        "text": "minWidth",
                        "desc": "The minimum width of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/minWidth"
                    },
                    {
                        "text": "maxHeight",
                        "desc": "The minimum height of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/maxHeight"
                    },
                    {
                        "text": "width",
                        "desc": "The width of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/width"
                    },
                    {
                        "text": "height",
                        "desc": "The height of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/height"
                    },
                    {
                        "text": "left",
                        "desc": "The position 'left'.",
                        "url": "bbn-vue\/component\/list\/props\/left"
                    },
                    {
                        "text": "right",
                        "desc": "The position 'right'.",
                        "url": "bbn-vue\/component\/list\/props\/right"
                    },
                    {
                        "text": "top",
                        "desc": "The position 'top'.",
                        "url": "bbn-vue\/component\/list\/props\/top"
                    },
                    {
                        "text": "bottom",
                        "desc": "The position 'bottom'.",
                        "url": "bbn-vue\/component\/list\/props\/bottom"
                    },
                    {
                        "text": "source",
                        "desc": "The source of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/source"
                    },
                    {
                        "text": "content",
                        "desc": "The html content of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/content"
                    },
                    {
                        "text": "element",
                        "desc": "The element used in the render of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/element"
                    },
                    {
                        "text": "orientation",
                        "desc": "The floater's orientation.",
                        "url": "bbn-vue\/component\/list\/props\/orientation"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Defines the ability of the floater to be scrollable.",
                        "url": "bbn-vue\/component\/list\/props\/scrollable"
                    },
                    {
                        "text": "visible",
                        "desc": "Set to true to show the floater.",
                        "url": "bbn-vue\/component\/list\/props\/visible"
                    },
                    {
                        "text": "mode",
                        "desc": "The mode of the component.",
                        "url": "bbn-vue\/component\/list\/props\/mode"
                    },
                    {
                        "text": "level",
                        "desc": "The hierarchical level, root is 0, and for each generation 1 is added to the level.",
                        "url": "bbn-vue\/component\/list\/props\/level"
                    },
                    {
                        "text": "autoHide",
                        "desc": "Set to true to auto-hide the component.",
                        "url": "bbn-vue\/component\/list\/props\/autoHide"
                    },
                    {
                        "text": "children",
                        "desc": "The array containings the tree's children.",
                        "url": "bbn-vue\/component\/list\/props\/children"
                    },
                    {
                        "text": "closable",
                        "desc": "Set to true to show the icon that allows the closing of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/closable"
                    },
                    {
                        "text": "maximizable",
                        "desc": "Set to true to show the icon that allows the maximization of the window.",
                        "url": "bbn-vue\/component\/list\/props\/maximizable"
                    },
                    {
                        "text": "maximizable",
                        "desc": "Set to true to open and close the window with opacity animation.",
                        "url": "bbn-vue\/component\/list\/props\/maximizable"
                    },
                    {
                        "text": "latency",
                        "desc": "The latency of the floater.",
                        "url": "bbn-vue\/component\/list\/props\/latency"
                    }
                ],
                "methods": [
                    {
                        "text": "select",
                        "desc": "Handles the selection of the floater's items.",
                        "url": "bbn-vue\/component\/list\/methods\/select"
                    }
                ],
                "mixins": []
            },
            {
                "text": "list-input",
                "url": "bbn-vue\/component\/list-input\/overview",
                "props": [
                    {
                        "text": "mode",
                        "desc": "The mode of the component.",
                        "url": "bbn-vue\/component\/list-input\/props\/mode"
                    }
                ],
                "methods": [],
                "mixins": []
            },
            {
                "text": "loadbar",
                "url": "bbn-vue\/component\/loadbar\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the component",
                        "url": "bbn-vue\/component\/loadbar\/props\/source"
                    }
                ],
                "methods": [
                    {
                        "text": "renderDuration",
                        "desc": "Return the duration in seconds or milliseconds of a request",
                        "url": "bbn-vue\/component\/loadbar\/methods\/renderDuration"
                    },
                    {
                        "text": "cancel",
                        "desc": "Aborts the selected request",
                        "url": "bbn-vue\/component\/loadbar\/methods\/cancel"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/loadbar\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "loader",
                "url": "bbn-vue\/component\/loader\/overview",
                "props": [
                    {
                        "text": "loadingText",
                        "desc": "The text below the loader icon",
                        "url": "bbn-vue\/component\/loader\/props\/loadingText"
                    },
                    {
                        "text": "bgColor",
                        "desc": "The background color",
                        "url": "bbn-vue\/component\/loader\/props\/bgColor"
                    },
                    {
                        "text": "fontSize",
                        "desc": "The size of the font. Allowed values are 's', 'm', 'l', 'xl'",
                        "url": "bbn-vue\/component\/loader\/props\/fontSize"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/loader\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/loader\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "loadicon",
                "url": "bbn-vue\/component\/loadicon\/overview",
                "props": [
                    {
                        "text": "size",
                        "desc": "The size of the icon container",
                        "url": "bbn-vue\/component\/loadicon\/props\/size"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/loadicon\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "markdown",
                "url": "bbn-vue\/component\/markdown\/overview",
                "props": [
                    {
                        "text": "cfg",
                        "desc": "The object of configuration",
                        "url": "bbn-vue\/component\/markdown\/props\/cfg"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/markdown\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/markdown\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/markdown\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "masked",
                "url": "bbn-vue\/component\/masked\/overview",
                "props": [
                    {
                        "text": "mask",
                        "desc": "The required mask pattern.",
                        "url": "bbn-vue\/component\/masked\/props\/mask"
                    },
                    {
                        "text": "promptChar",
                        "desc": "The character used for the prompt.",
                        "url": "bbn-vue\/component\/masked\/props\/promptChar"
                    }
                ],
                "methods": [
                    {
                        "text": "isValidChar",
                        "desc": "Checks if the given character is valid, based on the mask's pattern.",
                        "url": "bbn-vue\/component\/masked\/methods\/isValidChar"
                    },
                    {
                        "text": "isSpecialKey",
                        "desc": "Checks if the pressed key is a special key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isSpecialKey"
                    },
                    {
                        "text": "isArrowKey",
                        "desc": "Cheks if the pressed key is an arrow key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isArrowKey"
                    },
                    {
                        "text": "isShiftKey",
                        "desc": "Checks if the pressed key is the \"shift\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isShiftKey"
                    },
                    {
                        "text": "isControlKey",
                        "desc": "Checks if the pressed key is the \"control\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isControlKey"
                    },
                    {
                        "text": "isBackspaceKey",
                        "desc": "Checks if the pressed key is the \"backspace\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isBackspaceKey"
                    },
                    {
                        "text": "isCancKey",
                        "desc": "Checks if the pressed key is the \"canc\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isCancKey"
                    },
                    {
                        "text": "isTabKey",
                        "desc": "Checks if the pressed key is the \"tab\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isTabKey"
                    },
                    {
                        "text": "isEnterKey",
                        "desc": "Checks if the pressed key is the \"enter\" key.",
                        "url": "bbn-vue\/component\/masked\/methods\/isEnterKey"
                    },
                    {
                        "text": "setInputValue",
                        "desc": "Sets the data property 'inputValue'.",
                        "url": "bbn-vue\/component\/masked\/methods\/setInputValue"
                    },
                    {
                        "text": "getInputValue",
                        "desc": "Gets the input value.",
                        "url": "bbn-vue\/component\/masked\/methods\/getInputValue"
                    },
                    {
                        "text": "getPos",
                        "desc": "Gets the correct cursor position.",
                        "url": "bbn-vue\/component\/masked\/methods\/getPos"
                    },
                    {
                        "text": "getIdxRange",
                        "desc": "Finds and returns the start and the end position of the value by two points of the inputValue.",
                        "url": "bbn-vue\/component\/masked\/methods\/getIdxRange"
                    },
                    {
                        "text": "keydownEvent",
                        "desc": "The method called on every key pressed (keydown event).",
                        "url": "bbn-vue\/component\/masked\/methods\/keydownEvent"
                    },
                    {
                        "text": "keyupEvent",
                        "desc": "The method called on every key pressed (keyup event).",
                        "url": "bbn-vue\/component\/masked\/methods\/keyupEvent"
                    },
                    {
                        "text": "inputEvent",
                        "desc": "The method called on input event.",
                        "url": "bbn-vue\/component\/masked\/methods\/inputEvent"
                    },
                    {
                        "text": "blurEvent",
                        "desc": "The method called on blur event.",
                        "url": "bbn-vue\/component\/masked\/methods\/blurEvent"
                    },
                    {
                        "text": "focusEvent",
                        "desc": "The method called on focus event.",
                        "url": "bbn-vue\/component\/masked\/methods\/focusEvent"
                    },
                    {
                        "text": "pasteEvent",
                        "desc": "The method called on paste event.",
                        "url": "bbn-vue\/component\/masked\/methods\/pasteEvent"
                    },
                    {
                        "text": "cutEvent",
                        "desc": "The method called on cut event.",
                        "url": "bbn-vue\/component\/masked\/methods\/cutEvent"
                    },
                    {
                        "text": "clearText",
                        "desc": "Removes the invalid characters from a string.",
                        "url": "bbn-vue\/component\/masked\/methods\/clearText"
                    },
                    {
                        "text": "raw",
                        "desc": "Gets the raw value.",
                        "url": "bbn-vue\/component\/masked\/methods\/raw"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/masked\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/masked\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/masked\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "menu",
                "url": "bbn-vue\/component\/menu\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "message",
                "url": "bbn-vue\/component\/message\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "multipart",
                "url": "bbn-vue\/component\/multipart\/overview",
                "props": [
                    {
                        "text": "prefilled",
                        "desc": "Set to true to enable the form's buttons without changing the form's content.",
                        "url": "bbn-vue\/component\/multipart\/props\/prefilled"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true to disable the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/disabled"
                    },
                    {
                        "text": "blank",
                        "desc": "Set to true to make a postOut instead of a post when the form is submitted.",
                        "url": "bbn-vue\/component\/multipart\/props\/blank"
                    },
                    {
                        "text": "self",
                        "desc": "Set to true to give the attribute target the value '_self'.",
                        "url": "bbn-vue\/component\/multipart\/props\/self"
                    },
                    {
                        "text": "confirmMessage",
                        "desc": "A confirmation popup with a costumized message shown before the form is submitted.",
                        "url": "bbn-vue\/component\/multipart\/props\/confirmMessage"
                    },
                    {
                        "text": "confirmLeave",
                        "desc": "A confirmation popup with a costumized message shown before leaving the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/confirmLeave"
                    },
                    {
                        "text": "action",
                        "desc": "The url contacted when submitting the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/action"
                    },
                    {
                        "text": "success",
                        "desc": "A method called after a form is correctly submitted.",
                        "url": "bbn-vue\/component\/multipart\/props\/success"
                    },
                    {
                        "text": "failure",
                        "desc": "A method called after a form submission fails.",
                        "url": "bbn-vue\/component\/multipart\/props\/failure"
                    },
                    {
                        "text": "successMessage",
                        "desc": "A popup with a costumized message shown after a form is correctly submitted.",
                        "url": "bbn-vue\/component\/multipart\/props\/successMessage"
                    },
                    {
                        "text": "failureMessage",
                        "desc": "A popup with a costumized message shown after a form submission fails.",
                        "url": "bbn-vue\/component\/multipart\/props\/failureMessage"
                    },
                    {
                        "text": "method",
                        "desc": "The form's method of submission.",
                        "url": "bbn-vue\/component\/multipart\/props\/method"
                    },
                    {
                        "text": "buttons",
                        "desc": "The buttons shown on the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/buttons"
                    },
                    {
                        "text": "source",
                        "desc": "The proper data used in the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/source"
                    },
                    {
                        "text": "data",
                        "desc": "The additional data to be sent by the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/data"
                    },
                    {
                        "text": "fixedFooter",
                        "desc": "Set to true to fix the form's footer.",
                        "url": "bbn-vue\/component\/multipart\/props\/fixedFooter"
                    },
                    {
                        "text": "schema",
                        "desc": "The form's schema generating the inputs.",
                        "url": "bbn-vue\/component\/multipart\/props\/schema"
                    },
                    {
                        "text": "sendModel",
                        "desc": "Set to true if the data property must be sent.",
                        "url": "bbn-vue\/component\/multipart\/props\/sendModel"
                    },
                    {
                        "text": "validation",
                        "desc": "Checks the fields' data before submitting the form.",
                        "url": "bbn-vue\/component\/multipart\/props\/validation"
                    },
                    {
                        "text": "windowed",
                        "desc": "If true, will consider itself as a unique element of a floater and will have its buttons incorporated in it \r\nwhereas if undefined will.",
                        "url": "bbn-vue\/component\/multipart\/props\/windowed"
                    },
                    {
                        "text": "fullSize",
                        "desc": "If true, will use the class bbn-overlay for its container.",
                        "url": "bbn-vue\/component\/multipart\/props\/fullSize"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multipart\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multipart\/mixins\/localStorageComponent"
                    }
                ]
            },
            {
                "text": "multiselect",
                "url": "bbn-vue\/component\/multiselect\/overview",
                "props": [
                    {
                        "text": "component",
                        "desc": "A component for each element of the list.",
                        "url": "bbn-vue\/component\/multiselect\/props\/component"
                    },
                    {
                        "text": "template",
                        "desc": "The template to costumize the dropdown menu.",
                        "url": "bbn-vue\/component\/multiselect\/props\/template"
                    },
                    {
                        "text": "valueTemplate",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/props\/valueTemplate"
                    },
                    {
                        "text": "group",
                        "desc": "Defines the groups for the dropdown menu.",
                        "url": "bbn-vue\/component\/multiselect\/props\/group"
                    },
                    {
                        "text": "nullable",
                        "desc": "If set to true the dropdown is not autofilled if empty",
                        "url": "bbn-vue\/component\/multiselect\/props\/nullable"
                    },
                    {
                        "text": "placeholder",
                        "desc": "The placeholder of the dropdown.",
                        "url": "bbn-vue\/component\/multiselect\/props\/placeholder"
                    }
                ],
                "methods": [
                    {
                        "text": "keynav",
                        "desc": "States the role of the enter button on the dropdown menu.",
                        "url": "bbn-vue\/component\/multiselect\/methods\/keynav"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/mixins\/eventsComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/mixins\/keynavComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/multiselect\/mixins\/listComponent"
                    }
                ]
            },
            {
                "text": "notification",
                "url": "bbn-vue\/component\/notification\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "numeric",
                "url": "bbn-vue\/component\/numeric\/overview",
                "props": [
                    {
                        "text": "decimals",
                        "desc": "Specify the number of decimals to be shown in the input, it doesn't affect the value of \nthe component.",
                        "url": "bbn-vue\/component\/numeric\/props\/decimals"
                    },
                    {
                        "text": "unit",
                        "desc": "The unit of measure of the value.",
                        "url": "bbn-vue\/component\/numeric\/props\/unit"
                    },
                    {
                        "text": "max",
                        "desc": "The max value of the component.",
                        "url": "bbn-vue\/component\/numeric\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The min value of the component.",
                        "url": "bbn-vue\/component\/numeric\/props\/min"
                    },
                    {
                        "text": "step",
                        "desc": "The step at which the value of the component change.",
                        "url": "bbn-vue\/component\/numeric\/props\/step"
                    },
                    {
                        "text": "spinners",
                        "desc": "Set to true shows the arrow buttons of the component.",
                        "url": "bbn-vue\/component\/numeric\/props\/spinners"
                    },
                    {
                        "text": "onlySpinners",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/props\/onlySpinners"
                    }
                ],
                "methods": [
                    {
                        "text": "checkDecimals",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/methods\/checkDecimals"
                    },
                    {
                        "text": "checkMinMax",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/methods\/checkMinMax"
                    },
                    {
                        "text": "increment",
                        "desc": "Increase the value of the component of 1 step.",
                        "url": "bbn-vue\/component\/numeric\/methods\/increment"
                    },
                    {
                        "text": "decrement",
                        "desc": "Decrease the value of the component of 1 step.",
                        "url": "bbn-vue\/component\/numeric\/methods\/decrement"
                    },
                    {
                        "text": "changeValue",
                        "desc": "Change the value of the component.",
                        "url": "bbn-vue\/component\/numeric\/methods\/changeValue"
                    },
                    {
                        "text": "setInputValue",
                        "desc": "Sets the value to the input (view mode)",
                        "url": "bbn-vue\/component\/numeric\/methods\/setInputValue"
                    },
                    {
                        "text": "getFormatted",
                        "desc": "Gets the formatted value",
                        "url": "bbn-vue\/component\/numeric\/methods\/getFormatted"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/numeric\/mixins\/inputComponent"
                    }
                ]
            },
            {
                "text": "pager",
                "url": "bbn-vue\/component\/pager\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "pane",
                "url": "bbn-vue\/component\/pane\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "pane2",
                "url": "bbn-vue\/component\/pane2\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "panelbar",
                "url": "bbn-vue\/component\/panelbar\/overview",
                "props": [
                    {
                        "text": "items",
                        "desc": "The source of the component. The object item has property:\r\n- header \/\/ the title on the header\r\n- headerComponent \/\/ a component on the header\r\n- headerOptions \/\/ options relative to the component on the header\r\n- content \/\/ the content html or text to show when the item is selected\r\n- component \/\/ a component to show when the item is selected\r\n- height \/\/ the height of the item's slot, it will overwrite the props itemsHeight for the item\r\n- options \/\/ options of configuration of the component shown in the slot of the item",
                        "url": "bbn-vue\/component\/panelbar\/props\/items"
                    },
                    {
                        "text": "opened",
                        "desc": "Specifies whether or not an index will be expanded",
                        "url": "bbn-vue\/component\/panelbar\/props\/opened"
                    },
                    {
                        "text": "headerComponent",
                        "desc": "The component to be rendered on each header if not specified for the single item in the source",
                        "url": "bbn-vue\/component\/panelbar\/props\/headerComponent"
                    },
                    {
                        "text": "headerOptions",
                        "desc": "The object of properties to bind with the headerComponent",
                        "url": "bbn-vue\/component\/panelbar\/props\/headerOptions"
                    },
                    {
                        "text": "component",
                        "desc": "the component to be rendered in each content slot if not specified for the single item in the source",
                        "url": "bbn-vue\/component\/panelbar\/props\/component"
                    },
                    {
                        "text": "componentOptions",
                        "desc": "the object of properties to bind with the component in the content slot",
                        "url": "bbn-vue\/component\/panelbar\/props\/componentOptions"
                    }
                ],
                "methods": [
                    {
                        "text": "select",
                        "desc": "Shows the content of selected items and emits the event select",
                        "url": "bbn-vue\/component\/panelbar\/methods\/select"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/panelbar\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/panelbar\/mixins\/localStorageComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/panelbar\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "popup",
                "url": "bbn-vue\/component\/popup\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "progressbar",
                "url": "bbn-vue\/component\/progressbar\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value to be represented by the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/value"
                    },
                    {
                        "text": "max",
                        "desc": "The maximum value of the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The minimum value of the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/min"
                    },
                    {
                        "text": "step",
                        "desc": "In case of type 'chunk' defines the step of the chunk",
                        "url": "bbn-vue\/component\/progressbar\/props\/step"
                    },
                    {
                        "text": "orientation",
                        "desc": "The orientation of the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/orientation"
                    },
                    {
                        "text": "reverse",
                        "desc": "Set to true flip the bar.",
                        "url": "bbn-vue\/component\/progressbar\/props\/reverse"
                    },
                    {
                        "text": "type",
                        "desc": "The type the bar. Allowed 'value', 'percent', 'chunk' ('chunk' divides the bar into boxes to show the progress)",
                        "url": "bbn-vue\/component\/progressbar\/props\/type"
                    },
                    {
                        "text": "barColor",
                        "desc": "The primary color of the bar (hex, rgb, rgba)",
                        "url": "bbn-vue\/component\/progressbar\/props\/barColor"
                    },
                    {
                        "text": "textColor",
                        "desc": "Defines the color of the text on the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/textColor"
                    },
                    {
                        "text": "height",
                        "desc": "Defines the height of the bar if the prop orientation is set to 'vertical'",
                        "url": "bbn-vue\/component\/progressbar\/props\/height"
                    },
                    {
                        "text": "width",
                        "desc": "Defines the width of the bar if the bar if the prop orientation is set to 'horizontal'",
                        "url": "bbn-vue\/component\/progressbar\/props\/width"
                    },
                    {
                        "text": "showValue",
                        "desc": "Set to true shows the value on the bar",
                        "url": "bbn-vue\/component\/progressbar\/props\/showValue"
                    },
                    {
                        "text": "showUnit",
                        "desc": "Set to true shows the unit",
                        "url": "bbn-vue\/component\/progressbar\/props\/showUnit"
                    },
                    {
                        "text": "rotate",
                        "desc": "Defines of how many degrees the progressbar has to be rotated",
                        "url": "bbn-vue\/component\/progressbar\/props\/rotate"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/progressbar\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/progressbar\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/progressbar\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "prose",
                "url": "bbn-vue\/component\/prose\/overview",
                "props": [],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/prose\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/prose\/mixins\/localStorageComponent"
                    }
                ]
            },
            {
                "text": "radio",
                "url": "bbn-vue\/component\/radio\/overview",
                "props": [
                    {
                        "text": "separator",
                        "desc": "The separator that can be inserted between the radio buttons.",
                        "url": "bbn-vue\/component\/radio\/props\/separator"
                    },
                    {
                        "text": "vertical",
                        "desc": "Set to true to arrange the radio buttons vertically.",
                        "url": "bbn-vue\/component\/radio\/props\/vertical"
                    },
                    {
                        "text": "step",
                        "desc": "If the property vertical is set to false, defines the number of columns used to render the component.",
                        "url": "bbn-vue\/component\/radio\/props\/step"
                    },
                    {
                        "text": "id",
                        "desc": "The id of the radio input.",
                        "url": "bbn-vue\/component\/radio\/props\/id"
                    },
                    {
                        "text": "render",
                        "desc": "A function rendering each radio label.",
                        "url": "bbn-vue\/component\/radio\/props\/render"
                    },
                    {
                        "text": "sourceText",
                        "desc": "The name of the property in the item object used as a text.",
                        "url": "bbn-vue\/component\/radio\/props\/sourceText"
                    },
                    {
                        "text": "sourceValue",
                        "desc": "The name of the property in the item object used as a value",
                        "url": "bbn-vue\/component\/radio\/props\/sourceValue"
                    },
                    {
                        "text": "source",
                        "desc": "The source of the component.",
                        "url": "bbn-vue\/component\/radio\/props\/source"
                    },
                    {
                        "text": "modelValue",
                        "desc": "The real value used in the input emit.",
                        "url": "bbn-vue\/component\/radio\/props\/modelValue"
                    }
                ],
                "methods": [
                    {
                        "text": "changed",
                        "desc": "",
                        "url": "bbn-vue\/component\/radio\/methods\/changed"
                    },
                    {
                        "text": "getStyle",
                        "desc": "Returns the component's style based on the property 'step'.",
                        "url": "bbn-vue\/component\/radio\/methods\/getStyle"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/radio\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/radio\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/radio\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "router",
                "url": "bbn-vue\/component\/router\/overview",
                "props": [
                    {
                        "text": "auto",
                        "desc": "Routes automatically after mount.",
                        "url": "bbn-vue\/component\/router\/props\/auto"
                    },
                    {
                        "text": "url",
                        "desc": "The URL on which the router will be initialized.",
                        "url": "bbn-vue\/component\/router\/props\/url"
                    },
                    {
                        "text": "autoload",
                        "desc": "Defines if the container will be automatically loaded based on URLs.",
                        "url": "bbn-vue\/component\/router\/props\/autoload"
                    },
                    {
                        "text": "root",
                        "desc": "The root URL of the router, will be only taken into account for the top parents' router, will be automatically calculated for the children.",
                        "url": "bbn-vue\/component\/router\/props\/root"
                    },
                    {
                        "text": "def",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/props\/def"
                    },
                    {
                        "text": "source",
                        "desc": "The views shown at init.",
                        "url": "bbn-vue\/component\/router\/props\/source"
                    },
                    {
                        "text": "single",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/props\/single"
                    },
                    {
                        "text": "nav",
                        "desc": "Set it to true if you wanto to see the navigation bar (tabs or breadcrumb).",
                        "url": "bbn-vue\/component\/router\/props\/nav"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Sets if the views' titles will be scrollable in case they have a greater width than the page (true), or if they will be shown multilines (false, default).",
                        "url": "bbn-vue\/component\/router\/props\/scrollable"
                    },
                    {
                        "text": "storageName",
                        "desc": "The name used for the storage.",
                        "url": "bbn-vue\/component\/router\/props\/storageName"
                    },
                    {
                        "text": "confirmLeave",
                        "desc": "The confirm message when you close an unsaved container.",
                        "url": "bbn-vue\/component\/router\/props\/confirmLeave"
                    },
                    {
                        "text": "hideAdvertUrl",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/props\/hideAdvertUrl"
                    },
                    {
                        "text": "historyMaxLength",
                        "desc": "The max length of the history.",
                        "url": "bbn-vue\/component\/router\/props\/historyMaxLength"
                    },
                    {
                        "text": "menu",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/props\/menu"
                    },
                    {
                        "text": "breadcrumb",
                        "desc": "Set it to true if you want to show the breadcrumb instead of the tabs.",
                        "url": "bbn-vue\/component\/router\/props\/breadcrumb"
                    },
                    {
                        "text": "master",
                        "desc": "Set it to true if you want to set this nav as a master.",
                        "url": "bbn-vue\/component\/router\/props\/master"
                    },
                    {
                        "text": "master",
                        "desc": "Set it to true if you want to send the variable _baseUrl.",
                        "url": "bbn-vue\/component\/router\/props\/master"
                    },
                    {
                        "text": "switch",
                        "desc": "Set it to false if you want to hide the switch.",
                        "url": "bbn-vue\/component\/router\/props\/switch"
                    },
                    {
                        "text": "component",
                        "desc": "If this is set, along with componentSource and componentUrl a single container with this component will be created.",
                        "url": "bbn-vue\/component\/router\/props\/component"
                    },
                    {
                        "text": "componentSource",
                        "desc": "The source for the component.",
                        "url": "bbn-vue\/component\/router\/props\/componentSource"
                    },
                    {
                        "text": "componentUrl",
                        "desc": "The property to get from the componentSource to use for setting the URL.",
                        "url": "bbn-vue\/component\/router\/props\/componentUrl"
                    }
                ],
                "methods": [
                    {
                        "text": "register",
                        "desc": "Function used by container to make themselves known when they are mounted.",
                        "url": "bbn-vue\/component\/router\/methods\/register"
                    },
                    {
                        "text": "unregister",
                        "desc": "Function used by container to make themselves known when they are destroyed",
                        "url": "bbn-vue\/component\/router\/methods\/unregister"
                    },
                    {
                        "text": "getRoute",
                        "desc": "Given a URL returns the existing path of a corresponding view or false, or the default view if forced.",
                        "url": "bbn-vue\/component\/router\/methods\/getRoute"
                    },
                    {
                        "text": "setBaseURL",
                        "desc": "Formats a baseURL correctly (without 1st slash and with end slash.",
                        "url": "bbn-vue\/component\/router\/methods\/setBaseURL"
                    },
                    {
                        "text": "getDefaultView",
                        "desc": "Returns the default object for the view.",
                        "url": "bbn-vue\/component\/router\/methods\/getDefaultView"
                    },
                    {
                        "text": "route",
                        "desc": "Sends event beforeRoute (cancellable) and launch real routing.",
                        "url": "bbn-vue\/component\/router\/methods\/route"
                    },
                    {
                        "text": "realRoute",
                        "desc": "Routes the router.",
                        "url": "bbn-vue\/component\/router\/methods\/realRoute"
                    },
                    {
                        "text": "next",
                        "desc": "Routes to the next view if any.",
                        "url": "bbn-vue\/component\/router\/methods\/next"
                    },
                    {
                        "text": "prev",
                        "desc": "Routes to the previous view if any.",
                        "url": "bbn-vue\/component\/router\/methods\/prev"
                    },
                    {
                        "text": "activate",
                        "desc": "Shows the container with the corresponding URL and hide all others.",
                        "url": "bbn-vue\/component\/router\/methods\/activate"
                    },
                    {
                        "text": "changeURL",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/changeURL"
                    },
                    {
                        "text": "getBaseURL",
                        "desc": "Returns the baseURL property.",
                        "url": "bbn-vue\/component\/router\/methods\/getBaseURL"
                    },
                    {
                        "text": "getFullBaseURL",
                        "desc": "Returns a string of all the baseURL properties till root.",
                        "url": "bbn-vue\/component\/router\/methods\/getFullBaseURL"
                    },
                    {
                        "text": "getFullURL",
                        "desc": "Returns the full URL from the root router (without the hostname).",
                        "url": "bbn-vue\/component\/router\/methods\/getFullURL"
                    },
                    {
                        "text": "getCurrentURL",
                        "desc": "Returns the current URL of the current router.",
                        "url": "bbn-vue\/component\/router\/methods\/getCurrentURL"
                    },
                    {
                        "text": "getFullCurrentURL",
                        "desc": "Returns the full current URL from the root router (without the hostname).",
                        "url": "bbn-vue\/component\/router\/methods\/getFullCurrentURL"
                    },
                    {
                        "text": "parseURL",
                        "desc": "Returns the url relative to the current tabNav from the given url.",
                        "url": "bbn-vue\/component\/router\/methods\/parseURL"
                    },
                    {
                        "text": "isValidIndex",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/isValidIndex"
                    },
                    {
                        "text": "activateDefault",
                        "desc": "Activates the default view, or the first one if no default.",
                        "url": "bbn-vue\/component\/router\/methods\/activateDefault"
                    },
                    {
                        "text": "activateIndex",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/activateIndex"
                    },
                    {
                        "text": "getVue",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getVue"
                    },
                    {
                        "text": "getContainer",
                        "desc": "Returns the corresponding container's component's DOM element.",
                        "url": "bbn-vue\/component\/router\/methods\/getContainer"
                    },
                    {
                        "text": "getDOMContainer",
                        "desc": "Returns the corresponding container's component's DOM element.",
                        "url": "bbn-vue\/component\/router\/methods\/getDOMContainer"
                    },
                    {
                        "text": "getSubRouter",
                        "desc": "Returns the next router in the corresponding container if there's any.",
                        "url": "bbn-vue\/component\/router\/methods\/getSubRouter"
                    },
                    {
                        "text": "getRealVue",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getRealVue"
                    },
                    {
                        "text": "getIndex",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getIndex"
                    },
                    {
                        "text": "remove",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/remove"
                    },
                    {
                        "text": "add",
                        "desc": "Adds an object with a valid url to the views.",
                        "url": "bbn-vue\/component\/router\/methods\/add"
                    },
                    {
                        "text": "search",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/search"
                    },
                    {
                        "text": "callRouter",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/callRouter"
                    },
                    {
                        "text": "searchContainer",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/searchContainer"
                    },
                    {
                        "text": "load",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/load"
                    },
                    {
                        "text": "reload",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/reload"
                    },
                    {
                        "text": "getDefaultURL",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getDefaultURL"
                    },
                    {
                        "text": "getTitle",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getTitle"
                    },
                    {
                        "text": "retrieveDirtyContainers",
                        "desc": "Sets the 'dirtyContainers' property with the list of unsaved views",
                        "url": "bbn-vue\/component\/router\/methods\/retrieveDirtyContainers"
                    },
                    {
                        "text": "getMenuFn",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getMenuFn"
                    },
                    {
                        "text": "close",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/close"
                    },
                    {
                        "text": "setconfig",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/setconfig"
                    },
                    {
                        "text": "getConfig",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/getConfig"
                    },
                    {
                        "text": "unsetConfig",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/unsetConfig"
                    },
                    {
                        "text": "observerEmit",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/observerEmit"
                    },
                    {
                        "text": "enter",
                        "desc": "Function triggered every time a container is shown (at the start of the animation) to change the URL if needed.",
                        "url": "bbn-vue\/component\/router\/methods\/enter"
                    },
                    {
                        "text": "containerComponentMount",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/methods\/containerComponentMount"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/mixins\/resizerComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/mixins\/localStorageComponent"
                    },
                    {
                        "text": "closeComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/mixins\/closeComponent"
                    },
                    {
                        "text": "observerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/router\/mixins\/observerComponent"
                    }
                ]
            },
            {
                "text": "rte",
                "url": "bbn-vue\/component\/rte\/overview",
                "props": [
                    {
                        "text": "iFrame",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/iFrame"
                    },
                    {
                        "text": "value",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/value"
                    },
                    {
                        "text": "required",
                        "desc": "Defines if the component value is required.",
                        "url": "bbn-vue\/component\/rte\/props\/required"
                    },
                    {
                        "text": "pinned",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/pinned"
                    },
                    {
                        "text": "top",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/top"
                    },
                    {
                        "text": "left",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/left"
                    },
                    {
                        "text": "bottom",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/bottom"
                    },
                    {
                        "text": "right",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/right"
                    },
                    {
                        "text": "fullSize",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/fullSize"
                    },
                    {
                        "text": "iframeCSSLinks",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/props\/iframeCSSLinks"
                    },
                    {
                        "text": "height",
                        "desc": "The height of the editor",
                        "url": "bbn-vue\/component\/rte\/props\/height"
                    },
                    {
                        "text": "buttons",
                        "desc": "The buttons to show on the toolbar",
                        "url": "bbn-vue\/component\/rte\/props\/buttons"
                    },
                    {
                        "text": "cfg",
                        "desc": "The object of configuration.",
                        "url": "bbn-vue\/component\/rte\/props\/cfg"
                    }
                ],
                "methods": [
                    {
                        "text": "onChange",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/methods\/onChange"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/rte\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "scroll",
                "url": "bbn-vue\/component\/scroll\/overview",
                "props": [
                    {
                        "text": "width",
                        "desc": "The width of the scroll, if not defined the scroll container will have the class 'bbn-overlay'",
                        "url": "bbn-vue\/component\/scroll\/props\/width"
                    },
                    {
                        "text": "axis",
                        "desc": "The axis where the scroll is applied ( 'x', 'y', 'both')",
                        "url": "bbn-vue\/component\/scroll\/props\/axis"
                    },
                    {
                        "text": "x",
                        "desc": "Defines the position of the x axis",
                        "url": "bbn-vue\/component\/scroll\/props\/x"
                    },
                    {
                        "text": "y",
                        "desc": "Defines the position of the y axis",
                        "url": "bbn-vue\/component\/scroll\/props\/y"
                    },
                    {
                        "text": "hidden",
                        "desc": "Defines if the scroll has to be hidden for one of the axis or both",
                        "url": "bbn-vue\/component\/scroll\/props\/hidden"
                    },
                    {
                        "text": "barColor",
                        "desc": "Defines the color of the scroll",
                        "url": "bbn-vue\/component\/scroll\/props\/barColor"
                    },
                    {
                        "text": "latency",
                        "desc": "The time of latency of the scroll",
                        "url": "bbn-vue\/component\/scroll\/props\/latency"
                    }
                ],
                "methods": [
                    {
                        "text": "getNaturalDimensions",
                        "desc": "Gets the dimensions after a resize",
                        "url": "bbn-vue\/component\/scroll\/methods\/getNaturalDimensions"
                    },
                    {
                        "text": "onScroll",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/onScroll"
                    },
                    {
                        "text": "scrollTo",
                        "desc": "Scrolls to the given coordinates of x and y using the given animation",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollTo"
                    },
                    {
                        "text": "scrollHorizontal",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollHorizontal"
                    },
                    {
                        "text": "scrollVertical",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollVertical"
                    },
                    {
                        "text": "initSize",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/initSize"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the scroll",
                        "url": "bbn-vue\/component\/scroll\/methods\/onResize"
                    },
                    {
                        "text": "scrollStart",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollStart"
                    },
                    {
                        "text": "scrollEnd",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollEnd"
                    },
                    {
                        "text": "scrollBefore",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollBefore"
                    },
                    {
                        "text": "scrollAfter",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollAfter"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the scroll",
                        "url": "bbn-vue\/component\/scroll\/methods\/init"
                    },
                    {
                        "text": "scrollStartX",
                        "desc": "Scroll the x axis to the position 0",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollStartX"
                    },
                    {
                        "text": "scrollStartY",
                        "desc": "Scroll the y axis to the position 0",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollStartY"
                    },
                    {
                        "text": "scrollBeforeX",
                        "desc": "Scroll the x axis to the previous page",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollBeforeX"
                    },
                    {
                        "text": "scrollBeforeY",
                        "desc": "Scroll the y axis to the previous page",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollBeforeY"
                    },
                    {
                        "text": "scrollBeforeX",
                        "desc": "Scroll the x axis to the next page",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollBeforeX"
                    },
                    {
                        "text": "scrollBeforeY",
                        "desc": "Scroll the y axis to the next page",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollBeforeY"
                    },
                    {
                        "text": "scrollEndX",
                        "desc": "Scroll the x axis to the end",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollEndX"
                    },
                    {
                        "text": "scrollEndY",
                        "desc": "Scroll the y axis to the end",
                        "url": "bbn-vue\/component\/scroll\/methods\/scrollEndY"
                    },
                    {
                        "text": "waitReady",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/methods\/waitReady"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/mixins\/resizerComponent"
                    },
                    {
                        "text": "keepCoolComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/scroll\/mixins\/keepCoolComponent"
                    }
                ]
            },
            {
                "text": "scrollbar",
                "url": "bbn-vue\/component\/scrollbar\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "The orientation of the scrollbar (required).",
                        "url": "bbn-vue\/component\/scrollbar\/props\/orientation"
                    },
                    {
                        "text": "scroller",
                        "desc": "The instance of bbn-scroll.",
                        "url": "bbn-vue\/component\/scrollbar\/props\/scroller"
                    },
                    {
                        "text": "container",
                        "desc": "The rail.",
                        "url": "bbn-vue\/component\/scrollbar\/props\/container"
                    },
                    {
                        "text": "hidden",
                        "desc": "Says if the scrollbar is shown, hidden, or shown when needed (auto).",
                        "url": "bbn-vue\/component\/scrollbar\/props\/hidden"
                    },
                    {
                        "text": "tolerance",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/props\/tolerance"
                    },
                    {
                        "text": "scrolling",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/props\/scrolling"
                    },
                    {
                        "text": "scrollAlso",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/props\/scrollAlso"
                    },
                    {
                        "text": "initial",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/props\/initial"
                    },
                    {
                        "text": "color",
                        "desc": "The color of the scrollbar.",
                        "url": "bbn-vue\/component\/scrollbar\/props\/color"
                    }
                ],
                "methods": [
                    {
                        "text": "startDrag",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/startDrag"
                    },
                    {
                        "text": "onDrag",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/onDrag"
                    },
                    {
                        "text": "stopDrag",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/stopDrag"
                    },
                    {
                        "text": "adjustFromContainer",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/adjustFromContainer"
                    },
                    {
                        "text": "adjustFromBar",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/adjustFromBar"
                    },
                    {
                        "text": "jump",
                        "desc": "When the users jumps by clicking the scrollbar while a double click will activate tillEnd.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/jump"
                    },
                    {
                        "text": "scrollLevel",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollLevel"
                    },
                    {
                        "text": "scrollBefore",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollBefore"
                    },
                    {
                        "text": "scrollAfter",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollAfter"
                    },
                    {
                        "text": "scrollableElements",
                        "desc": "Gets the array of scrollable elements according to scrollAlso attribute.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollableElements"
                    },
                    {
                        "text": "onResize",
                        "desc": "Calculates all the proportions based on content.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/onResize"
                    },
                    {
                        "text": "initContainer",
                        "desc": "Sets all event listeners.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/initContainer"
                    },
                    {
                        "text": "overContent",
                        "desc": "When the mouse is over the content.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/overContent"
                    },
                    {
                        "text": "inSlider",
                        "desc": "When the mouse enters over the slider.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/inSlider"
                    },
                    {
                        "text": "outSlider",
                        "desc": "When the mouse leaves the slider.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/outSlider"
                    },
                    {
                        "text": "showSlider",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/showSlider"
                    },
                    {
                        "text": "hideSlider",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/hideSlider"
                    },
                    {
                        "text": "animateBar",
                        "desc": "Animates the bar.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/animateBar"
                    },
                    {
                        "text": "scrollTo",
                        "desc": "Scrolls to the given position using the given animation.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollTo"
                    },
                    {
                        "text": "scrollStart",
                        "desc": "Moves the scrollbar to the position 0.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollStart"
                    },
                    {
                        "text": "scrollEnd",
                        "desc": "Moves the scrollbar to the end position.",
                        "url": "bbn-vue\/component\/scrollbar\/methods\/scrollEnd"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/mixins\/basicComponent"
                    },
                    {
                        "text": "keepCoolComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/scrollbar\/mixins\/keepCoolComponent"
                    }
                ]
            },
            {
                "text": "search",
                "url": "bbn-vue\/component\/search\/overview",
                "props": [
                    {
                        "text": "filterselection",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/props\/filterselection"
                    },
                    {
                        "text": "filterable",
                        "desc": "Defines if the search is filterable.",
                        "url": "bbn-vue\/component\/search\/props\/filterable"
                    },
                    {
                        "text": "autobind",
                        "desc": "Set to true will automatically update the data before mount.",
                        "url": "bbn-vue\/component\/search\/props\/autobind"
                    },
                    {
                        "text": "nullable",
                        "desc": "Defines if the search can have a null value.",
                        "url": "bbn-vue\/component\/search\/props\/nullable"
                    },
                    {
                        "text": "minLength",
                        "desc": "Defines the min length of the filter string.",
                        "url": "bbn-vue\/component\/search\/props\/minLength"
                    },
                    {
                        "text": "leftIcon",
                        "desc": "Defines the left icon of the search.",
                        "url": "bbn-vue\/component\/search\/props\/leftIcon"
                    },
                    {
                        "text": "rightIcon",
                        "desc": "Defines the right icon of the search.",
                        "url": "bbn-vue\/component\/search\/props\/rightIcon"
                    },
                    {
                        "text": "minWidth",
                        "desc": "Defines the min width of the input.",
                        "url": "bbn-vue\/component\/search\/props\/minWidth"
                    },
                    {
                        "text": "maxWidth",
                        "desc": "Defines the max width of the input.",
                        "url": "bbn-vue\/component\/search\/props\/maxWidth"
                    },
                    {
                        "text": "delay",
                        "desc": "Defines the delay before the component starts to search.",
                        "url": "bbn-vue\/component\/search\/props\/delay"
                    },
                    {
                        "text": "shortPlaceholder",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/props\/shortPlaceholder"
                    }
                ],
                "methods": [
                    {
                        "text": "searchFocus",
                        "desc": "*\r\nFocuses the search input.",
                        "url": "bbn-vue\/component\/search\/methods\/searchFocus"
                    },
                    {
                        "text": "searchBlur",
                        "desc": "Blurs the search input.",
                        "url": "bbn-vue\/component\/search\/methods\/searchBlur"
                    },
                    {
                        "text": "searchClose",
                        "desc": "Closes the search.",
                        "url": "bbn-vue\/component\/search\/methods\/searchClose"
                    },
                    {
                        "text": "select",
                        "desc": "Emits the event 'select'",
                        "url": "bbn-vue\/component\/search\/methods\/select"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/basicComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/eventsComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/inputComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/listComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/keynavComponent"
                    },
                    {
                        "text": "urlComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/urlComponent"
                    },
                    {
                        "text": "dropdownComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/search\/mixins\/dropdownComponent"
                    }
                ]
            },
            {
                "text": "slider",
                "url": "bbn-vue\/component\/slider\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "The orientation of the slider.",
                        "url": "bbn-vue\/component\/slider\/props\/orientation"
                    },
                    {
                        "text": "visible",
                        "desc": "Defines if the slider is visible.",
                        "url": "bbn-vue\/component\/slider\/props\/visible"
                    }
                ],
                "methods": [
                    {
                        "text": "onResize",
                        "desc": "Handles the resize.",
                        "url": "bbn-vue\/component\/slider\/methods\/onResize"
                    },
                    {
                        "text": "show",
                        "desc": "Shows the slider.",
                        "url": "bbn-vue\/component\/slider\/methods\/show"
                    },
                    {
                        "text": "hide",
                        "desc": "Hides the slider.",
                        "url": "bbn-vue\/component\/slider\/methods\/hide"
                    },
                    {
                        "text": "toggle",
                        "desc": "Toggles the slider.",
                        "url": "bbn-vue\/component\/slider\/methods\/toggle"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/slider\/mixins\/basicComponent"
                    },
                    {
                        "text": "toggleComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/slider\/mixins\/toggleComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/slider\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "slider-menu",
                "url": "bbn-vue\/component\/slider-menu\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the floater.",
                        "url": "bbn-vue\/component\/slider-menu\/props\/source"
                    },
                    {
                        "text": "children",
                        "desc": "The array containings the tree's children.",
                        "url": "bbn-vue\/component\/slider-menu\/props\/children"
                    }
                ],
                "methods": [
                    {
                        "text": "select",
                        "desc": "Handles the selection of the floater's items.",
                        "url": "bbn-vue\/component\/slider-menu\/methods\/select"
                    }
                ],
                "mixins": []
            },
            {
                "text": "slideshow",
                "url": "bbn-vue\/component\/slideshow\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the slideshow",
                        "url": "bbn-vue\/component\/slideshow\/props\/source"
                    },
                    {
                        "text": "separator",
                        "desc": "If the type of the source is a string defines which character to use as separator between slides.",
                        "url": "bbn-vue\/component\/slideshow\/props\/separator"
                    },
                    {
                        "text": "component",
                        "desc": "The component to use in each slide.",
                        "url": "bbn-vue\/component\/slideshow\/props\/component"
                    },
                    {
                        "text": "checkbox",
                        "desc": "Insert a checkbox in each slide.",
                        "url": "bbn-vue\/component\/slideshow\/props\/checkbox"
                    },
                    {
                        "text": "summary",
                        "desc": "Set to true shows a list of all slides' title that can be used to navigate between them.",
                        "url": "bbn-vue\/component\/slideshow\/props\/summary"
                    },
                    {
                        "text": "gallery",
                        "desc": "",
                        "url": "bbn-vue\/component\/slideshow\/props\/gallery"
                    },
                    {
                        "text": "preview",
                        "desc": "Set to true shows the list of previews of the slide.",
                        "url": "bbn-vue\/component\/slideshow\/props\/preview"
                    },
                    {
                        "text": "dimensionPreview",
                        "desc": "The dimension of the preview.",
                        "url": "bbn-vue\/component\/slideshow\/props\/dimensionPreview"
                    },
                    {
                        "text": "autoplay",
                        "desc": "Set to true enables the autoplay using the default autoplay time (5000ms). If a number is given, multiplied * 1000, will define the new autoplay time .",
                        "url": "bbn-vue\/component\/slideshow\/props\/autoplay"
                    },
                    {
                        "text": "ctrl",
                        "desc": "Shows the actions to start and stop autoplay.",
                        "url": "bbn-vue\/component\/slideshow\/props\/ctrl"
                    },
                    {
                        "text": "arrows",
                        "desc": "Set to true shows the arrow icons to move to next or previous slide. An object with 'left' and 'right' properties can be given to specify the css class for each arrow and to customize the icon.",
                        "url": "bbn-vue\/component\/slideshow\/props\/arrows"
                    },
                    {
                        "text": "autoHidePreview",
                        "desc": "Set to true hides the preview images.",
                        "url": "bbn-vue\/component\/slideshow\/props\/autoHidePreview"
                    },
                    {
                        "text": "autoHideArrows",
                        "desc": "Set to true hides the arrow icons.",
                        "url": "bbn-vue\/component\/slideshow\/props\/autoHideArrows"
                    },
                    {
                        "text": "autoHideCtrl",
                        "desc": "Set to true hides the action to start and stop the autoplay.",
                        "url": "bbn-vue\/component\/slideshow\/props\/autoHideCtrl"
                    },
                    {
                        "text": "loop",
                        "desc": "If set to true shows the slides in a loop..",
                        "url": "bbn-vue\/component\/slideshow\/props\/loop"
                    },
                    {
                        "text": "fullSlide",
                        "desc": "Set to true shows the slide in the full page.",
                        "url": "bbn-vue\/component\/slideshow\/props\/fullSlide"
                    },
                    {
                        "text": "initialSlide",
                        "desc": "The index of the first slide to show.",
                        "url": "bbn-vue\/component\/slideshow\/props\/initialSlide"
                    },
                    {
                        "text": "showCount",
                        "desc": "Set to true shows the number of the current slide and the total number of slides.",
                        "url": "bbn-vue\/component\/slideshow\/props\/showCount"
                    },
                    {
                        "text": "showInfo",
                        "desc": "Set to true shows the property info of the item.",
                        "url": "bbn-vue\/component\/slideshow\/props\/showInfo"
                    },
                    {
                        "text": "scroll",
                        "desc": "If the property content is given to the item, set to true insert the html content inside a scroll.",
                        "url": "bbn-vue\/component\/slideshow\/props\/scroll"
                    }
                ],
                "methods": [
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the component.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/onResize"
                    },
                    {
                        "text": "afterLoad",
                        "desc": "Sets the property loaded to true.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/afterLoad"
                    },
                    {
                        "text": "aspectRatio",
                        "desc": "Adjusts the dimensions of the slides basing on the 'mode' defined for the item.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/aspectRatio"
                    },
                    {
                        "text": "createStyle",
                        "desc": "Manages the slides' style.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/createStyle"
                    },
                    {
                        "text": "prev",
                        "desc": "Shows the previous slide.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/prev"
                    },
                    {
                        "text": "next",
                        "desc": "Shows the next slide.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/next"
                    },
                    {
                        "text": "startAutoPlay",
                        "desc": "Starts the autoplay of slides.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/startAutoPlay"
                    },
                    {
                        "text": "stopAutoPlay",
                        "desc": "Stops the autoplay of slides.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/stopAutoPlay"
                    },
                    {
                        "text": "miniaturePreview",
                        "desc": "Shows or hides miniatures.",
                        "url": "bbn-vue\/component\/slideshow\/methods\/miniaturePreview"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/slideshow\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/slideshow\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "split-tabs",
                "url": "bbn-vue\/component\/split-tabs\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "splitter",
                "url": "bbn-vue\/component\/splitter\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "The orientation of the splitter ('horizontal', 'vertical', 'auto').",
                        "url": "bbn-vue\/component\/splitter\/props\/orientation"
                    },
                    {
                        "text": "resizable",
                        "desc": "Set to true allows the splitter to be resizable.",
                        "url": "bbn-vue\/component\/splitter\/props\/resizable"
                    },
                    {
                        "text": "collapsible",
                        "desc": "Set to true allows the panes inside the splitter to be collapsible.",
                        "url": "bbn-vue\/component\/splitter\/props\/collapsible"
                    },
                    {
                        "text": "resizerSize",
                        "desc": "Defines the size of the resizer element, width if vertical, height if horizontal.",
                        "url": "bbn-vue\/component\/splitter\/props\/resizerSize"
                    },
                    {
                        "text": "resizerClass",
                        "desc": "A class name to add on the resizer element.",
                        "url": "bbn-vue\/component\/splitter\/props\/resizerClass"
                    },
                    {
                        "text": "minPaneSize",
                        "desc": "The minimum size that can have a pane (non collapsed).",
                        "url": "bbn-vue\/component\/splitter\/props\/minPaneSize"
                    }
                ],
                "methods": [
                    {
                        "text": "getFormatted",
                        "desc": "Returns the calculated grid-template-rows or grid-template-columns as CSS string.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getFormatted"
                    },
                    {
                        "text": "realResizerClass",
                        "desc": "Returns the resizer's class according to its resizerClass prop.",
                        "url": "bbn-vue\/component\/splitter\/methods\/realResizerClass"
                    },
                    {
                        "text": "getOrientation",
                        "desc": "Returns orientation based on the largest side.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getOrientation"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the splitter",
                        "url": "bbn-vue\/component\/splitter\/methods\/onResize"
                    },
                    {
                        "text": "getNextResizable",
                        "desc": "Gets the next resizable pane.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getNextResizable"
                    },
                    {
                        "text": "getPrevResizable",
                        "desc": "Gets the previous resizable pane.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getPrevResizable"
                    },
                    {
                        "text": "getNextCollapsible",
                        "desc": "Gets the next collapsible pane.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getNextCollapsible"
                    },
                    {
                        "text": "getPrevCollapsible",
                        "desc": "Gets the previous collassible pane.",
                        "url": "bbn-vue\/component\/splitter\/methods\/getPrevCollapsible"
                    },
                    {
                        "text": "init",
                        "desc": "Triggered by the panes being mounted, analyzes the splitter's content in order to define its panes.",
                        "url": "bbn-vue\/component\/splitter\/methods\/init"
                    },
                    {
                        "text": "areCollapsible",
                        "desc": "Return true if one of the two panes given is collassible.",
                        "url": "bbn-vue\/component\/splitter\/methods\/areCollapsible"
                    },
                    {
                        "text": "isCollapsiblePrev",
                        "desc": "Returns true if the previous pane is collapsible.",
                        "url": "bbn-vue\/component\/splitter\/methods\/isCollapsiblePrev"
                    },
                    {
                        "text": "isCollapsibleNext",
                        "desc": "Returns true if the next pane is collapsible.",
                        "url": "bbn-vue\/component\/splitter\/methods\/isCollapsibleNext"
                    },
                    {
                        "text": "isFullyCollapsiblePrev",
                        "desc": "Returns true if teh previous pane is fully collapsible.",
                        "url": "bbn-vue\/component\/splitter\/methods\/isFullyCollapsiblePrev"
                    },
                    {
                        "text": "isFullyCollapsibleNext",
                        "desc": "Returns true if the next pane is fully collapsible.",
                        "url": "bbn-vue\/component\/splitter\/methods\/isFullyCollapsibleNext"
                    },
                    {
                        "text": "resizeDrag",
                        "desc": "Handles the resize of panes on dragging the resizer",
                        "url": "bbn-vue\/component\/splitter\/methods\/resizeDrag"
                    },
                    {
                        "text": "resizeEnd",
                        "desc": "Ends the resize",
                        "url": "bbn-vue\/component\/splitter\/methods\/resizeEnd"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "splitter2",
                "url": "bbn-vue\/component\/splitter2\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "The orientation of the splitter ('horizontal', 'vertical', 'auto')",
                        "url": "bbn-vue\/component\/splitter2\/props\/orientation"
                    },
                    {
                        "text": "resizable",
                        "desc": "Set to true allows the splitter to be resizable",
                        "url": "bbn-vue\/component\/splitter2\/props\/resizable"
                    },
                    {
                        "text": "collapsible",
                        "desc": "Set to true allows the panes inside the splitter to be collapsible",
                        "url": "bbn-vue\/component\/splitter2\/props\/collapsible"
                    },
                    {
                        "text": "resizerSize",
                        "desc": "Defines the size of the resizer element, width if vertical, height if horizontal",
                        "url": "bbn-vue\/component\/splitter2\/props\/resizerSize"
                    },
                    {
                        "text": "resizerClass",
                        "desc": "A class name to add on the resizer element",
                        "url": "bbn-vue\/component\/splitter2\/props\/resizerClass"
                    },
                    {
                        "text": "minPaneSize",
                        "desc": "The minimum size that can have a pane (non collapsed)",
                        "url": "bbn-vue\/component\/splitter2\/props\/minPaneSize"
                    }
                ],
                "methods": [
                    {
                        "text": "getFormatted",
                        "desc": "Returns the calculated grid-template-rows or grid-template-columns as CSS string.",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getFormatted"
                    },
                    {
                        "text": "realResizerClass",
                        "desc": "returns the resizer's class according to its resizerClass prop.",
                        "url": "bbn-vue\/component\/splitter2\/methods\/realResizerClass"
                    },
                    {
                        "text": "getOrientation",
                        "desc": "Returns orientation based on the largest side.",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getOrientation"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the splitter",
                        "url": "bbn-vue\/component\/splitter2\/methods\/onResize"
                    },
                    {
                        "text": "getNextResizable",
                        "desc": "Gets the next resizable pane",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getNextResizable"
                    },
                    {
                        "text": "getPrevResizable",
                        "desc": "Gets the previous resizable pane",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getPrevResizable"
                    },
                    {
                        "text": "getNextCollapsible",
                        "desc": "Gets the next collapsible pane",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getNextCollapsible"
                    },
                    {
                        "text": "getPrevCollapsible",
                        "desc": "Gets the previous collassible pane",
                        "url": "bbn-vue\/component\/splitter2\/methods\/getPrevCollapsible"
                    },
                    {
                        "text": "init",
                        "desc": "Triggered by the panes being mounted, analyzes the splitter's content in order to define its panes.",
                        "url": "bbn-vue\/component\/splitter2\/methods\/init"
                    },
                    {
                        "text": "areCollapsible",
                        "desc": "Return true if one of the two panes given is collassible",
                        "url": "bbn-vue\/component\/splitter2\/methods\/areCollapsible"
                    },
                    {
                        "text": "isCollapsiblePrev",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter2\/methods\/isCollapsiblePrev"
                    },
                    {
                        "text": "isCollapsibleNext",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter2\/methods\/isCollapsibleNext"
                    },
                    {
                        "text": "isFullyCollapsiblePrev",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter2\/methods\/isFullyCollapsiblePrev"
                    },
                    {
                        "text": "isFullyCollapsibleNext",
                        "desc": "",
                        "url": "bbn-vue\/component\/splitter2\/methods\/isFullyCollapsibleNext"
                    },
                    {
                        "text": "resizeDrag",
                        "desc": "Handles the resize of panes on dragging the resizer",
                        "url": "bbn-vue\/component\/splitter2\/methods\/resizeDrag"
                    },
                    {
                        "text": "resizeEnd",
                        "desc": "Ends the resize",
                        "url": "bbn-vue\/component\/splitter2\/methods\/resizeEnd"
                    }
                ],
                "mixins": []
            },
            {
                "text": "stack",
                "url": "bbn-vue\/component\/stack\/overview",
                "props": [],
                "methods": [],
                "mixins": [
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/stack\/mixins\/listComponent"
                    }
                ]
            },
            {
                "text": "switch",
                "url": "bbn-vue\/component\/switch\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value of the component.",
                        "url": "bbn-vue\/component\/switch\/props\/value"
                    },
                    {
                        "text": "novalue",
                        "desc": "The value of the component when switch is off.",
                        "url": "bbn-vue\/component\/switch\/props\/novalue"
                    },
                    {
                        "text": "name",
                        "desc": "The name of the input.",
                        "url": "bbn-vue\/component\/switch\/props\/name"
                    },
                    {
                        "text": "id",
                        "desc": "The id of the input.",
                        "url": "bbn-vue\/component\/switch\/props\/id"
                    },
                    {
                        "text": "cls",
                        "desc": "The class(es) to add to the tag span.",
                        "url": "bbn-vue\/component\/switch\/props\/cls"
                    },
                    {
                        "text": "sliderCls",
                        "desc": "The class(es) to add to the switch button.",
                        "url": "bbn-vue\/component\/switch\/props\/sliderCls"
                    },
                    {
                        "text": "modelValue",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/props\/modelValue"
                    },
                    {
                        "text": "required",
                        "desc": "True if a value is required.",
                        "url": "bbn-vue\/component\/switch\/props\/required"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true disables the switch.",
                        "url": "bbn-vue\/component\/switch\/props\/disabled"
                    },
                    {
                        "text": "readonly",
                        "desc": "Set to true for a readonly switch.",
                        "url": "bbn-vue\/component\/switch\/props\/readonly"
                    },
                    {
                        "text": "checked",
                        "desc": "Set to true to have the component switched on.",
                        "url": "bbn-vue\/component\/switch\/props\/checked"
                    },
                    {
                        "text": "strict",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/props\/strict"
                    },
                    {
                        "text": "onIcon",
                        "desc": "Defines the icon for the component when switched on.",
                        "url": "bbn-vue\/component\/switch\/props\/onIcon"
                    },
                    {
                        "text": "offIcon",
                        "desc": "Defines the icon for the component when switched off.",
                        "url": "bbn-vue\/component\/switch\/props\/offIcon"
                    },
                    {
                        "text": "noIcon",
                        "desc": "Set to true does not show onIcon and offIcon.",
                        "url": "bbn-vue\/component\/switch\/props\/noIcon"
                    },
                    {
                        "text": "radius",
                        "desc": "Set to true gives the component a rounded appearance.",
                        "url": "bbn-vue\/component\/switch\/props\/radius"
                    },
                    {
                        "text": "model",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/props\/model"
                    }
                ],
                "methods": [
                    {
                        "text": "toggle",
                        "desc": "Switches the component.",
                        "url": "bbn-vue\/component\/switch\/methods\/toggle"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/switch\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "table",
                "url": "bbn-vue\/component\/table\/overview",
                "props": [
                    {
                        "text": "titles",
                        "desc": "True if the columns has to have titles.",
                        "url": "bbn-vue\/component\/table\/props\/titles"
                    },
                    {
                        "text": "noData",
                        "desc": "The message to show when the table has no data.",
                        "url": "bbn-vue\/component\/table\/props\/noData"
                    },
                    {
                        "text": "titleGroups",
                        "desc": "If the property 'group' is given to one or more columns in the table (ex: group=\"test\"), it defines the title of a group of columns. (ex: titleGroups=\"[{value: 'test', text: 'My group'}]\").",
                        "url": "bbn-vue\/component\/table\/props\/titleGroups"
                    },
                    {
                        "text": "Vue",
                        "desc": "The object popup of the table.",
                        "url": "bbn-vue\/component\/table\/props\/Vue"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Defines the behaviour of the table about the scroll.",
                        "url": "bbn-vue\/component\/table\/props\/scrollable"
                    },
                    {
                        "text": "resizable",
                        "desc": "Set to true allows the table to be resizable.",
                        "url": "bbn-vue\/component\/table\/props\/resizable"
                    },
                    {
                        "text": "autobind",
                        "desc": "Set to true will automatically update the data before mount.",
                        "url": "bbn-vue\/component\/table\/props\/autobind"
                    },
                    {
                        "text": "showable",
                        "desc": "Set to true shows a button at the bottom right of the table that opens a column picker for the table.",
                        "url": "bbn-vue\/component\/table\/props\/showable"
                    },
                    {
                        "text": "saveable",
                        "desc": "Set to true shows a save icon that allows to save the current configuration of the table at the bottom right of the table.",
                        "url": "bbn-vue\/component\/table\/props\/saveable"
                    },
                    {
                        "text": "groupable",
                        "desc": "Set to true allows the table to be groupable according to the props groupBy.",
                        "url": "bbn-vue\/component\/table\/props\/groupable"
                    },
                    {
                        "text": "editable",
                        "desc": "Set to true allows to edit inline table's fields if no buttons are defined for the table. Allowed values 'inline','nobuttons'.",
                        "url": "bbn-vue\/component\/table\/props\/editable"
                    },
                    {
                        "text": "serverGrouping",
                        "desc": "In case of Ajax table, set to true will make an Ajax call to group the table by a field.",
                        "url": "bbn-vue\/component\/table\/props\/serverGrouping"
                    },
                    {
                        "text": "localGrouping",
                        "desc": "Set to false will make an Ajax call for the grouping.",
                        "url": "bbn-vue\/component\/table\/props\/localGrouping"
                    },
                    {
                        "text": "minimumColumnWidth",
                        "desc": "Defines the minimum columns width.",
                        "url": "bbn-vue\/component\/table\/props\/minimumColumnWidth"
                    },
                    {
                        "text": "defaultColumnWidth",
                        "desc": "Defines the default columns width.",
                        "url": "bbn-vue\/component\/table\/props\/defaultColumnWidth"
                    },
                    {
                        "text": "url",
                        "desc": "If defined, the form created for the edit of the table will have this URL as action.",
                        "url": "bbn-vue\/component\/table\/props\/url"
                    },
                    {
                        "text": "trClass",
                        "desc": "A function to define css class(es) for the rows.",
                        "url": "bbn-vue\/component\/table\/props\/trClass"
                    },
                    {
                        "text": "confirmMessage",
                        "desc": "Defines the message to show in the confirm when an action is made on the row.",
                        "url": "bbn-vue\/component\/table\/props\/confirmMessage"
                    },
                    {
                        "text": "expander",
                        "desc": "Defines the expander of the rows.",
                        "url": "bbn-vue\/component\/table\/props\/expander"
                    },
                    {
                        "text": "editor",
                        "desc": "Defines the editor to use when the edit button of a row is clicked.",
                        "url": "bbn-vue\/component\/table\/props\/editor"
                    },
                    {
                        "text": "fixedDefaultSide",
                        "desc": "If one or more columns have the property fixed set to true it defines the side of the fixed column(s).",
                        "url": "bbn-vue\/component\/table\/props\/fixedDefaultSide"
                    },
                    {
                        "text": "toolbar",
                        "desc": "Defines the toolbar of the table.",
                        "url": "bbn-vue\/component\/table\/props\/toolbar"
                    },
                    {
                        "text": "columns",
                        "desc": "An array of objects with at least the property 'field' that can replace the html '<bbns-column><\/bbns-column>' or extend them.",
                        "url": "bbn-vue\/component\/table\/props\/columns"
                    },
                    {
                        "text": "groupBy",
                        "desc": "The index of the property to group by the table referred to the object of data of the row.",
                        "url": "bbn-vue\/component\/table\/props\/groupBy"
                    },
                    {
                        "text": "expandedValues",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/props\/expandedValues"
                    },
                    {
                        "text": "expanded",
                        "desc": "In a grouped table, if set to true defines that all rows will be expanded. If an array is given defines which row(s) of the table will be expanded.",
                        "url": "bbn-vue\/component\/table\/props\/expanded"
                    },
                    {
                        "text": "footer",
                        "desc": "Defines the footer of the table.",
                        "url": "bbn-vue\/component\/table\/props\/footer"
                    },
                    {
                        "text": "groupFooter",
                        "desc": "Defines the footer for a group of columns.",
                        "url": "bbn-vue\/component\/table\/props\/groupFooter"
                    },
                    {
                        "text": "aggregateExp",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/props\/aggregateExp"
                    },
                    {
                        "text": "aggregate",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/props\/aggregate"
                    },
                    {
                        "text": "loadedConfig",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/props\/loadedConfig"
                    }
                ],
                "methods": [
                    {
                        "text": "exportCSV",
                        "desc": "Exports to csv and download the given filename.",
                        "url": "bbn-vue\/component\/table\/methods\/exportCSV"
                    },
                    {
                        "text": "exportExcel",
                        "desc": "Exports to excel.",
                        "url": "bbn-vue\/component\/table\/methods\/exportExcel"
                    },
                    {
                        "text": "getExcelPostData",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/methods\/getExcelPostData"
                    },
                    {
                        "text": "showQuery",
                        "desc": "Opens a popup showing the database query.",
                        "url": "bbn-vue\/component\/table\/methods\/showQuery"
                    },
                    {
                        "text": "isEditable",
                        "desc": "Returns true if a column is editable.",
                        "url": "bbn-vue\/component\/table\/methods\/isEditable"
                    },
                    {
                        "text": "isEdited",
                        "desc": "Returns true if the given row is edited.",
                        "url": "bbn-vue\/component\/table\/methods\/isEdited"
                    },
                    {
                        "text": "titleGroupsCells",
                        "desc": "Returns the configuration for the cells of the titles of grouped columns.",
                        "url": "bbn-vue\/component\/table\/methods\/titleGroupsCells"
                    },
                    {
                        "text": "hasFilter",
                        "desc": "Returns true if the table has currentFilters defined for the given column.",
                        "url": "bbn-vue\/component\/table\/methods\/hasFilter"
                    },
                    {
                        "text": "moveMouse",
                        "desc": "The behavior of the component at mouseMove.",
                        "url": "bbn-vue\/component\/table\/methods\/moveMouse"
                    },
                    {
                        "text": "checkFilterWindow",
                        "desc": "Handles the floatingFilterTimeOut.",
                        "url": "bbn-vue\/component\/table\/methods\/checkFilterWindow"
                    },
                    {
                        "text": "getPopup",
                        "desc": "Retuns the popup object.",
                        "url": "bbn-vue\/component\/table\/methods\/getPopup"
                    },
                    {
                        "text": "getFilterOptions",
                        "desc": "Returns the options for the bind of the table filter.",
                        "url": "bbn-vue\/component\/table\/methods\/getFilterOptions"
                    },
                    {
                        "text": "openMultiFilter",
                        "desc": "Opens the popup containing the multifilter.",
                        "url": "bbn-vue\/component\/table\/methods\/openMultiFilter"
                    },
                    {
                        "text": "getColFilters",
                        "desc": "Returns the filter of the given column.",
                        "url": "bbn-vue\/component\/table\/methods\/getColFilters"
                    },
                    {
                        "text": "showFilter",
                        "desc": "Shows the filter of the column.",
                        "url": "bbn-vue\/component\/table\/methods\/showFilter"
                    },
                    {
                        "text": "pickableColumnList",
                        "desc": "Returns the list of the showable columns",
                        "url": "bbn-vue\/component\/table\/methods\/pickableColumnList"
                    },
                    {
                        "text": "openColumnsPicker",
                        "desc": "Opens the popup containing the column picker.",
                        "url": "bbn-vue\/component\/table\/methods\/openColumnsPicker"
                    },
                    {
                        "text": "edit",
                        "desc": "Opens the popup containing the form to edit the row.",
                        "url": "bbn-vue\/component\/table\/methods\/edit"
                    },
                    {
                        "text": "successEdit",
                        "desc": "After the post in case of edit of the row, update the row in originalData.",
                        "url": "bbn-vue\/component\/table\/methods\/successEdit"
                    },
                    {
                        "text": "saveRow",
                        "desc": "Insert or update a row in originalData.",
                        "url": "bbn-vue\/component\/table\/methods\/saveRow"
                    },
                    {
                        "text": "saveInline",
                        "desc": "If the prop url of the table is defined makes a post to the url to update or insert the row, else fires the method saveRow to insert or update the row in originalData.",
                        "url": "bbn-vue\/component\/table\/methods\/saveInline"
                    },
                    {
                        "text": "isGroupedCell",
                        "desc": "Returns wheter or not the cell is grouped.",
                        "url": "bbn-vue\/component\/table\/methods\/isGroupedCell"
                    },
                    {
                        "text": "getConfig",
                        "desc": "Returns the current configuration of the table.",
                        "url": "bbn-vue\/component\/table\/methods\/getConfig"
                    },
                    {
                        "text": "getColumnsConfig",
                        "desc": "Returns the columns configuration.",
                        "url": "bbn-vue\/component\/table\/methods\/getColumnsConfig"
                    },
                    {
                        "text": "setConfig",
                        "desc": "Sets the current config of the table.",
                        "url": "bbn-vue\/component\/table\/methods\/setConfig"
                    },
                    {
                        "text": "save",
                        "desc": "Saves the current configuration.",
                        "url": "bbn-vue\/component\/table\/methods\/save"
                    },
                    {
                        "text": "insert",
                        "desc": "Adds the given data to the object tmpRow and opens the popup with the form to insert the row.",
                        "url": "bbn-vue\/component\/table\/methods\/insert"
                    },
                    {
                        "text": "copy",
                        "desc": "Adds the given data to the object tmpRow and opens the popup with the form to copy the row.",
                        "url": "bbn-vue\/component\/table\/methods\/copy"
                    },
                    {
                        "text": "checkSelection",
                        "desc": "Emits 'select', 'unselect' or 'toggle' at change of checkbox of the row in a selectable table.",
                        "url": "bbn-vue\/component\/table\/methods\/checkSelection"
                    },
                    {
                        "text": "updateData",
                        "desc": "Refresh the current data set.",
                        "url": "bbn-vue\/component\/table\/methods\/updateData"
                    },
                    {
                        "text": "isDirty",
                        "desc": "Return true if the given row is changed from originalData.",
                        "url": "bbn-vue\/component\/table\/methods\/isDirty"
                    },
                    {
                        "text": "currentClass",
                        "desc": "Returns the css class of the given column.",
                        "url": "bbn-vue\/component\/table\/methods\/currentClass"
                    },
                    {
                        "text": "isModified",
                        "desc": "Returns true if the row corresponding to the given index has changed respect to originalData.",
                        "url": "bbn-vue\/component\/table\/methods\/isModified"
                    },
                    {
                        "text": "isSorted",
                        "desc": "Returns true if the given column is sorted.",
                        "url": "bbn-vue\/component\/table\/methods\/isSorted"
                    },
                    {
                        "text": "sort",
                        "desc": "Sorts the given column.",
                        "url": "bbn-vue\/component\/table\/methods\/sort"
                    },
                    {
                        "text": "updateTable",
                        "desc": "Handles the table resize.",
                        "url": "bbn-vue\/component\/table\/methods\/updateTable"
                    },
                    {
                        "text": "render",
                        "desc": "Renders a cell according to column's config.",
                        "url": "bbn-vue\/component\/table\/methods\/render"
                    },
                    {
                        "text": "cancel",
                        "desc": "Cancels the changes made on the row data.",
                        "url": "bbn-vue\/component\/table\/methods\/cancel"
                    },
                    {
                        "text": "getWidth",
                        "desc": "Returns a dimension in pixels of the given param.",
                        "url": "bbn-vue\/component\/table\/methods\/getWidth"
                    },
                    {
                        "text": "reset",
                        "desc": "Resets configuration of the table.",
                        "url": "bbn-vue\/component\/table\/methods\/reset"
                    },
                    {
                        "text": "addColumn",
                        "desc": "Adds the given column to table's configuration",
                        "url": "bbn-vue\/component\/table\/methods\/addColumn"
                    },
                    {
                        "text": "isBeforeAggregated",
                        "desc": "Return true if the cell is before aggregated cells.",
                        "url": "bbn-vue\/component\/table\/methods\/isBeforeAggregated"
                    },
                    {
                        "text": "onResize",
                        "desc": "Handles the resize and reinitializes the table.",
                        "url": "bbn-vue\/component\/table\/methods\/onResize"
                    },
                    {
                        "text": "resizeHeight",
                        "desc": "Handles the resize.",
                        "url": "bbn-vue\/component\/table\/methods\/resizeHeight"
                    },
                    {
                        "text": "dataScrollContents",
                        "desc": "Returns an array containing the scrollcontainer of each items of groupCols.",
                        "url": "bbn-vue\/component\/table\/methods\/dataScrollContents"
                    },
                    {
                        "text": "isExpanded",
                        "desc": "Returns if the given row is expanded.",
                        "url": "bbn-vue\/component\/table\/methods\/isExpanded"
                    },
                    {
                        "text": "toggleExpanded",
                        "desc": "Toggles the expander of the row corresponding to the given idx.",
                        "url": "bbn-vue\/component\/table\/methods\/toggleExpanded"
                    },
                    {
                        "text": "rowHasExpander",
                        "desc": "Returns wheter or not the given row has the expander.",
                        "url": "bbn-vue\/component\/table\/methods\/rowHasExpander"
                    },
                    {
                        "text": "isSelected",
                        "desc": "Returns true if the given index is selected.",
                        "url": "bbn-vue\/component\/table\/methods\/isSelected"
                    },
                    {
                        "text": "hasTd",
                        "desc": "Returns true if the given row has td.",
                        "url": "bbn-vue\/component\/table\/methods\/hasTd"
                    },
                    {
                        "text": "init",
                        "desc": "Initializes the table.",
                        "url": "bbn-vue\/component\/table\/methods\/init"
                    },
                    {
                        "text": "keydown",
                        "desc": "Prevents default if enter or tab keys are pressed.",
                        "url": "bbn-vue\/component\/table\/methods\/keydown"
                    },
                    {
                        "text": "show",
                        "desc": "Show or hide the given column index.",
                        "url": "bbn-vue\/component\/table\/methods\/show"
                    },
                    {
                        "text": "getEditableComponent",
                        "desc": "If no editor is given to the table returns the correct component to edit the field basing on the column type.",
                        "url": "bbn-vue\/component\/table\/methods\/getEditableComponent"
                    },
                    {
                        "text": "getEditableOptions",
                        "desc": "Returns the object of properties to bind with the editable component.",
                        "url": "bbn-vue\/component\/table\/methods\/getEditableOptions"
                    },
                    {
                        "text": "getTr",
                        "desc": "Returns the html element of the given row index.",
                        "url": "bbn-vue\/component\/table\/methods\/getTr"
                    },
                    {
                        "text": "defaultObject",
                        "desc": "Returns an object of the default values for the different types of fields.",
                        "url": "bbn-vue\/component\/table\/methods\/defaultObject"
                    },
                    {
                        "text": "focusRow",
                        "desc": "Focuses the given row index.",
                        "url": "bbn-vue\/component\/table\/methods\/focusRow"
                    },
                    {
                        "text": "blurRow",
                        "desc": "Blurs the given row index.",
                        "url": "bbn-vue\/component\/table\/methods\/blurRow"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/listComponent"
                    },
                    {
                        "text": "dataEditorComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/dataEditorComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/localStorageComponent"
                    },
                    {
                        "text": "observerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/observerComponent"
                    },
                    {
                        "text": "keepCoolComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/keepCoolComponent"
                    },
                    {
                        "text": "dataComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/table\/mixins\/dataComponent"
                    }
                ]
            },
            {
                "text": "tabnav",
                "url": "bbn-vue\/component\/tabnav\/overview",
                "props": [
                    {
                        "text": "url",
                        "desc": "The URL on which the tabNav will be initialized.",
                        "url": "bbn-vue\/component\/tabnav\/props\/url"
                    },
                    {
                        "text": "autoload",
                        "desc": "Defines if the tab will be automatically loaded based on URLs. False by default except if it is true for the parent.",
                        "url": "bbn-vue\/component\/tabnav\/props\/autoload"
                    },
                    {
                        "text": "maxTitleLength",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/maxTitleLength"
                    },
                    {
                        "text": "orientation",
                        "desc": "The position of the tabs' titles: top (default) or bottom.",
                        "url": "bbn-vue\/component\/tabnav\/props\/orientation"
                    },
                    {
                        "text": "root",
                        "desc": "The root URL of the tabNav, will be only taken into account for the top parents' tabNav, will be automatically calculated for the children.",
                        "url": "bbn-vue\/component\/tabnav\/props\/root"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Sets if the tabs' titles will be scrollable in case they have a greater width than the page (true), or if they will be shown multilines (false, default).",
                        "url": "bbn-vue\/component\/tabnav\/props\/scrollable"
                    },
                    {
                        "text": "storageName",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/storageName"
                    },
                    {
                        "text": "confirmLeave",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/confirmLeave"
                    },
                    {
                        "text": "hideAdvertUrl",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/hideAdvertUrl"
                    },
                    {
                        "text": "historyMaxLength",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/historyMaxLength"
                    },
                    {
                        "text": "source",
                        "desc": "The tabs shown at init.",
                        "url": "bbn-vue\/component\/tabnav\/props\/source"
                    },
                    {
                        "text": "menu",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabnav\/props\/menu"
                    }
                ],
                "methods": [],
                "mixins": []
            },
            {
                "text": "tabs",
                "url": "bbn-vue\/component\/tabs\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/props\/source"
                    },
                    {
                        "text": "value",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/props\/value"
                    },
                    {
                        "text": "content",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/props\/content"
                    },
                    {
                        "text": "scrollable",
                        "desc": "Sets if the tabs' titles will be scrollable in case they have a greater width than the page (true), or if they will be shown multilines (false, default).",
                        "url": "bbn-vue\/component\/tabs\/props\/scrollable"
                    },
                    {
                        "text": "maxTitleLength",
                        "desc": "The max length for the tab's title",
                        "url": "bbn-vue\/component\/tabs\/props\/maxTitleLength"
                    },
                    {
                        "text": "menu",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/props\/menu"
                    }
                ],
                "methods": [
                    {
                        "text": "numProperties",
                        "desc": "Alias of bbn.fn.numProperties",
                        "url": "bbn-vue\/component\/tabs\/methods\/numProperties"
                    },
                    {
                        "text": "cutTitle",
                        "desc": "Cuts the given string by 'maxTitleLength' property value",
                        "url": "bbn-vue\/component\/tabs\/methods\/cutTitle"
                    },
                    {
                        "text": "getMenuFn",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/getMenuFn"
                    },
                    {
                        "text": "getFullTitle",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/getFullTitle"
                    },
                    {
                        "text": "getTabColor",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/getTabColor"
                    },
                    {
                        "text": "scrollTabs",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/scrollTabs"
                    },
                    {
                        "text": "getTab",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/getTab"
                    },
                    {
                        "text": "close",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/close"
                    },
                    {
                        "text": "closeAll",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/closeAll"
                    },
                    {
                        "text": "closeallBut",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/closeallBut"
                    },
                    {
                        "text": "ping",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/ping"
                    },
                    {
                        "text": "unpin",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/unpin"
                    },
                    {
                        "text": "isValidIndex",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/methods\/isValidIndex"
                    }
                ],
                "mixins": [
                    {
                        "text": "observerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tabs\/mixins\/observerComponent"
                    }
                ]
            },
            {
                "text": "terminal",
                "url": "bbn-vue\/component\/terminal\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "textarea",
                "url": "bbn-vue\/component\/textarea\/overview",
                "props": [
                    {
                        "text": "rows",
                        "desc": "The number of rows of the textarea.",
                        "url": "bbn-vue\/component\/textarea\/props\/rows"
                    },
                    {
                        "text": "cols",
                        "desc": "The number of columns of the textarea.",
                        "url": "bbn-vue\/component\/textarea\/props\/cols"
                    },
                    {
                        "text": "maxlength",
                        "desc": "The max length of the text inside the textarea.",
                        "url": "bbn-vue\/component\/textarea\/props\/maxlength"
                    },
                    {
                        "text": "cfg",
                        "desc": "The object of configuration.",
                        "url": "bbn-vue\/component\/textarea\/props\/cfg"
                    }
                ],
                "methods": [
                    {
                        "text": "clear",
                        "desc": "Clears the textarea.",
                        "url": "bbn-vue\/component\/textarea\/methods\/clear"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/textarea\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/textarea\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/textarea\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "timepicker",
                "url": "bbn-vue\/component\/timepicker\/overview",
                "props": [
                    {
                        "text": "format",
                        "desc": "The format of the time displayed.",
                        "url": "bbn-vue\/component\/timepicker\/props\/format"
                    },
                    {
                        "text": "valueFormat",
                        "desc": "The format of the value.",
                        "url": "bbn-vue\/component\/timepicker\/props\/valueFormat"
                    },
                    {
                        "text": "mask",
                        "desc": "The mask for the time input.",
                        "url": "bbn-vue\/component\/timepicker\/props\/mask"
                    },
                    {
                        "text": "max",
                        "desc": "The maximum allowed value.",
                        "url": "bbn-vue\/component\/timepicker\/props\/max"
                    },
                    {
                        "text": "min",
                        "desc": "The minimum allowed value.",
                        "url": "bbn-vue\/component\/timepicker\/props\/min"
                    },
                    {
                        "text": "showSecond",
                        "desc": "Shows\/hides the \"seconds\" selection.",
                        "url": "bbn-vue\/component\/timepicker\/props\/showSecond"
                    },
                    {
                        "text": "scrollMode",
                        "desc": "Sets to true to show a list view for the time selection instead of the dropdowns.",
                        "url": "bbn-vue\/component\/timepicker\/props\/scrollMode"
                    },
                    {
                        "text": "blocksMode",
                        "desc": "Sets to true to show a list view for the time selection instead of the dropdowns.",
                        "url": "bbn-vue\/component\/timepicker\/props\/blocksMode"
                    },
                    {
                        "text": "autosize",
                        "desc": "Set it to false if you dont' want to auto-resize the input's width based on its value (in characters).",
                        "url": "bbn-vue\/component\/timepicker\/props\/autosize"
                    }
                ],
                "methods": [
                    {
                        "text": "getValueFormat",
                        "desc": "Gets the correct value format.",
                        "url": "bbn-vue\/component\/timepicker\/methods\/getValueFormat"
                    },
                    {
                        "text": "setValue",
                        "desc": "Sets the value.",
                        "url": "bbn-vue\/component\/timepicker\/methods\/setValue"
                    },
                    {
                        "text": "change",
                        "desc": "Triggered when the value is changed by the input.",
                        "url": "bbn-vue\/component\/timepicker\/methods\/change"
                    },
                    {
                        "text": "setInputValue",
                        "desc": "Sets the value of the input.",
                        "url": "bbn-vue\/component\/timepicker\/methods\/setInputValue"
                    },
                    {
                        "text": "clear",
                        "desc": "Clears the input.",
                        "url": "bbn-vue\/component\/timepicker\/methods\/clear"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/timepicker\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/timepicker\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/timepicker\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "toolbar",
                "url": "bbn-vue\/component\/toolbar\/overview",
                "props": [
                    {
                        "text": "orientation",
                        "desc": "The orientation of the bar.",
                        "url": "bbn-vue\/component\/toolbar\/props\/orientation"
                    },
                    {
                        "text": "size",
                        "desc": "The size of the toolbar, height for horizontal toolbar and width for vertical toolbar.",
                        "url": "bbn-vue\/component\/toolbar\/props\/size"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/toolbar\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "tooltip",
                "url": "bbn-vue\/component\/tooltip\/overview",
                "props": [
                    {
                        "text": "source",
                        "desc": "The source of the component tooltip.",
                        "url": "bbn-vue\/component\/tooltip\/props\/source"
                    },
                    {
                        "text": "sourceOption",
                        "desc": "The source's option",
                        "url": "bbn-vue\/component\/tooltip\/props\/sourceOption"
                    },
                    {
                        "text": "tag",
                        "desc": "The html tag.",
                        "url": "bbn-vue\/component\/tooltip\/props\/tag"
                    },
                    {
                        "text": "context",
                        "desc": "True if the tooltip component has a context menu.",
                        "url": "bbn-vue\/component\/tooltip\/props\/context"
                    },
                    {
                        "text": "mode",
                        "desc": "The mode of the component.",
                        "url": "bbn-vue\/component\/tooltip\/props\/mode"
                    }
                ],
                "methods": [
                    {
                        "text": "getItems",
                        "desc": "Returns the items of the component from the source.",
                        "url": "bbn-vue\/component\/tooltip\/methods\/getItems"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tooltip\/mixins\/basicComponent"
                    }
                ]
            },
            {
                "text": "tree",
                "url": "bbn-vue\/component\/tree\/overview",
                "props": [
                    {
                        "text": "minExpandLevel",
                        "desc": "The level until which the tree must be opened.",
                        "url": "bbn-vue\/component\/tree\/props\/minExpandLevel"
                    },
                    {
                        "text": "opened",
                        "desc": "True if the whole tree must be opened.",
                        "url": "bbn-vue\/component\/tree\/props\/opened"
                    },
                    {
                        "text": "source",
                        "desc": "An array of objects representing the nodes.",
                        "url": "bbn-vue\/component\/tree\/props\/source"
                    },
                    {
                        "text": "cls",
                        "desc": "The class given to the node (or a function returning the class name).",
                        "url": "bbn-vue\/component\/tree\/props\/cls"
                    },
                    {
                        "text": "component",
                        "desc": "A component for the node.",
                        "url": "bbn-vue\/component\/tree\/props\/component"
                    },
                    {
                        "text": "draggable",
                        "desc": "Set to true to have the nodes draggable.",
                        "url": "bbn-vue\/component\/tree\/props\/draggable"
                    },
                    {
                        "text": "menu",
                        "desc": "An array (or a function returning one) of elements for the node context menu.",
                        "url": "bbn-vue\/component\/tree\/props\/menu"
                    },
                    {
                        "text": "icons",
                        "desc": "Set to true to use the icon given in the source object of the node.",
                        "url": "bbn-vue\/component\/tree\/props\/icons"
                    },
                    {
                        "text": "iconColor",
                        "desc": "An string (or a function returning one) for the icon's color.",
                        "url": "bbn-vue\/component\/tree\/props\/iconColor"
                    },
                    {
                        "text": "root",
                        "desc": "The value of the UID to send for the root tree.",
                        "url": "bbn-vue\/component\/tree\/props\/root"
                    },
                    {
                        "text": "level",
                        "desc": "The hierarchy level, root is 0, and for each generation 1 is added to the level.",
                        "url": "bbn-vue\/component\/tree\/props\/level"
                    },
                    {
                        "text": "droppables",
                        "desc": "Other trees where nodes can be dropped on.",
                        "url": "bbn-vue\/component\/tree\/props\/droppables"
                    },
                    {
                        "text": "object",
                        "desc": "Set to true allows to use an object for the tree items.",
                        "url": "bbn-vue\/component\/tree\/props\/object"
                    },
                    {
                        "text": "selfDrop",
                        "desc": "If set to false a draggable tree will not be able to drop on itself.",
                        "url": "bbn-vue\/component\/tree\/props\/selfDrop"
                    },
                    {
                        "text": "trasferData",
                        "desc": "Helper to transform data when passing from one tree to another.",
                        "url": "bbn-vue\/component\/tree\/props\/trasferData"
                    },
                    {
                        "text": "expanded",
                        "desc": "An array containing the expanded nodes idx.",
                        "url": "bbn-vue\/component\/tree\/props\/expanded"
                    },
                    {
                        "text": "path",
                        "desc": "The opened path if there is one.",
                        "url": "bbn-vue\/component\/tree\/props\/path"
                    },
                    {
                        "text": "selectable",
                        "desc": "Set to true for a selectable tree.",
                        "url": "bbn-vue\/component\/tree\/props\/selectable"
                    },
                    {
                        "text": "hierarchy",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree\/props\/hierarchy"
                    },
                    {
                        "text": "quickFilter",
                        "desc": "The string to use as quick filter in the tree.",
                        "url": "bbn-vue\/component\/tree\/props\/quickFilter"
                    },
                    {
                        "text": "sortable",
                        "desc": "True if the tre has to be sortable.",
                        "url": "bbn-vue\/component\/tree\/props\/sortable"
                    },
                    {
                        "text": "order",
                        "desc": "The order of items.",
                        "url": "bbn-vue\/component\/tree\/props\/order"
                    },
                    {
                        "text": "hybrid",
                        "desc": "Set to true if the prop 'ajax' is true,\r\nthe tree will make the ajax call only for\r\nthe source of the root level and will take\r\nthe current data for the source of other levels",
                        "url": "bbn-vue\/component\/tree\/props\/hybrid"
                    }
                ],
                "methods": [
                    {
                        "text": "reset",
                        "desc": "Resets the tree to the original configuration.",
                        "url": "bbn-vue\/component\/tree\/methods\/reset"
                    },
                    {
                        "text": "resize",
                        "desc": "Resizes the root scroller.",
                        "url": "bbn-vue\/component\/tree\/methods\/resize"
                    },
                    {
                        "text": "onOpen",
                        "desc": "Resizes the root tree and emit an open event",
                        "url": "bbn-vue\/component\/tree\/methods\/onOpen"
                    },
                    {
                        "text": "onClose",
                        "desc": "Resizes the root tree and emit a close event.",
                        "url": "bbn-vue\/component\/tree\/methods\/onClose"
                    },
                    {
                        "text": "getNodeByIdx",
                        "desc": "Returns the node corresponding to the given idx.",
                        "url": "bbn-vue\/component\/tree\/methods\/getNodeByIdx"
                    },
                    {
                        "text": "getNode",
                        "desc": "Returns a node basing on the given context.",
                        "url": "bbn-vue\/component\/tree\/methods\/getNode"
                    },
                    {
                        "text": "getMenu",
                        "desc": "Returns the menu of the given node.",
                        "url": "bbn-vue\/component\/tree\/methods\/getMenu"
                    },
                    {
                        "text": "getPostData",
                        "desc": "Returns an object with the data to send for a given node.\r\nIf UID has been given obj will only have this prop other the whole data object.",
                        "url": "bbn-vue\/component\/tree\/methods\/getPostData"
                    },
                    {
                        "text": "keyNav",
                        "desc": "Manages the key navigation inside the tree.",
                        "url": "bbn-vue\/component\/tree\/methods\/keyNav"
                    },
                    {
                        "text": "reload",
                        "desc": "Reloads a node already loaded.",
                        "url": "bbn-vue\/component\/tree\/methods\/reload"
                    },
                    {
                        "text": "load",
                        "desc": "Loads a node.",
                        "url": "bbn-vue\/component\/tree\/methods\/load"
                    },
                    {
                        "text": "openPath",
                        "desc": "Opens the node(s) corresponding to the prop 'path'",
                        "url": "bbn-vue\/component\/tree\/methods\/openPath"
                    },
                    {
                        "text": "getNodePath",
                        "desc": "Returns the node's path.",
                        "url": "bbn-vue\/component\/tree\/methods\/getNodePath"
                    },
                    {
                        "text": "unselect",
                        "desc": "Unselects the currently selected node.",
                        "url": "bbn-vue\/component\/tree\/methods\/unselect"
                    },
                    {
                        "text": "deactivateAll",
                        "desc": "Deactivate the active nodes.",
                        "url": "bbn-vue\/component\/tree\/methods\/deactivateAll"
                    },
                    {
                        "text": "isNodeOf",
                        "desc": "Returns true if the first argument node descends from the second.",
                        "url": "bbn-vue\/component\/tree\/methods\/isNodeOf"
                    },
                    {
                        "text": "move",
                        "desc": "Moves a node to or inside a tree.",
                        "url": "bbn-vue\/component\/tree\/methods\/move"
                    },
                    {
                        "text": "getConfig",
                        "desc": "Returns the current configuration of the tree.",
                        "url": "bbn-vue\/component\/tree\/methods\/getConfig"
                    },
                    {
                        "text": "getLocalStorage",
                        "desc": "Gets the local storage.",
                        "url": "bbn-vue\/component\/tree\/methods\/getLocalStorage"
                    },
                    {
                        "text": "setLocalStorage",
                        "desc": "Sets the local storage.",
                        "url": "bbn-vue\/component\/tree\/methods\/setLocalStorage"
                    },
                    {
                        "text": "scrollToSelected",
                        "desc": "Scrolls the tree to the selected node.",
                        "url": "bbn-vue\/component\/tree\/methods\/scrollToSelected"
                    },
                    {
                        "text": "scrollToActive",
                        "desc": "Scrolls the tree to the active node.",
                        "url": "bbn-vue\/component\/tree\/methods\/scrollToActive"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree\/mixins\/basicComponent"
                    },
                    {
                        "text": "localStorageComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree\/mixins\/localStorageComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree\/mixins\/listComponent"
                    }
                ]
            },
            {
                "text": "tree-input",
                "url": "bbn-vue\/component\/tree-input\/overview",
                "props": [
                    {
                        "text": "extensions",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree-input\/props\/extensions"
                    }
                ],
                "methods": [],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree-input\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree-input\/mixins\/inputComponent"
                    },
                    {
                        "text": "eventsComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/tree-input\/mixins\/eventsComponent"
                    }
                ]
            },
            {
                "text": "treedown",
                "url": "bbn-vue\/component\/treedown\/overview",
                "props": [
                    {
                        "text": "component",
                        "desc": "A component for each element of the list.",
                        "url": "bbn-vue\/component\/treedown\/props\/component"
                    },
                    {
                        "text": "template",
                        "desc": "The template to costumize the dropdown menu.",
                        "url": "bbn-vue\/component\/treedown\/props\/template"
                    },
                    {
                        "text": "valueTemplate",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/props\/valueTemplate"
                    },
                    {
                        "text": "group",
                        "desc": "Defines the groups for the dropdown menu.",
                        "url": "bbn-vue\/component\/treedown\/props\/group"
                    },
                    {
                        "text": "nullable",
                        "desc": "Set to true so that the dropdown is not autofilled if empty",
                        "url": "bbn-vue\/component\/treedown\/props\/nullable"
                    },
                    {
                        "text": "placeholder",
                        "desc": "The placeholder of the dropdown.",
                        "url": "bbn-vue\/component\/treedown\/props\/placeholder"
                    }
                ],
                "methods": [
                    {
                        "text": "onResize",
                        "desc": "Handles the resize of the component",
                        "url": "bbn-vue\/component\/treedown\/methods\/onResize"
                    },
                    {
                        "text": "enter",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/methods\/enter"
                    },
                    {
                        "text": "leave",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/methods\/leave"
                    },
                    {
                        "text": "select",
                        "desc": "Emits the event 'select'",
                        "url": "bbn-vue\/component\/treedown\/methods\/select"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/basicComponent"
                    },
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/inputComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/resizerComponent"
                    },
                    {
                        "text": "listComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/listComponent"
                    },
                    {
                        "text": "keynavComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/keynavComponent"
                    },
                    {
                        "text": "urlComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treedown\/mixins\/urlComponent"
                    }
                ]
            },
            {
                "text": "treemenu",
                "url": "bbn-vue\/component\/treemenu\/overview",
                "props": [
                    {
                        "text": "placeholder",
                        "desc": "The placeholder on the search input of the tree.",
                        "url": "bbn-vue\/component\/treemenu\/props\/placeholder"
                    },
                    {
                        "text": "source",
                        "desc": "The source of the tree.",
                        "url": "bbn-vue\/component\/treemenu\/props\/source"
                    },
                    {
                        "text": "shortcuts",
                        "desc": "",
                        "url": "bbn-vue\/component\/treemenu\/props\/shortcuts"
                    },
                    {
                        "text": "search",
                        "desc": "Set to false hide the search input.",
                        "url": "bbn-vue\/component\/treemenu\/props\/search"
                    },
                    {
                        "text": "menus",
                        "desc": "The array of menus.",
                        "url": "bbn-vue\/component\/treemenu\/props\/menus"
                    },
                    {
                        "text": "current",
                        "desc": "The current menu object.",
                        "url": "bbn-vue\/component\/treemenu\/props\/current"
                    }
                ],
                "methods": [
                    {
                        "text": "elementStyle",
                        "desc": "Defines position and width of the component.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/elementStyle"
                    },
                    {
                        "text": "getMenu",
                        "desc": "Creates the menu of the given node.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/getMenu"
                    },
                    {
                        "text": "mapSrc",
                        "desc": "Maps the source of the tree.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/mapSrc"
                    },
                    {
                        "text": "go",
                        "desc": "Links to the prop link or url of the given item.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/go"
                    },
                    {
                        "text": "resizeScroll",
                        "desc": "Handles the resize of the scroll",
                        "url": "bbn-vue\/component\/treemenu\/methods\/resizeScroll"
                    },
                    {
                        "text": "reset",
                        "desc": "Reload the tree",
                        "url": "bbn-vue\/component\/treemenu\/methods\/reset"
                    },
                    {
                        "text": "getData",
                        "desc": "Gets the data of the component",
                        "url": "bbn-vue\/component\/treemenu\/methods\/getData"
                    },
                    {
                        "text": "readyTree",
                        "desc": "Method triggered at '@ready' of the component to set the current menu.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/readyTree"
                    },
                    {
                        "text": "focusSearch",
                        "desc": "Focuses the search input.",
                        "url": "bbn-vue\/component\/treemenu\/methods\/focusSearch"
                    }
                ],
                "mixins": [
                    {
                        "text": "basicComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treemenu\/mixins\/basicComponent"
                    },
                    {
                        "text": "resizerComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/treemenu\/mixins\/resizerComponent"
                    }
                ]
            },
            {
                "text": "upload",
                "url": "bbn-vue\/component\/upload\/overview",
                "props": [
                    {
                        "text": "value",
                        "desc": "The value of the component.",
                        "url": "bbn-vue\/component\/upload\/props\/value"
                    },
                    {
                        "text": "saveUrl",
                        "desc": "The URL for the action 'save'.",
                        "url": "bbn-vue\/component\/upload\/props\/saveUrl"
                    },
                    {
                        "text": "removeUrl",
                        "desc": "The URL for the action 'delete'.",
                        "url": "bbn-vue\/component\/upload\/props\/removeUrl"
                    },
                    {
                        "text": "downloadUrl",
                        "desc": "The URL for the action 'download'.",
                        "url": "bbn-vue\/component\/upload\/props\/downloadUrl"
                    },
                    {
                        "text": "autoUpload",
                        "desc": "Set to true to automatically upload selected files.",
                        "url": "bbn-vue\/component\/upload\/props\/autoUpload"
                    },
                    {
                        "text": "multiple",
                        "desc": "Set to true to allow the upload of multiple files.",
                        "url": "bbn-vue\/component\/upload\/props\/multiple"
                    },
                    {
                        "text": "max",
                        "desc": "Tha maximum number of files. 0 for infinite.",
                        "url": "bbn-vue\/component\/upload\/props\/max"
                    },
                    {
                        "text": "disabled",
                        "desc": "Set to true to disable the component.",
                        "url": "bbn-vue\/component\/upload\/props\/disabled"
                    },
                    {
                        "text": "editable",
                        "desc": "Set it to true if you want to be able to edit the filename.",
                        "url": "bbn-vue\/component\/upload\/props\/editable"
                    },
                    {
                        "text": "downloadable",
                        "desc": "True if you want the possibility to download a file.",
                        "url": "bbn-vue\/component\/upload\/props\/downloadable"
                    },
                    {
                        "text": "icons",
                        "desc": "Shows the file's icon.",
                        "url": "bbn-vue\/component\/upload\/props\/icons"
                    },
                    {
                        "text": "thumbs",
                        "desc": "Shows the preview image of the file uploaded.",
                        "url": "bbn-vue\/component\/upload\/props\/thumbs"
                    },
                    {
                        "text": "thumbnot",
                        "desc": "If the property 'thumbs' is set to false, a text is shown.",
                        "url": "bbn-vue\/component\/upload\/props\/thumbnot"
                    },
                    {
                        "text": "maxSize",
                        "desc": "The maximum size of the thumb.",
                        "url": "bbn-vue\/component\/upload\/props\/maxSize"
                    },
                    {
                        "text": "thumbWaiting",
                        "desc": "The text shown during the file's transfer.",
                        "url": "bbn-vue\/component\/upload\/props\/thumbWaiting"
                    },
                    {
                        "text": "json",
                        "desc": "Set to true to convert the value as JSON.",
                        "url": "bbn-vue\/component\/upload\/props\/json"
                    },
                    {
                        "text": "text",
                        "desc": "An object to customize the default text.",
                        "url": "bbn-vue\/component\/upload\/props\/text"
                    },
                    {
                        "text": "icon",
                        "desc": "The icon displayed on the upload button.",
                        "url": "bbn-vue\/component\/upload\/props\/icon"
                    },
                    {
                        "text": "extensions",
                        "desc": "The array of accepted extensions.",
                        "url": "bbn-vue\/component\/upload\/props\/extensions"
                    },
                    {
                        "text": "accept",
                        "desc": "The accepted types of files.",
                        "url": "bbn-vue\/component\/upload\/props\/accept"
                    },
                    {
                        "text": "paste",
                        "desc": "Set to false to disable the 'paste' function.",
                        "url": "bbn-vue\/component\/upload\/props\/paste"
                    },
                    {
                        "text": "dragDrop",
                        "desc": "Set to false to disable the 'drang&drop' function.",
                        "url": "bbn-vue\/component\/upload\/props\/dragDrop"
                    },
                    {
                        "text": "data",
                        "desc": "Additional data sent with the ajax call.",
                        "url": "bbn-vue\/component\/upload\/props\/data"
                    },
                    {
                        "text": "showFilesize",
                        "desc": "Shows or not the files' size on the list.",
                        "url": "bbn-vue\/component\/upload\/props\/showFilesize"
                    }
                ],
                "methods": [
                    {
                        "text": "getValue",
                        "desc": "Returns the current value. If it is in the JSON format, it's converted.",
                        "url": "bbn-vue\/component\/upload\/methods\/getValue"
                    },
                    {
                        "text": "filesChanged",
                        "desc": "The method called when the user select or drop files.",
                        "url": "bbn-vue\/component\/upload\/methods\/filesChanged"
                    },
                    {
                        "text": "upload",
                        "desc": "Uploads the file with the given id or all files with the status 'ready'.",
                        "url": "bbn-vue\/component\/upload\/methods\/upload"
                    },
                    {
                        "text": "setName",
                        "desc": "Sets the name to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setName"
                    },
                    {
                        "text": "setStatusReady",
                        "desc": "Sets the status 'ready' to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setStatusReady"
                    },
                    {
                        "text": "setStatusError",
                        "desc": "Sets the status 'error' to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setStatusError"
                    },
                    {
                        "text": "setStatusSuccess",
                        "desc": "Sets the status 'success' to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setStatusSuccess"
                    },
                    {
                        "text": "setStatusProgress",
                        "desc": "Sets the status 'progress' to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setStatusProgress"
                    },
                    {
                        "text": "setValue",
                        "desc": "Sets the value.",
                        "url": "bbn-vue\/component\/upload\/methods\/setValue"
                    },
                    {
                        "text": "setProgress",
                        "desc": "Sets the given progress value to to the file with the given id.",
                        "url": "bbn-vue\/component\/upload\/methods\/setProgress"
                    },
                    {
                        "text": "edit",
                        "desc": "Sets the given file to edit mode.",
                        "url": "bbn-vue\/component\/upload\/methods\/edit"
                    },
                    {
                        "text": "saveEdit",
                        "desc": "Saves the change did to the filename.",
                        "url": "bbn-vue\/component\/upload\/methods\/saveEdit"
                    },
                    {
                        "text": "cancelEdit",
                        "desc": "Exits from the edit mode.",
                        "url": "bbn-vue\/component\/upload\/methods\/cancelEdit"
                    },
                    {
                        "text": "retry",
                        "desc": "Retries to upload the given file.",
                        "url": "bbn-vue\/component\/upload\/methods\/retry"
                    },
                    {
                        "text": "remove",
                        "desc": "\\\nDeletes the given file.",
                        "url": "bbn-vue\/component\/upload\/methods\/remove"
                    },
                    {
                        "text": "pasteEvent",
                        "desc": "The method called on the paste event.",
                        "url": "bbn-vue\/component\/upload\/methods\/pasteEvent"
                    },
                    {
                        "text": "download",
                        "desc": "Downloads the given file.",
                        "url": "bbn-vue\/component\/upload\/methods\/download"
                    },
                    {
                        "text": "getFileSize",
                        "desc": "Gets the formatted file' size.",
                        "url": "bbn-vue\/component\/upload\/methods\/getFileSize"
                    },
                    {
                        "text": "getFileIcon",
                        "desc": "Gets the icon class by the file's extension.",
                        "url": "bbn-vue\/component\/upload\/methods\/getFileIcon"
                    },
                    {
                        "text": "getFileExt",
                        "desc": "Gets the extension of the five file.",
                        "url": "bbn-vue\/component\/upload\/methods\/getFileExt"
                    }
                ],
                "mixins": [
                    {
                        "text": "inputComponent",
                        "desc": "",
                        "url": "bbn-vue\/component\/upload\/mixins\/inputComponent"
                    }
                ]
            },
            {
                "text": "video",
                "url": "bbn-vue\/component\/video\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "vlist",
                "url": "bbn-vue\/component\/vlist\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "widget",
                "url": "bbn-vue\/component\/widget\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            },
            {
                "text": "window",
                "url": "bbn-vue\/component\/window\/overview",
                "props": [],
                "methods": [],
                "mixins": []
            }
        ]
    },
    {
        "text": "Functions",
        "value": "vue\/functions",
        "items": [
            {
                "text": "addComponent",
                "url": "bbn-vue\/function\/addComponent",
                "desc": ""
            },
            {
                "text": "addPrefix",
                "url": "bbn-vue\/function\/addPrefix",
                "desc": ""
            },
            {
                "text": "announceComponent",
                "url": "bbn-vue\/function\/announceComponent",
                "desc": ""
            },
            {
                "text": "closest",
                "url": "bbn-vue\/function\/closest",
                "desc": ""
            },
            {
                "text": "executeQueueItem",
                "url": "bbn-vue\/function\/executeQueueItem",
                "desc": ""
            },
            {
                "text": "executeQueueItems",
                "url": "bbn-vue\/function\/executeQueueItems",
                "desc": ""
            },
            {
                "text": "extend",
                "url": "bbn-vue\/function\/extend",
                "desc": ""
            },
            {
                "text": "find",
                "url": "bbn-vue\/function\/find",
                "desc": ""
            },
            {
                "text": "findAll",
                "url": "bbn-vue\/function\/findAll",
                "desc": ""
            },
            {
                "text": "findAllByKey",
                "url": "bbn-vue\/function\/findAllByKey",
                "desc": ""
            },
            {
                "text": "findByKey",
                "url": "bbn-vue\/function\/findByKey",
                "desc": ""
            },
            {
                "text": "getChildByKey",
                "url": "bbn-vue\/function\/getChildByKey",
                "desc": ""
            },
            {
                "text": "getComponents",
                "url": "bbn-vue\/function\/getComponents",
                "desc": ""
            },
            {
                "text": "getContainerURL",
                "url": "bbn-vue\/function\/getContainerURL",
                "desc": ""
            },
            {
                "text": "getPopup",
                "url": "bbn-vue\/function\/getPopup",
                "desc": ""
            },
            {
                "text": "getRef",
                "url": "bbn-vue\/function\/getRef",
                "desc": ""
            },
            {
                "text": "getRoot",
                "url": "bbn-vue\/function\/getRoot",
                "desc": ""
            },
            {
                "text": "getStorageComponent",
                "url": "bbn-vue\/function\/getStorageComponent",
                "desc": ""
            },
            {
                "text": "initDefaults",
                "url": "bbn-vue\/function\/initDefaults",
                "desc": ""
            },
            {
                "text": "is",
                "url": "bbn-vue\/function\/is",
                "desc": ""
            },
            {
                "text": "loadComponentsByPrefix",
                "url": "bbn-vue\/function\/loadComponentsByPrefix",
                "desc": ""
            },
            {
                "text": "makeUID",
                "url": "bbn-vue\/function\/makeUID",
                "desc": ""
            },
            {
                "text": "post",
                "url": "bbn-vue\/function\/post",
                "desc": ""
            },
            {
                "text": "postOut",
                "url": "bbn-vue\/function\/postOut",
                "desc": ""
            },
            {
                "text": "preloadBBN",
                "url": "bbn-vue\/function\/preloadBBN",
                "desc": ""
            },
            {
                "text": "queueComponent",
                "url": "bbn-vue\/function\/queueComponent",
                "desc": ""
            },
            {
                "text": "queueComponentBBN",
                "url": "bbn-vue\/function\/queueComponentBBN",
                "desc": ""
            },
            {
                "text": "replaceArrays",
                "url": "bbn-vue\/function\/replaceArrays",
                "desc": ""
            },
            {
                "text": "resetDef",
                "url": "bbn-vue\/function\/resetDef",
                "desc": ""
            },
            {
                "text": "resetDefBBN",
                "url": "bbn-vue\/function\/resetDefBBN",
                "desc": ""
            },
            {
                "text": "retrieveRef",
                "url": "bbn-vue\/function\/retrieveRef",
                "desc": ""
            },
            {
                "text": "setComponentRule",
                "url": "bbn-vue\/function\/setComponentRule",
                "desc": ""
            },
            {
                "text": "setDefaultComponentRule",
                "url": "bbn-vue\/function\/setDefaultComponentRule",
                "desc": ""
            },
            {
                "text": "setDefaults",
                "url": "bbn-vue\/function\/setDefaults",
                "desc": ""
            },
            {
                "text": "setStorageComponent",
                "url": "bbn-vue\/function\/setStorageComponent",
                "desc": ""
            },
            {
                "text": "unloadComponent",
                "url": "bbn-vue\/function\/unloadComponent",
                "desc": ""
            },
            {
                "text": "unsetComponentRule",
                "url": "bbn-vue\/function\/unsetComponentRule",
                "desc": ""
            }
        ]
    }
]