(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="['bbn-100', 'bbn-unselectable', componentClass]">
  <span class="bbn-loadbar-content bbn-right-padded bbn-flex-width"
        @click="info = !info"
        ref="bar">
    <!--span class="buttons" v-if="data.length">
      <i :title="_('History informations')"
         :class="{
           'bbn-p': false,
           'bbn-lg': true,
           'fa': true,
           'fa-info_circle': true
         }"
         @click="getInfo"
      ></i>
      <i :title="_('Delete history')"
         :class="{
           'bbn-p': data.length,
           'bbn-lg': true,
           'far': true,
           'fa-times_circle': true,
           'bbn-invisible': !data.length
         }"
         @click="deleteHistory"
      ></i>
      <i :title="_('Previous Ajax call')"
         :class="{
           'bbn-p': selected < data.length - 1,
           'bbn-lg': true,
           'fas': true,
           'fa-angle_left': true,
           'bbn-invisible': selected >= data.length - 1
         }"
         @click="selected++"
      ></i>
      <i :title="_('Next Ajax call')"
         :class="{
           'bbn-p': selected > 0,
           'bbn-lg': true,
           'fa': true,
           'fa-angle_right': true,
           'bbn-invisible': selected <= 0
         }"
         @click="selected--"
      ></i>
      <i :title="_('Play current calls')"
         :class="{
           'bbn-p': selected > 0,
           'bbn-lg': true,
           'fa': true,
           'fa-play': true,
           'bbn-invisible': selected <= 0
         }"
         @click="selected = 0"
      ></i>
    </span-->
    <span class="bbn-loadbar-state bbn-hxspadded bbn-c bbn-block bbn-h-100 bbn-middle">
      <bbn-loadicon v-if="currentItem.loading" class="bbn-blue bbn-h-100"></bbn-loadicon>
      <i v-else-if="currentItem.error" class="nf nf-fa-times_circle bbn-red"></i>
      <i v-else-if="currentItem.success" class="nf nf-fa-check bbn-green"></i>
      <i v-else-if="currentItem.abort" class="nf nf-mdi-stop bbn-orange"></i>
    </span>
    <span class="bbn-flex-fill">
      <span class="bbn-overlay">
        <span class="bbn-h-100 bbn-vmiddle">
          <a href="javascript:;"
             :title="text + ' ' + _('Loading')"
             style="color: inherit; cursor: default"
             v-if="currentItem"
             v-text="currentItem.url"
          ></a>
        </span>
      </span>
    </span>
  </span>
  <bbn-floater v-if="info"
               :element="$refs.bar"
               ref="floater"
               :auto-hide="true"
               :title="_('Requests\\' history')"
               :closable="true"
               :container="$root.$el"
               :scrollable="true"
               @close="info = false"
               @open="focusInput"
               width="100%"
               max-height="60vw"
  >
    <div class="bbn-padded bbn-w-100">
      <bbn-input class="bbn-w-100"
                 button-right="nf nf-mdi-send"
                 v-model="link"
                 @keydown.enter="go"
                 @clickRightButton="go"
      ></bbn-input>
      <ul class="bbn-reset bbn-w-100 bbn-ul">
        <li v-for="it of items">
          <div @click="cancel(it)">
            <span class="bbn-loadbar-state bbn-hxspadded bbn-c">
              <bbn-loadicon v-if="it.loading" class="bbn-blue"></bbn-loadicon>
              <i v-else-if="it.error" class="nf nf-fa-times_circle bbn-red"></i>
              <i v-else-if="it.success" class="nf nf-fa-check bbn-green"></i>
              <i v-else-if="it.abort" class="nf nf-mdi-stop bbn-orange"></i>
            </span>
            <div class="bbn-loadbar-time bbn-c">
              <span v-text="renderDuration(it.duration)"></span>
            </div>
            <span class="bbn-hxspadded" v-text="it.url"></span>
          </div>
          <div v-if="it.error && it.errorMessage"
                class="bbn-loadbar-error bbn-red"
                v-text="it.errorMessage"
          ></div>
        </li>
      </ul>
    </div>
  </bbn-floater>
</div>`;script.setAttribute('id','bbn-tpl-component-loadbar');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/loadbar/loadbar.css");document.head.insertAdjacentElement('beforeend',css);;((bbn)=>{"use strict";Vue.component('bbn-loadbar',{mixins:[bbn.vue.basicComponent],props:{encoded:{type:Boolean,default:true},position:{type:Object,default(){return{position:{bottom:5,right:5}};}},source:{type:Array},history:{type:Number,default:100},},data(){return{isLoading:false,isSuccess:false,isError:false,text:'',id:false,selected:0,numLoaded:0,info:false,interval:false,timeNow:false,link:''};},computed:{loadingItems(){return bbn.fn.filter(this.source,{loading:true})},loadedItems(){return bbn.fn.filter(this.source,{loading:false})},items(){let items=[];bbn.fn.each(this.loadingItems,(a)=>{let b=bbn.fn.clone(a);b.duration=this.timeNow-b.start;items.push(b);})
return items.concat(this.loadedItems)},currentItem(){return this.loadingItems.length?this.loadingItems[0]:(this.loadedItems.length?this.loadedItems[0]:false)},},methods:{renderDuration(d){let tmp=d / 1000;if(tmp<10){return tmp.toFixed(3)+' s';}
else{return parseInt(tmp)+' s';}},cancel(item){if(item.loading){this.confirm(bbn._("Are you sure you want to abort this request?"),(d)=>{bbn.fn.abort(item.key);})}},deleteHistory(){let tmp=[];bbn.fn.each(this.data,(a)=>{if(a.isLoading){tmp.push(a);}});this.data=tmp;},go(){if(this.link){bbn.fn.link(this.link);}},focusInput(){let input=this.find('bbn-input');if(input){input.getRef('element').focus();}}},mounted(){this.interval=setInterval(()=>{var date=new Date();this.timeNow=parseInt(date.getTime());},1000);},beforeDestroy(){clearInterval(this.interval)},watch:{items(){}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}