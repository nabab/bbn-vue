(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[
       componentClass,
       'bbn-iblock',
       'bbn-textbox',
       {'bbn-disabled': !!disabled}
     ]"
     @mouseleave="leave"
     @focusin="isActive = true"
     @focusout="isActive = false"
     :title="currentText || placeholder || null"
>
  <div :class="['bbn-rel', 'bbn-dropdown-container', 'bbn-flex-width', 'bbn-vmiddle', currentItemCls]">
    <div v-if="sourceIcon && hasValue && !!currentItemIcon"
         class="bbn-left-xspadded">
      <i :class="currentItemIcon"
         @click.stop="click" />
    </div>
    <div v-if="sourceImg && hasValue && !!currentItemImg"
         class="bbn-left-xspadded">
      <img src="currentItemImg"
           @click.stop="click">
    </div>
    <bbn-input :disabled="disabled"
                @keydown="keydown"
                @keyup="keyup"
                @click.stop="click"
                @paste="paste"
                ref="input"
                autocorrect="off"
                autocapitalize="off"
                spellcheck="false"
                :required="required"
                :nullable="isNullable"
                :placeholder="placeholder"
                :tabindex="disabled ? -1 : 0"
                v-model="notext ? undefined : currentText"
                autocomplete="off"
                :button-right="currentIcon"
                @clickRightButton="click"
                class="bbn-no-border bbn-flex-fill"
                :autosize="autosize"
                :readonly="!writable"
    ></bbn-input>
  </div>
  <input type="hidden"
         v-model="value"
         ref="element"
         :name="name"
  >
  <bbn-floater v-if="!popup
                 && !asMobile
                 && filteredData.length
                 && !disabled
                 && !readonly
                 && (isOpened || preload)"
               v-show="isOpened"
               :element="$el"
               :max-height="maxHeight"
               :min-width="$el.clientWidth"
               :width="undefined"
               :height="undefined"
               ref="list"
               :auto-hide="500"
               :uid="sourceValue"
               :item-component="realComponent"
               @select="select"
               :children="null"
               :suggest="true"
               :selected="[value]"
               @close="isOpened = false"
               :source="filteredData"
               :source-text="sourceText"
               :source-value="sourceValue"
               :title="floaterTitle"
  ></bbn-floater>
  <bbn-floater v-if="!popup
                 && asMobile
                 && filteredData.length
                 && !disabled
                 && !readonly
                 && (isOpened || preload)"
               v-show="isOpened"
               width="100%"
               height="100%"
               ref="list"
               :uid="sourceValue"
               :item-component="realComponent"
               @select="select"
               :children="null"
               :suggest="true"
               :selected="[value]"
               @close="isOpened = false"
               :source="filteredData"
               :source-text="sourceText"
               :source-value="sourceValue"
               :closable="closable"
               :buttons="realButtons"
               :title="floaterTitle"
  ></bbn-floater>
</div>`;script.setAttribute('id','bbn-tpl-component-dropdown');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/dropdown/dropdown.css");document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-dropdown',{mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent,bbn.vue.resizerComponent,bbn.vue.listComponent,bbn.vue.keynavComponent,bbn.vue.urlComponent,bbn.vue.dropdownComponent,bbn.vue.localStorageComponent],props:{notext:{type:Boolean,default:false}},computed:{currentIcon(){return this.isOpened&&!this.disabled&&!this.readonly&&this.filteredData.length?this.iconUp:this.iconDown;}},beforeMount(){if(this.hasStorage){let v=this.getStorage();if(v&&(v!==this.value)){this.emitInput(v);}}},methods:{keydown(e){if(this.commonKeydown(e)){return;}
else if((e.key==='Escape')){e.preventDefault();this.resetDropdown();}
else if(bbn.var.keys.dels.includes(e.which)&&!this.filterString){e.preventDefault();this.resetDropdown();}
else if(bbn.var.keys.upDown.includes(e.keyCode)){e.preventDefault();this.keynav(e);}
else if(!this.isSearching&&(e.key===' ')){e.preventDefault();this.isOpened=!this.isOpened;}},paste(){alert("PASTE");},keyup(e){if(e.key.match(/^[A-z0-9\s]{1}$/)){if(!this.isOpened){this.isOpened=true;}
if(this.currentText===this.currentTextValue){this.currentText='';}}},leave(){let lst=this.getRef('list');if(lst){lst.close(true);}}},created(){this.$on('dataloaded',()=>{if((this.value!==undefined)&&!this.currentText.length){let row=bbn.fn.getRow(this.currentData,(a)=>{return a.data[this.sourceValue]===this.value;});if(row){this.currentText=row.data[this.sourceText];}}})},watch:{isActive(v){if(!v&&this.filterString){this.currentText=this.currentTextValue||'';}},isOpened(val){if(this.popup&&val){this.popupComponent.open({title:false,element:this.$el,maxHeight:this.maxHeight,minWidth:this.$el.clientWidth,autoHide:true,uid:this.sourceValue,itemComponent:this.realComponent,onSelect:this.select,position:'bottom',suggest:true,modal:false,selected:[this.value],onClose:()=>{this.isOpened=false;},source:this.filteredData.map(a=>bbn.fn.extend({value:a.data.text},a.data)),sourceAction:this.sourceAction,sourceText:this.sourceText,sourceValue:this.sourceValue});}
if((this.currentText===this.currentTextValue)&&this.writable){this.selectText();}
if(!val&&this.preload){this.getRef('list').currentVisible=true;}},currentText(newVal){if(this.ready){if(!newVal&&this.value&&this.isNullable){this.emitInput('');this.selectText();this.filterString='';}
else{this.filterString=newVal===this.currentTextValue?'':newVal;}}},filterString(v){let args=[0,this.currentFilters.conditions.length?1:0];if(v&&this.isActive){args.push({field:this.sourceText,operator:'startswith',value:v})}
this.currentFilters.conditions.splice(...args);},value(v){if(this.storage){if(v){this.setStorage(v);}
else{this.unsetStorage()}}}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}