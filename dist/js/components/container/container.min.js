(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, 'bbn-overlay']"
     @subready.stop
     v-show="visible">
  <transition name="fade"
              v-if="!hidden"
              v-on:enter="enter"
              v-on:after-enter="onResize"
  >
    <div :class="{
      'bbn-background': true,
      'bbn-overlay': !fullScreen,
      'bbn-container-full-screen': fullScreen,
      'bbn-container-visible': visible
     }">
      <component :is="scrollable ? 'bbn-scroll' : 'div'"
                v-if="ready && isLoaded && (visible || cached)"
                v-show="visible"
                ref="scroll"
                :axis="scrollable ? 'y' : null"
                class="bbn-overlay">
        <!-- This is an ad hoc component with unique name -->
        <component v-if="isComponent"
                  :is="$options.components[componentName]"
                  :source="source"
                  ref="component"
        ></component>
        <!-- This is a classic component -->
        <component v-else-if="component"
                  :is="component"
                  :source="source"
                  ref="component"
                  v-bind="options"
        ></component>
        <!-- This is just HTML content -->
        <div v-else-if="content"
             v-html="content">
        </div>
        <!-- This is the slot -->
        <slot v-else></slot>
        <component is="style"
                   v-if="css"
                   scoped="scoped"
                   v-html="css"/>
        <bbn-loader v-if="hasLoader"/>
      </component>
      <span  v-if="fullScreen"
            class="bbn-container-full-screen-closer bbn-xl bbn-p">
        <i class="nf nf-fa-times_circle"
          @click="fullScreen = false"/>
      </span>
      <bbn-popup ref="popup"
                :source="popups"
                v-if="!hidden && ready && isLoaded && (visible || cached)"/>
    </div>
  </transition>
</div>
`;script.setAttribute('id','bbn-tpl-component-container');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/container/container.css");document.head.insertAdjacentElement('beforeend',css);(function(bbn,Vue){"use strict";let componentsList=[];Vue.component("bbn-container",{name:'bbn-container',mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent,bbn.vue.viewComponent,bbn.vue.observerComponent],props:{idx:{type:Number},},data(){return{isVisible:false,router:null,visible:false,dirty:false,isComponent:null,fullScreen:false,componentName:this.randomName(),popups:[],isComponentActive:false,isLoaded:!this.load||this.loaded,isPinned:this.pinned,isStatic:this.static,currentIndex:this.idx,currentURL:this.current||this.url,currentTitle:this.title,hasLoader:false,_bbn_container:null};},computed:{anonymousComponent(){return this.$refs.component;}},methods:{getFullCurrentURL(){return this.router.getFullBaseURL()+this.currentURL;},getFullURL(){return this.router.getFullBaseURL()+this.url;},setLoaded(val){this.isLoaded=!!val;},randomName(){let n=bbn.fn.randomString(20,15).toLowerCase();while(componentsList.indexOf(n)>-1){n=bbn.fn.randomString(20,15).toLowerCase();}
return n;},show(){this.visible=true},hide(){this.visible=false},setCurrent(url){if(url.indexOf(this.url)===0){this.currentURL=url;return true;}
return false;},setTitle(title){if(this.router){this.router.views[this.currentIndex].title=title;}},setColor(bcolor,fcolor){if(this.router){if(bcolor){this.router.$set(this.router.views[this.currentIndex],"bcolor",bcolor);}
if(fcolor){this.router.$set(this.router.views[this.currentIndex],"fcolor",fcolor);}}},popup(){let popup=this.getPopup();return arguments.length?popup.open.apply(popup,arguments):popup;},getComponent(){return this.getRef('component');},enter(){this.$parent.enter(this);},reload(){this.router.reload(this.currentIndex);},addMenu(obj){if((this.idx>-1)&&obj.text&&this.$parent.views&&this.$parent.views[this.idx]){if(this.$parent.views[this.idx].menu===undefined){this.$parent.views[this.idx].menu=[];}
let menu=this.$parent.views[this.idx].menu||[],idx=bbn.fn.isFunction(menu)?-1:bbn.fn.search(menu||[],{text:obj.text});if(idx===-1){if(bbn.fn.isFunction(menu)){this.$parent.views[this.idx].menu=()=>{let items=menu()||[];if(bbn.fn.search(items,obj)===-1){if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
items.push(obj);}
return items;};}
else{if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
menu.push(obj);}}
else{obj.key=menu[idx].key;menu.splice(idx,1,obj);}
this.$parent.views[this.idx].menu=menu;return obj.key;}
return false;},deleteMenu(key){if((this.idx>-1)&&this.$parent.views&&this.$parent.views[this.idx]){let menu=this.$parent.views[this.idx].menu||[];if(bbn.fn.isFunction(menu)){menu=()=>{let items=menu()||[];let idx=bbn.fn.search(items,"key",key);if(idx>-1){items.splice(idx,1);this.$parent.views[this.idx].menu=items;this.$parent.$forceUpdate();return true;}};}
else{let idx=bbn.fn.search(menu,"key",key);if(idx>-1){menu.splice(idx,1);this.$parent.views[this.idx].menu=menu;this.$parent.$forceUpdate();return true;}}}
return false;},onResize(){if(this.visible&&this.ready){this.$emit("resize");}},init(){if(this.real||(this.isLoaded&&!this.ready)){let res;if(this.script){res=typeof this.script==='string'?eval(this.script):this.script;if(res){if(bbn.fn.isFunction(res)){this.onMount=res;this.isComponent=false;}
else if(typeof(res)==='object'){this.isComponent=true;}
else{}}}
else if(this.content){this.isComponent=false;}
if(this.isComponent){let cont=this;let o=bbn.fn.extend(true,res?res:{},{template:'<div class="'+(this.scrollable?'':'bbn-overlay')+'">'+this.content+'</div>',methods:{getContainer(){if(!this._bbn_container){this._bbn_container=this.closest('bbn-container');}
return this._bbn_container;},getTab(){return this.getContainer();},addMenu(){return this.getContainer().addMenu.apply(this.$parent,arguments)},deleteMenu(){return this.getContainer().deleteMenu.apply(this.$parent,arguments)}},props:['source']});this.$options.components[this.componentName]=o;}
else{this.isComponent=false;}
setTimeout(()=>{if(bbn.env.url.indexOf('#')){let scroll=this.getRef('scroll');if(scroll&&(scroll.currentY||scroll.currentX)){return;}
let hash=bbn.env.url.split('#')[1];if(hash){hash='#'+hash;location.hash=null;location.hash=hash;}}},2000);this.ready=true;}}},created(){this.componentClass.push('bbn-resize-emitter');if(this.isComponent){componentsList.push(this.componentName);}
else if(this.isComponent===null){this.onMount=()=>{return false;};let res;}},mounted(){this.router=this.closest('bbn-router');if(!this.router){throw new Error(bbn._("bbn-container cannot be rendered without a bbn-router"));}
if(!this.router.ready){this.router.$on('ready',()=>{this.router.register(this);});}
else{this.router.register(this);}},beforeDestroy(){this.router.unregister(this);if(this.isComponent){let idx=componentsList.indexOf(this.componentName);if(idx>-1){componentsList.splice(idx,1);}}},watch:{title(v){this.currentTitle=v;},current(newVal){if(newVal.indexOf(this.url)===0){this.currentURL=newVal;}},currentURL(newVal,oldVal){if(!newVal||(newVal.indexOf(this.url)!==0)){this.currentURL=this.url;}},ready(v){if(v){if(this.onMount){this.onMount(this.$el,this.source);}}},load(nv,ov){},visible(nv,ov){this.$nextTick(()=>{this.$emit(nv?'view':'unview',this);if(nv){this.$nextTick(()=>{this.onResize();});}});},content(newVal,oldVal){if(newVal){this.isComponentActive=false;}},fullScreen(newVal){let fn=e=>{if(e.keyCode===27){this.fullScreen=false;}};if(newVal){document.body.addEventListener('keydown',fn);}
else{document.body.removeEventListener('keydown',fn);}
this.$nextTick(()=>{this.selfEmit(true)})},dirty(v){this.router.views[this.currentIndex].dirty=v;this.router.retrieveDirtyContainers();}},});})(bbn,Vue);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}