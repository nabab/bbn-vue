(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-textbox', {'bbn-input-nullable': isNullable}]">
  <bbn-masked ref="element"
              :disabled="isDisabled"
              :readonly="readonly"
              :required="required"
              :mask="currentMask"
              @hook:mounted="maskedMounted = true"
              @blur="inputChanged"
              @keydown.enter="inputChanged"
              v-model="inputValue"
              class="bbn-flex-fill"
              :autosize="autosize"
              :inputmode="inputmode"
              :placeholder="placeholder"/>
  <div v-if="isNullable && !readonly && !isDisabled"
       class="bbn-block bbn-h-100 bbn-input-nullable-container">
    <i v-if="hasValue" class="nf nf-fa-times_circle bbn-p"
       @mousedown.prevent.stop="clear"/>
  </div>
  <bbn-button icon="nf nf-fa-calendar"
              @click="showCalendar"
              :disabled="isDisabled || readonly"
              class="bbn-datetimepicker-calendar bbn-no-vborder bbn-no-border-right"
              tabindex="-1"/>
  <bbn-button icon="nf nf-fa-clock_o"
              @click="showTime"
              :disabled="isDisabled || readonly"
              class="bbn-datetimepicker-clock bbn-button-right bbn-no-vborder"/>
  <bbn-floater v-if="isCalendarOpened && !isDisabled && !readonly"
               :element="$el"
               :auto-hide="1000"
               ref="calendarFloater"
               @close="isCalendarOpened = false">
    <bbn-calendar :arrows-buttons="false"
                  @selected="setDate"
                  :value="value ? value.toString() : ''"
                  :selection="true"
                  :auto-selection="true"
                  ref="calendar"
                  :date="value ? value.toString() : ''"
                  :min="min"
                  :max="max"
                  :extra-items="true"
                  :disable-dates="disableDates"
                  :items-range="datesRange"
                  :element-width="false"/>
  </bbn-floater>
  <bbn-floater v-if="isTimeOpened && !isDisabled && !readonly"
               :element="$el"
               ref="timeFloater"
               @close="isTimeOpened = false"
               max-width="15rem"
               min-width="10rem"
               :scrollable="false"
               position="bottomRight"
               :auto-hide="1000"
               :element-width="false">
    <bbn-timewheel @change="setTime"
                   :show-second="showSecond"
                   :value="value"
                   @cancel="isTimeOpened = false"
                   :format="currentValueFormat"/>
  </bbn-floater>
</span>`;script.setAttribute('id','bbn-tpl-component-datetimepicker');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/datetimepicker/datetimepicker.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-datetimepicker',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{format:{type:String},valueFormat:{type:[String,Function]},mask:{type:String},max:{type:String},min:{type:String},disableDates:{type:[Array,Function]},datesRange:{type:Array,default(){return[];}},showSecond:{type:Boolean,default:false},scrollMode:{type:Boolean,default:false},blocksMode:{type:Boolean,default:false},autosize:{type:Boolean,default:true}},data(){return{isCalendarOpened:false,isTimeOpened:false,maskedMounted:false,inputValue:'',oldInputValue:''}},computed:{currentMask(){return this.mask||(this.showSecond?'00/00/0000 00:00:00':'00/00/0000 00:00');},currentValueFormat(){return this.valueFormat||'YYYY-MM-DD HH:mm:ss';},currentFormat(){return this.format||(this.showSecond?'DD/MM/YYYY HH:mm:ss':'DD/MM/YYYY HH:mm');},inputValueChanged(){return this.inputValue!==this.oldInputValue;}},methods:{showCalendar(){this.isTimeOpened=false;this.$nextTick(()=>{this.isCalendarOpened=!this.isCalendarOpened;});},showTime(){this.isCalendarOpened=false;this.$nextTick(()=>{this.isTimeOpened=!this.isTimeOpened;});},getValueFormat(val){return bbn.fn.isFunction(this.valueFormat)?this.valueFormat(val):this.currentValueFormat;},setDate(val){val=dayjs(val,'YYYY-MM-DD').isValid()?dayjs(val,'YYYY-MM-DD'):'';if(this.value&&val){let mom=dayjs(this.value.toString(),this.getValueFormat(this.value.toString()));val=dayjs(dayjs(val,'YYYY-MM-DD').hour(mom.hour())).minute(mom.minute());if(this.showSecond){val=dayjs(val).second(mom.second());}}
this.setValue(val?dayjs(val).format(this.getValueFormat(dayjs(val).format(this.currentValueFormat))):'');},setTime(val){val=dayjs(val,this.currentValueFormat);if(this.value){let mom=dayjs(this.value.toString(),this.getValueFormat(this.value.toString()));val=dayjs(dayjs(dayjs(val).date(mom.date())).month(mom.month())).year(mom.year());}
this.setValue(dayjs(val).format(this.getValueFormat(dayjs(val).format(this.currentValueFormat))));},setValue(val,format){if(!format){format=!!val?this.getValueFormat(val.toString()):false;}
let value=!!format&&!!val?(dayjs(val.toString(),format).isValid()?dayjs(val.toString(),format).format(format):''):'';if(value){if(this.min&&(value<this.min)){value=this.min;}
if(this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){value=this.nullable?null:'';}}
else if(this.nullable){value=null;}
if(value!==this.value){this.emitInput(value);}
else{this.setInputValue(value);}
if(!value){this.inputValue='';this.oldInputValue='';}
this.isCalendarOpened=false;this.isTimeOpened=false;},updateCalendar(){if(this.getRef('calendar')){this.getRef('calendar').refresh();}},inputChanged(){let mask=this.getRef('element'),newVal=mask.inputValue,value=!!newVal?dayjs(newVal,this.currentFormat).format(this.getValueFormat(newVal)):'';if(mask.raw(newVal)!==this.oldInputValue){if(value&&this.min&&(value<this.min)){value=this.min;}
if(value&&this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){this.setValue(false);}
else{this.setValue(value);this.$nextTick(()=>{if(this.value!==value){this.$emit('change',value);}});}}},setInputValue(newVal){if(newVal){let mask=this.getRef('element'),mom=dayjs(newVal.toString(),this.getValueFormat(newVal.toString()));this.inputValue=newVal&&mask&&mom.isValid()?mask.raw(mom.format(this.currentFormat)):'';}
else{this.inputValue='';}
this.oldInputValue=this.inputValue;this.updateCalendar();},clear(){this.setValue('');this.$nextTick(()=>{this.$set(this.getRef('element'),'inputValue','');})}},beforeCreate(){if(bbn.env&&bbn.env.lang&&(bbn.env.lang!==dayjs.locale())){dayjs.locale(bbn.env.lang);}},mounted(){this.ready=true;},watch:{min(){this.setValue(this.value||'');this.updateCalendar();},max(){this.setValue(this.value||'');this.updateCalendar();},valueFormat(){this.setValue(this.value||'');},maskedMounted(newVal){if(newVal){this.setInputValue(this.value);}},value(newVal){this.setInputValue(newVal);}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}