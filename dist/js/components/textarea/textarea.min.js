(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[
        'bbn-textbox',
        componentClass,
        {'bbn-state-disabled': !!disabled}
      ]">
  <textarea :class="{
              'bbn-no-border': true,
              'bbn-radius': true,
              'bbn-w-100': !cols,
              'bbn-spadded': true,
              'bbn-state-disabled': !!disabled
            }"
            :value="value"
            :name="name"
            ref="element"
            @input="emitInput($event.target.value)"
            @click="click($event)"
            @focus="focus($event)"
            @blur="blur($event)"
            @change="change($event)"
            @keydown="textareaKeydown($event)"
            @keydown.enter.stop
            @keyup="keyup($event)"
            @paste="$emit('paste', $event)"
            :disabled="disabled"
            :readonly="readonly"
            :required="required"
            :placeholder="placeholder"
            :maxlength="maxlength"
            :rows="rows"
            :cols="cols"
  ></textarea>
</div>
`;script.setAttribute('id','bbn-tpl-component-textarea');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/textarea/textarea.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-textarea',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{rows:{type:Number},cols:{type:Number},maxlength:{type:Number},cfg:{type:Object,default:function(){return{}}}},methods:{textareaKeydown(ev){if(this.maxlength&&(this.value.length>=this.maxlength)){ev.preventDefault();}
else{this.keydown(ev);}},clear:function(){this.emitInput('');}},mounted(){this.ready=true;}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}