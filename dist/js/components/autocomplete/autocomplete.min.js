(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, 'bbn-iblock', 'bbn-textbox', {'bbn-disabled': !!disabled}]"
     @mouseleave="leave"
     @focusin="isActive = true"
     @focusout="isActive = false"
>
  <div class="bbn-flex-width">
    <div class="bbn-flex-fill"
         @click.stop="click"
    >
      <bbn-input :disabled="disabled"
                class="bbn-unselectable bbn-no-border"
                :required="required"
                :readonly="readonly"
                :placeholder="inputIsVisible || isOpened ? '' : placeholder"
                autocorrect="off"
                autocapitalize="off"
                spellcheck="false"
                :value="inputIsVisible || isOpened ? filterString : currentText"
                @focus="_setInputVisible"
                :style="{display: inputIsVisible ? 'none' : 'inline-block'}"
      ></bbn-input>
      <bbn-input v-if="!disabled && !readonly"
                :tabindex="0"
                class="bbn-no-border"
                v-model="filterString"
                ref="input"
                @focus="selectText"
                @blur="inputIsVisible = false"
                autocomplete="off"
                :required="required"
                :readonly="readonly"
                @keydown.stop="keydown"
                @change="onChange"
                autocorrect="off"
                autocapitalize="off"
                spellcheck="false"
                :name="name"
                :nullable="isNullable"
                :style="{display: inputIsVisible ? 'inline-block' : 'none'}"
      ></bbn-input>
    </div>
    <div class="bbn-list-component-button">
      <div v-if="isAjax && isLoading"
           class="bbn-middle"
      >
        <bbn-loadicon size="1.2em"
                      tabindex="-1"
        ></bbn-loadicon>
      </div>
      <bbn-button v-else
                  :icon="isOpened && !disabled && !readonly && filteredData.length ? iconUp : iconDown"
                  class="bbn-button-right bbn-no-vborder bbn-m"
                  @click.prevent.stop="click"
                  tabindex="-1"
                  :disabled="disabled"
      ></bbn-button>
    </div>
  </div>
  <input type="hidden"
         v-model="value"
         ref="element"
         :name="name"
  >
  <bbn-floater v-if="!disabled && !readonly && isOpened"
               :element="$el"
               :max-height="maxHeight"
               :min-width="$el.clientWidth"
               ref="list"
               :source-value="sourceValue"
               :source-text="sourceText"
               :item-component="realComponent"
               @select="select"
               :selected="[value]"
               @close="isOpened = false"
               :source="filteredData"
  ></bbn-floater>
</div>
`;script.setAttribute('id','bbn-tpl-component-autocomplete');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/autocomplete/autocomplete.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-autocomplete',{mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent,bbn.vue.resizerComponent,bbn.vue.listComponent,bbn.vue.keynavComponent,bbn.vue.urlComponent,bbn.vue.dropdownComponent],props:{filterable:{type:Boolean,default:true},minLength:{type:Number,default:0},delay:{type:Number,default:250},filterMode:{type:String,default:'startswith'}},data(){return{inputIsVisible:false}},methods:{_setInputVisible(){this.filterString=this.currentText;this.inputIsVisible=true;this.$nextTick(()=>{this.getRef('input').focus();})},onChange(){if(!this.ready){this.ready=true;}},click(){if(!this.disabled){this.getRef('input').focus();if(this.filteredData.length){this.isOpened=!this.isOpened;}}},leave(){if(this.isOpened&&!this.getRef('list').isOver){this.isOpened=false;}
this.inputIsVisible=false;this.filterString='';},select(item){if(item&&(item[this.sourceValue]!==undefined)){this.emitInput(item[this.sourceValue]);this.$emit('change',item[this.sourceValue]);this.currentText=item[this.sourceText];this.filterString=item[this.sourceText];this.$nextTick(()=>{this.getRef('input').focus();});}
this.isOpened=false;},resetDropdown(){this.currentText=this.currentTextValue;this.filterString=this.currentTextValue;this.unfilter();if(this.isOpened){this.isOpened=false;}},keydown(e){if((e.key===' ')||this.commonKeydown(e)){return;}
if(e.key==='Escape'){this.resetDropdown();}
else if(bbn.var.keys.upDown.includes(e.keyCode)){this.keynav(e);}},},created(){this.$on('dataloaded',()=>{if(this.value!==undefined){let row=bbn.fn.getRow(this.currentData,a=>{return a.data[this.sourceValue]===this.value;});if(row){this.currentText=row.data[this.sourceText];}}
if(!this.currentText&&!this.isNullable&&this.filteredData.length){this.emitInput(this.filteredData[0][this.sourceValue]);}});},watch:{filterString(v){bbn.fn.log("on Filter String",this.disabled,this.readonly,this.isOpened,!this.disabled&&!this.readonly&&this.isOpened);if(!this.ready){this.ready=true;}
clearTimeout(this.filterTimeout);if(!v&&this.nullable&&this.inputIsVisible){this.unfilter();this.emitInput(null);this.currentText='';}
else if(v!==this.currentText){this.isOpened=false;this.filterTimeout=setTimeout(()=>{if(this.isActive){if(v&&(v.length>=this.minLength)){this.currentFilters.conditions.splice(0,this.currentFilters.conditions.length?1:0,{field:this.sourceText,operator:this.filterMode,value:v});this.$nextTick(()=>{if(!this.isOpened){this.isOpened=true;}
else{let floater=this.getRef('list');let list=floater?floater.getRef('scroll'):false;if(list){list.onResize();}}});}
else{this.unfilter();}}},this.delay);}
else if(!v){this.unfilter();}}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}