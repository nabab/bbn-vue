(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="componentClass" :style="'border-left-color:' + border_color">
  <h3 v-if="first"
      v-html="_('Where the following conditions are true')"/>
  <!-- List of the validated conditions -->
  <div class="bbn-form-full"
       v-for="(condition, idx) in conditions"
       v-if="multi">
    <div :class="'bbn-filter-items bbn-filter-bordered bbn-iflex bbn-filter-' + (currentLogic === 'OR' ? 'or' : 'and')"
         style="align-items: baseline">
      <div class="bbn-filter-logic">
        <span v-if="idx"
              v-text="currentLogic"/>
        <bbn-dropdown v-else
                      class="bbn-s"
                      :source="[{
                        text: _('AND'),
                        value: 'AND'
                      }, {
                        text: _('OR'),
                        value: 'OR'
                      }]"
                      v-model="currentLogic"
                      name="logic"
                      ref="logic"
                      @change="$emit('change', {logic: currentLogic, conditions: conditions})"/>
      </div>
      <div class="bbn-flex"
           :style="{
             'flex-direction': condition.conditions ? 'column' : 'row',
             'align-items': condition.conditions ? '' : 'center'
           }">
        <div class="bbn-filter-buttons bbn-iflex">
          <i class="bbn-p bbn-lg nf nf-fa-minus_circle bbn-right-xsspace"
             @mouseover="over"
             @mouseout="out"
             :title="_('Delete this condition')"
             ref="minus"
             @click="delete_condition(condition)"/>
          <i class="bbn-p bbn-lg nf nf-fa-plus_circle"
             v-if="multi"
             @mouseover="$event.target.style.color = 'red'"
             @mouseout="$event.target.style.color = null"
             :title="_('Add new condition')"
             ref="plus"
             @click="add_group(idx)"
             v-show="!condition.conditions"/>
        </div>
        <div class="bbn-filter-main">
          <div v-if="condition.operator">
            <span v-html="condition_text(condition)"/>
          </div>
          <bbn-filter v-else-if="condition.logic"
                      :fields="fields"
                      :conditions="condition.conditions"
                      :logic="condition.logic"
                      @change="d => {condition.logic = d.logic}"
                      :num="num + 1"
                      :idx="idx"
                      :multi="multi"/>
        </div>
      </div>
    </div>
  </div>
  <!-- Form for a new condition -->
  <div class="bbn-form-full">
    <div class="bbn-iflex"
        :class="{
        'bbn-filter-bordered': fields.length > 1,
        'bbn-filter-items': true,
        'bbn-filter-temp': true,
        'bbn-filter-or': currentLogic === 'OR',
        'bbn-filter-and': currentLogic === 'AND',
      }">
      <!-- Showing the logic (AND/OR) if there are already conditions -->
      <div class="bbn-filter-logic bbn-vmiddle"
           v-text="conditions.length ? currentLogic : ''"
           v-if="multi"/>
      <div class="bbn-filter-main">
        <bbn-filter-form inline-template
                         :value="value"
                         :operator="operator"
                         :type="type"
                         :fields="fields"
                         :field="field"
                         :button-delete="!multi"
                         :component="component"
                         :component-options="componentOptions"
                         @validate="setCondition">
          <div class="bbn-w-100 bbn-filter-form bbn-flex">
            <div class="bbn-flex bbn-right-sspace" style="flex-direction: column">
              <!-- Condition creation line -->
              <div v-if="columns.length > 1"
                   class="bbn-block bbn-filter-padding bbn-db-column">
                <bbn-dropdown :source="columns"
                                  v-model="currentField"
                                  name="field[]"
                                  :placeholder="_('Pick a field')"
                                  ref="column"/>
              </div>
              <div v-else-if="field"
                   class="bbn-block bbn-filter-padding bbn-db-column bbn-right-sspace"
                   v-html="currentTitle"/>
              <div class="bbn-block bbn-filter-padding bbn-db-operator bbn-top-xsspace">
                <bbn-dropdown name="operator[]"
                              :disabled="!currentField"
                              v-model="currentOperator"
                              :suggest="true"
                              :required="true"
                              :source="operators"
                              ref="operator"
                              :placeholder="_('Pick an operator')"/>
              </div>
              <div :class="[{'bbn-hidden': !!no_value}, 'bbn-block', 'bbn-filter-padding', 'bbn-db-value', 'bbn-top-xsspace']">
                <component v-if="type && currentComponent"
                           :is="currentComponent"
                           :disabled="no_value"
                           name="value"
                           v-model="currentValue"
                           ref="value"
                           v-bind="currentComponentOptions"
                           @keyup.enter="validate"/>
              </div>
            </div>
            <div class="bbn-flex bbn-filter-padding bbn-db-column">
              <bbn-button :disabled="!currentOperator"
                          @click="validate"
                          :title="_('Validate')"
                          ref="check"
                          icon="nf nf-fa-check"
                          :notext="true"/>
              <bbn-button v-if="buttonDelete"
                          :disabled="!currentOperator"
                          @click="unset"
                          :title="_('Unset condition')"
                          ref="unset"
                          icon="nf nf-fa-times"
                          :notext="true"
                          class="bbn-left-xsspace"/>
            </div>
          </div>
        </bbn-filter-form>
      </div>
    </div>
  </div>
</div>
`;script.setAttribute('id','bbn-tpl-component-filter');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/filter/filter.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";const
get_operator_type=function(field){if(typeof field==='object'){switch(field.type){case'int':if(field.maxlength==1){return'boolean';}
if((field.maxlength==10)&&field.keys){return'enums';}
return'number';case'boolean':case'bool':return'boolean';case'float':case'decimal':case'number':case'money':return'number';case'date':return'date';case'datetime':return'date';case'time':return'date';case'enum':case'enums':return'enums';default:return'string';}}},get_component_type=function(sqlType){switch(sqlType){case'int':case'float':case'decimal':return'numeric';case'date':return'datepicker';case'datetime':return'datetimepicker';case'time':return'timepicker';default:return'input';}};var borders=['#e47777','#fa4a4a','#8d0e0e','#b44f4f','#c16262'],bg_colors=['rgba(228,119,119,0.2)','rgba(250,74,74,0.2)','rgba(141,14,14,0.2)','rgba(180,79,79,0.2)','rgba(193,98,98,0.2)'];Vue.component('bbn-filter',{mixins:[bbn.vue.basicComponent,bbn.vue.dataEditorComponent],name:'bbn-filter',props:{value:{},operator:{},operators:{},conditions:{type:Array,default(){return[];}},logic:{type:String,default:'AND'},fields:{type:[Object,Array],default(){return{}}},num:{type:Number,default:0},index:{},first:{},component:{type:[String,Object,Function]},componentOptions:{type:[Object,String],default(){return{};}},field:{type:String},multi:{type:Boolean,default:false},type:{type:String,default:'string'}},data(){return{currentLogic:this.logic,currentValue:this.value!==undefined?this.value:null,currentOperator:this.operator!==undefined?this.value:null};},computed:{border_color(){if(this.num>borders.length){return borders[this.num%borders.length]}
else{return borders[this.num]}},is_not_root(){return this.$parent.$el.classList.contains("bbn-filter-control");},},methods:{over(e){e.target.style.color='red';e.target.parentElement.parentElement.querySelector('.bbn-filter-main').style.backgroundColor='rgba(158,158,158, 0.3)';},out(e){e.target.style.color=null;e.target.parentElement.parentElement.querySelector('.bbn-filter-main').style.backgroundColor='inherit';},setCondition(obj){if(obj.field&&obj.operator){obj.time=(new Date()).getTime();if(this.multi){this.conditions.push(obj);this.$forceUpdate();}
this.$emit('set',obj)}
return obj;},unsetCondition(obj){if(obj.field&&obj.operator&&obj.time){if(this.multi){this.conditions.push(obj);}
else{this.$emit('set',obj)}}
return obj;},hasFields(){return this.fields&&Object.keys(this.fields).length;},condition_text(cd){let st='';if(cd&&cd.field){let index=bbn.fn.search(this.fields,{field:cd.field});if(index>-1){let f=this.fields[index];st+='<strong>'+
(f.ftitle?f.ftitle:(f.title?f.title:cd.field))+'</strong> '+
this.editorOperators[get_operator_type(f)][cd.operator]+' <em>';if(cd.value){if(cd.value===true){st+='true';}
else if(f.source){if(bbn.fn.isArray(f.source)){st+=bbn.fn.getField(f.source,'text','value',cd.value);}
else if(typeof f.source==='object'){st+=f.source[cd.value];}}
else{st+=cd.value;}}
else if(cd.value===0){st+='0';}
else if(cd.value===false){st+='false';}
st+='</em>';}}
return st;},delete_full_condition(idx){this.$emit('unset',this.conditions.splice(idx,1));},delete_condition(condition){let del=arr=>{let idx=bbn.fn.search(arr,{time:condition.time});if(idx>-1){if(arr[idx].conditions&&arr[idx].conditions.length){this.confirm(bbn._("Are you sure you want to delete this group of conditions?"),()=>{arr.splice(idx,1);})}
else{arr.splice(idx,1);}
return true;}
for(let i=0;i<arr.length;i++){if(arr[i].conditions){if(del(arr[i].conditions)){return true;}}}};if(del(this.conditions)){this.$forceUpdate();this.$emit('unset',condition);}},add_group(idx){let cond=bbn.fn.extend(true,{},this.conditions[idx]);this.conditions.splice(idx,1);this.$nextTick(()=>{this.conditions.splice(idx,0,{logic:this.currentLogic,conditions:[cond]});this.$forceUpdate();});},delete_group(){this.$parent.conditions.splice(idx,1);},},components:{'bbn-filter-form':{name:'bbn-filter-form',mixins:[bbn.vue.basicComponent,bbn.vue.dataEditorComponent],props:{fields:{},field:{type:String},type:{type:String},operator:{type:String},value:{},component:{type:[String,Object,Function]},componentOptions:{type:Object,default(){return{}}},buttonDelete:{type:Boolean,default:false}},data(){return{currentField:this.field||'',currentType:this.type||'',currentValue:this.value||'',currentComponent:this.component||false,currentComponentOptions:this.componentOptions,currentOperator:this.operator||'',currentOperators:[],currentCondition:false,has_group:false,has_condition:true,items:[],cfg:{}};},computed:{operators(){let ops=this.currentField&&this.currentType&&this.editorOperators[this.currentType]?this.editorOperators[this.currentType]:[];if(this.currentFullField.nullable){bbn.fn.extend(true,ops,this.editorNullOps);}
return ops;},no_value(){return this.editorHasNoValue(this.operator);},columns(){let r=[];if(bbn.fn.isArray(this.fields)){bbn.fn.each(this.fields,(a,i)=>{if(a.field){r.push({text:a.ftitle?a.ftitle:(a.title?a.title:a.field),value:a.field});}})}
else{for(let n in this.fields){r.push(n);}}
return r;},currentFullField(){if(this.currentField){let idx=bbn.fn.search(this.fields,{field:this.currentField});if(idx>-1){return this.fields[idx];}}
return{};},currentTitle(){if(this.currentField){let idx=bbn.fn.search(this.fields,{field:this.currentField});if(idx>-1){return this.fields[idx].title||this.fields[idx].ftitle||this.fields[idx].field||'';}}
return'';}},methods:{_unset(){this.currentOperator='';this.currentValue='';if(this.columns.length>1){this.currentField='';}},validate(cancel){if(this.currentField&&this.currentOperator&&(this.currentValue||this.editorHasNoValue(this.currentOperator))){var tmp={field:this.currentField,operator:this.currentOperator};if(!this.editorHasNoValue(this.currentOperator)){tmp.value=this.currentValue;}
if((cancel===true)&&this.currentCondition){this.$parent.unsetCondition(this.currentCondition);}
else{this.currentCondition=this.$parent.setCondition(tmp);if(this.$parent.multi){this._unset();}}
this.$emit(cancel?'invalidate':'validate',tmp,cancel);}
else{this.$emit('error',bbn._("Value is required. You should choose another operator if you want to look for an element empty or null"));}},unset(){this._unset();this.$parent.$emit('unset')}},created(){if(this.type&&this.editorOperators[this.type]){this.currentOperators=this.editorOperators[this.type];}
if(this.field&&bbn.fn.isArray(this.fields)&&this.fields.length&&!this.component){let fieldObj=bbn.fn.getRow(this.fields,{field:this.field});if(fieldObj){let o=this.editorGetComponentOptions(fieldObj);if(o){if(o.type!==this.currentType){this.currentType=o.type;}
this.currentComponent=o.component;this.currentComponentOptions=o.componentOptions;}}}},mounted(){this.ready=true;},watch:{currentField(newVal){let fieldObj=bbn.fn.getRow(this.fields,{field:newVal});if(fieldObj){let o=this.editorGetComponentOptions(fieldObj);if(o){this.currentType=o.type;this.currentComponent=o.component;this.currentComponentOptions=o.componentOptions;}}}}}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}