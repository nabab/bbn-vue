(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-flex-width', 'bbn-vmiddle']"
     :style="(currentSize !== '') ? 'width:' + currentSize : '' ">
 <span v-text="value"
        class="bbn-right-space bbn-nowrap"
    v-if="showLabel && !showNumeric"/>
 <bbn-numeric v-if="showNumeric"
        v-model="numericValue"
        class="bbn-right-space"
        :min="currentMin"
        :max="currentMax"
        :step="currentStep"
        :decimals="currentDecimals"/>
  <input :value="Number(value.toString().replace(currentUnit, ''))"
         type="range"
         :name="name"
         ref="element"
         :readonly="readonly"
         :disabled="disabled"
         :required="required"
         :min="currentMin"
         :max="currentMax"
         :step="currentStep"
         @input="_changeValue"
         @click="click"
         @focus="focus"
         @blur="blur"
         @change="change"
         @keydown="keydown"
         @keyup="keyup"
         @mouseenter="over"
         @mouseleave="out"
         :tabindex="tabindex"
         :size="currentInputSize"
         class="bbn-range-input bbn-radius bbn-flex-fill">
  <i class="nf nf-mdi-backup_restore bbn-p bbn-m bbn-left-xsspace"
     @click="reset"
     :title="_('Reset')"
     v-if="showReset"/>
  <bbn-dropdown v-if="showUnits"
                :source="units"
                v-model="currentUnit"
                class="bbn-left-sspace bbn-narrow"/>
</span>`;script.setAttribute('id','bbn-tpl-component-range');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/range/range.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn,Vue){"use strict";Vue.component("bbn-range",{name:'bbn-range',mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent],props:{min:{type:Number,default:1},max:{type:Number,default:100},step:{type:Number},unit:{type:String,default:''},units:{type:Array,default(){return[{text:'%',value:'%',min:1,max:100,step:1,decimals:0},{text:'px',value:'px',min:1,max:2000,step:1,decimals:0},{text:'em',value:'em',min:0.1,max:200,step:0.1,decimals:1},{text:'vh',value:'vh',min:1,max:100,step:1,decimals:0},{text:'vw',value:'vw',min:1,max:100,step:1,decimals:0}]}},showLabel:{type:Boolean,default:false},showReset:{type:Boolean,default:true},showUnits:{type:Boolean,default:false},showNumeric:{type:Boolean,default:false}},data(){let currentUnit=this.unit;if(!!this.value){let match=this.value.toString().match(/\D+/);if(!!match){currentUnit=match[0];}}
if(!!this.showUnits&&!currentUnit){currentUnit='px';}
return{currentSize:this.size||'',originalValue:this.value,currentUnit:currentUnit,numericValue:Number(this.value.toString().replace(currentUnit,''))}},computed:{currentInputSize(){return this.autosize?(this.value?this.value.toString().length:1):0;},currentMin(){if(this.currentUnit){return bbn.fn.getField(this.units,'min','value',this.currentUnit);}
return this.min;},currentMax(){if(this.currentUnit){return bbn.fn.getField(this.units,'max','value',this.currentUnit);}
return this.max;},currentStep(){if(this.step){return this.step;}
if(this.currentUnit){let step=bbn.fn.getField(this.units,'step','value',this.currentUnit);if(step){return step;}}
return 1;},currentDecimals(){if(this.currentUnit){return bbn.fn.getField(this.units,'decimals','value',this.currentUnit)||0;}
return 0;}},methods:{reset(){if(!this.disabled&&!this.readonly){this.emitInput(this.originalValue);}},_changeValue(){let val=Number(this.getRef('element').value);this.numericValue=val;if(this.currentUnit){val+=this.currentUnit;}
this.emitInput(val);}},mounted(){this.ready=true;},watch:{currentUnit(){this._changeValue();},unit(val){this.currentUnit=val;},numericValue(val){if(val!==this.value){if(this.currentUnit){val+=this.currentUnit;}
this.emitInput(val);}}}});})(bbn,Vue);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}