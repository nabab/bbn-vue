(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[
       componentClass,
       'bbn-iblock',
       'bbn-textbox',
       {'bbn-disabled': !!disabled}
     ]"
     @mouseleave="leave"
     @focusin="isActive = true"
     @focusout="isActive = false"
     :title="filterString || placeholder || null"
>
  <div class="bbn-flex-width">
    <div class="bbn-flex-fill">
      <input v-if="!disabled && !readonly"
              tabindex="0"
              class="bbn-no-border"
              v-model="filterString"
              ref="input"
              @focus="selectText"
              autocomplete="off"
              autocorrect="off"
              autocapitalize="off"
              spellcheck="false"
              :required="required"
              :readonly="readonly"
              @keydown.stop="keydown"
              @change="ready = true"
              :name="name"
      >
    </div>
    <div class="bbn-list-component-button">
      <div v-if="isAjax && isLoading"
           class="bbn-middle">
        <bbn-loadicon size="1.2em"
                      tabindex="-1"
        ></bbn-loadicon>
      </div>
      <bbn-button v-else
                  :icon="isOpened && !disabled && !readonly && filteredData.length ? iconUp : iconDown"
                  class="bbn-button-right bbn-no-vborder bbn-m"
                  @click.prevent.stop="click"
                  tabindex="-1"
                  :disabled="disabled"
      ></bbn-button>
    </div>
  </div>
  <bbn-floater v-if="!disabled && !readonly && isOpened"
               :element="$el"
               :max-height="maxHeight"
               :min-width="currentWidth"
               ref="list"
               :uid="sourceValue"
               :item-component="realComponent"
               @select="select"
               @close="isOpened = false"
               :source-text="sourceText"
               :source-value="sourceValue"
               :source="filteredData"
  ></bbn-floater>
</div>
`;script.setAttribute('id','bbn-tpl-component-combo');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/combo/combo.css");document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-combo',{mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent,bbn.vue.resizerComponent,bbn.vue.listComponent,bbn.vue.keynavComponent,bbn.vue.urlComponent,bbn.vue.dropdownComponent],props:{filterable:{default:true},minLength:{type:Number,default:0},delay:{type:Number,default:10},},methods:{click(){if(!this.disabled&&!this.readnly){this.getRef('input').focus();if(this.filteredData.length){this.isOpened=!this.isOpened;}}},leave(){if(this.isOpened&&!this.getRef('list').isOver){this.isOpened=false;}},select(item){if(item&&(item[this.sourceValue]!==undefined)){this.writing=false;this.emitInput(item[this.sourceValue]);this.$emit('change',item[this.sourceValue]);this.filterString=item[this.sourceText];this.$nextTick(()=>{this.getRef('input').focus();});}
this.isOpened=false;},selectText(){let input=this.getRef('input');input.setSelectionRange(0,input.value.length);},resetDropdown(){this.filterString=this.currentTextValue;this.unfilter();if(this.isOpened){this.isOpened=false;}},keydown(e){if(e.key==='Tab'){let list=this.find('bbn-list');if(list.overIdx>-1){this.filterString=list.filteredData[list.overIdx].data[this.sourceValue];return;}}
if((e.key===' ')||this.commonKeydown(e)){return;}
if(e.key==='Escape'){this.resetDropdown();}
else if(bbn.var.keys.upDown.includes(e.keyCode)){this.keynav(e);}
else if(!this.disabled||!this.readonly){this.writing=true;}},},created(){this.$on('dataloaded',()=>{if(this.value!==undefined){let row=bbn.fn.getRow(this.currentData,(a)=>{return a.data[this.sourceValue]===this.value;});if(row){this.currentText=row.data[this.sourceText];}}
if(!this.currentText&&!this.isNullable&&this.filteredData.length){this.emitInput(this.filteredData[0][this.sourceValue]);}});},watch:{filterString(v){if(!this.ready){this.ready=true;}
clearTimeout(this.filterTimeout);if(this.writing){this.isOpened=false;this.filterTimeout=setTimeout(()=>{this.filterTimeout=false;if(this.isActive){if(v&&(v.length>=this.minLength)){this.currentFilters.conditions.splice(0,this.currentFilters.conditions.length?1:0,{field:this.sourceText,operator:'startswith',value:v});this.$nextTick(()=>{if(!this.isOpened){this.isOpened=true;}
else{let list=this.find('bbn-scroll');if(list){list.onResize();}}});}
else{this.unfilter();}}
this.emitInput(v);},this.delay);}}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}