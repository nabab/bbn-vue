(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, 'bbn-floater-list']"
     @touchstart="touchstart"
     @touchmove="touchmove"
     @touchend="touchend">
  <div class="bbn-hidden" v-if="$slots.default" ref="slot">
    <slot></slot>
  </div>
  <ul v-if="filteredData.length && ready"
      :class="['bbn-menulist', mode]"
      @mouseleave="mouseleave"
  >
    <template v-for="(li, idx) in filteredData">
      <li v-if="groupable && (!pageable || ((idx >= start) && (idx < start + currentLimit))) && ((idx === 0) || (idx === start) || (li.data[sourceGroup] !== filteredData[idx-1].data[sourceGroup]))"
          class="bbn-list-group-li bbn-m bbn-header bbn-hspadded bbn-unselectable bbn-vmiddle"
          :style="groupStyle"
          :group="li.data[sourceGroup]">
        <component v-if="groupComponent"
                   :is="groupComponent"
                   v-bind="li"/>
        <div v-else
             v-text="li.data[sourceGroup]"/>
      </li>
      <li v-if="!pageable || ((idx >= start) && (idx < start + currentLimit))"
          @mouseenter="mouseenter($event, idx)"
          :ref="'li' + idx"
          :key="uid ? li.data[uid] : idx"
          @click="select(idx)"
          :class="{
            'bbn-no-padding': !!component,
            'bbn-state-default': true,
            'bbn-disabled': !component && !!li.data && !!li.data.disabled,
            'bbn-state-selected': isSelected(idx),
            'bbn-state-hover': overIdx === idx,
            'bbn-alt': alternateBackground && (idx % 2)
          }">
        <component v-if="currentComponent"
                   :is="currentComponent"
                   :source="li.data"
                   @remove="remove(idx)"
                   @hook:mounted="selfEmit(true)">
        </component>
        <component v-else
                  :is="li.data && li.data.url && !li.data[children] ? 'a' : 'span'"
                  @click.prevent="() => {}"
                  class="bbn-w-100 bbn-hspadded"
                  :href="li.data && li.data.url ? li.data.url : null">
          <span class="space" v-if="selection || (mode === 'options')">
            <i v-if="li.data.selected"
              class="nf nf-fa-check"></i>
          </span>
          <span class="space" v-if="hasIcons">
            <i v-if="li.data.icon" :class="li.data.icon"></i>
          </span>
          <span class="text" v-html="li.data[sourceText]"></span>
        </component>
        <div v-if="!currentComponent && li.data[children] && li.data[children].length"
            class="bbn-block bbn-abs bbn-vxspadded bbn-hspadded"
            style="right: 0px"
        >
          <i class="nf nf-fa-chevron_right"></i>
        </div>
        <bbn-floater v-if="isOpened && children &&
                            (origin === 'floater') &&
                            li.data[children] &&
                            (overIdx === idx) &&
                            getRef('li' + idx)"
                    :uid="uid"
                    :level="level + 1"
                    :mode="li.data.mode || 'free'"
                    :source="li.data[children]"
                    :element="getRef('li' + idx)"
                    orientation="horizontal">
        </bbn-floater>
        <bbn-list v-else-if="(origin !== 'floater') &&
                              children &&
                              li.data[children] &&
                              getRef('li' + idx)"
                  :level="level + 1"
                  :mode="li.data.mode || 'free'"
                  :uid="uid"
                  :source="li.data[children]">
        </bbn-list>
      </li>
    </template>
  </ul>
</div>
`;script.setAttribute('id','bbn-tpl-component-list');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/list/list.css");document.head.insertAdjacentElement('beforeend',css);(function(Vue,bbn){"use strict";let isClicked=false;Vue.component('bbn-list',{mixins:[bbn.vue.basicComponent,bbn.vue.listComponent,bbn.vue.keynavComponent,bbn.vue.positionComponent,bbn.vue.keepCoolComponent,bbn.vue.resizerComponent,bbn.vue.eventsComponent],props:{origin:{},maxWidth:{type:Number},maxHeight:{type:Number},minWidth:{type:Number},minHeight:{type:Number},width:{type:[String,Number,Boolean]},height:{type:[String,Number,Boolean]},source:{type:[Function,Array,String,Object]},content:{type:String,default:''},options:{type:Object},element:{type:Element},orientation:{type:String,default:'vertical'},hpos:{type:String,default:'left'},vpos:{type:String,default:'bottom'},scrollable:{type:Boolean,default:false},visible:{type:Boolean,default:true},unique:{type:Boolean,default:true},mode:{type:String,default:"free",validator:m=>['free','options','selection'].includes(m)},parent:{default:false},noIcon:{default:false},level:{type:Number,default:0},autoHide:{type:Boolean,default:false},children:{type:String,default:'items'},title:{type:String},footer:{type:String},buttons:{type:Array,default(){return[];}},closable:{type:Boolean,default:false},maximizable:{type:Boolean,default:false},animation:{type:Boolean,default:false},latency:{type:Number,default:25},expanded:{type:Array,default(){return[];}},suggest:{type:[Boolean,Number],default:false},alternateBackground:{type:Boolean,default:false},groupable:{type:Boolean,default:false},sourceGroup:{type:String,default:'group'},groupComponent:{type:[String,Object,Vue]},groupStyle:{type:String}},data(){return{currentIndex:0,currentTop:null,currentLeft:null,currentHeight:null,currentWidth:null,currentScroll:false,currentVisible:this.visible,containerWidth:0,containerHeight:0,focused:bbn.env.focused||null,opacity:0,floaterHeight:0,floaterWidth:0,hasIcons:false,currentSelected:-1,isMaximized:false,scrollMaxHeight:0,scrollMinWidth:0,currentButtons:this.buttons.slice(),mountedComponents:[],isOver:false,overIdx:null,mouseLeaveTimeout:false,isOpened:true,scroll:null,hasScroll:false,currentComponent:null,tmpDisabled:false};},computed:{formattedWidth(){if(this.isMaximized){return'100%';}
if(this.width){return this.width+(bbn.fn.isNumber(this.width)?'px':'')}
return this.currentWidth?this.currentWidth+'px':'100%';},formattedHeight(){if(this.isMaximized){return'100%';}
if(this.height){return this.height+(bbn.fn.isNumber(this.height)?'px':'')}
return this.currentHeight?this.currentHeight+'px':'100%';},currentStyle(){let s={left:this.isMaximized?0:this.currentLeft,top:this.isMaximized?0:this.currentTop,width:this.isMaximized?'100%':(this.width?this.formattedWidth:'auto'),height:this.formattedHeight,opacity:this.opacity,overflow:'hidden'};if(this.animation){s.transition='opacity 0.3s ease-in-out';}
if(this.maxWidth){s.maxWidth=this.maxWidth+(bbn.fn.isNumber(this.maxWidth)?'px':'')}
if(this.maxHeight){s.maxHeight=this.maxHeight+(bbn.fn.isNumber(this.maxHeight)?'px':'')}
return s;},filteredData(){let data=this.currentData;if(this.currentData.length&&this.currentFilters&&this.currentFilters.conditions&&this.currentFilters.conditions.length&&(!this.serverFiltering||!this.isAjax)){data=bbn.fn.filter(data,(a)=>{return this._checkConditionsOnItem(this.currentFilters,a.data);});}
if(this.groupable&&this.sourceGroup){let grouped={},ungrouped=[];bbn.fn.each(data,d=>{if(d.data[this.sourceGroup]!==undefined){if(grouped[d.data[this.sourceGroup]]===undefined){grouped[d.data[this.sourceGroup]]=[];}
grouped[d.data[this.sourceGroup]].push(d);}
else{ungrouped.push(d);}});data=[];bbn.fn.each(Object.values(grouped),g=>data.push(...g));data.push(...ungrouped);}
return data;},},methods:{_updateIconSituation(){let hasIcons=false;bbn.fn.each(this.filteredData,(a)=>{if(a.data&&a.data.icon){hasIcons=true;return false;}});if(hasIcons!==this.hasIcons){this.hasIcons=hasIcons;}},mouseenter(e,idx){if(!this.isOver){e.target.addEventListener('mousemove',()=>{this.overIdx=idx;this.isOver=true;},{once:true});}
else{this.overIdx=idx;this.isOver=true;}},resetOverIdx(){if(this.suggest===false){this.overIdx=null;}
else if(this.suggest===true){this.overIdx=0;}
else if(this.filteredData[this.suggest]){this.overIdx=this.suggest;}},mouseleave(){this.isOver=false;this.resetOverIdx();},isSelected(idx){let r=false;if(this.filteredData[idx]){if(this.selection){if(this.filteredData[idx].selected&&(this.mode!=='options')){r=true;}}
else if(this.selected.length&&this.sourceValue){r=this.selected.includes(this.filteredData[idx].data[this.sourceValue]);}}
return r;},remove(idx){this.realDelete(idx);},select(idx){bbn.fn.log('mirko',idx,this.tmpDisabled);if(this.tmpDisabled===idx){return;}
this.tmpDisabled=idx;setTimeout(()=>{this.tmpDisabled=false;},1000);let item=this.filteredData[idx]||null;bbn.fn.log('mirko2',item);let ev=new Event('select',{cancelable:true});if(item&&item.data&&!item.data.disabled){this.currentIndex=idx;if(item.data[this.children]&&item.data[this.children].length){this.isOpened=!this.isOpened;}
else{let v=item.data[this.sourceValue];if(!this.selected.includes(v)){this.$emit("select",item.data,idx,item.index,ev);}
if(!ev.defaultPrevented){if((this.mode==='selection')&&!item.selected){let prev=bbn.fn.getRow(this.filteredData,"selected",true);if(prev){this.currentData[prev.index].selected=false;}
item.selected=true;}
else{item.selected=!item.selected;}
if(v!==undefined){if(item.selected){if(this.unique){this.selected.splice(0,this.selected.length);}
if(!this.selected.includes(v)){this.selected.push(v);}}
else if(this.selected.includes(v)){this.selected.splice(this.selected.indexOf(v),1);}}
if(item.data.action){if(typeof(item.data.action)==='string'){if(bbn.fn.isFunction(this[item.data.action])){this[item.data.action]();}}
else if(bbn.fn.isFunction(item.data.action)){item.data.action(idx,item.data);}}
else if(item.data.url){bbn.fn.link(item.data.url);}}}}},unselect(value){bbn.fn.each(bbn.fn.filter(this.currentData,a=>{return this.selected.includes(a.data[this.sourceValue]);}),a=>{if(a.selected){a.selected=false;}});this.selected.splice(0,this.selected.length);}},created(){this.$on('dataloaded',()=>{this._updateIconSituation();});},mounted(){this.currentComponent=this.realComponent;if(!this.component&&!this.template&&this.$slots.default){let tpl=this.getRef('slot').innerHTML;if(tpl){this.currentTemplate=tpl;this.currentComponent={props:['source'],data(){return this.source;},template:this.currentTemplate};}}
this.$nextTick(()=>{if(this.$parent.$options&&(this.$parent.$options._componentTag==='bbn-scroll')){this.hasScroll=true;}
this.ready=true;setTimeout(()=>{this.resetOverIdx();},50);});},watch:{overIdx(newVal,oldVal){this.keepCool(()=>{if(this.hasScroll&&newVal&&!this.isOver){this.closest('bbn-scroll').scrollTo(null,this.getRef('li'+newVal));}},'overIdx',50)},source:{deep:true,handler(){if(this.isAutobind){this.updateData();}}},}});})(window.Vue,window.bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}