(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="['bbn-iblock', componentClass]">
  <input type="checkbox"
         :id="id"
         :name="name"
         :value="value"
         class="bbn-checkbox"
         :required="required"
         :disabled="disabled"
         :readonly="readonly"
         @change="toggle"
         :checked="state"
         ref="element"
     tabindex="0"
     @keydown="onKeyDown"
     @click="onClick"
  >
  <label class="bbn-checkbox-label bbn-iflex bbn-vmiddle"
         :for="id"
         @focus="focus"
         @blur="blur"
         @keyup="keyup"
         @keydown="onKeyDown"
         @click="onClick"
  >
  <span class="bbn-left-spadded"
     v-html="label"
     v-if="label"
  ></span>
 </label>
</span>`;script.setAttribute('id','bbn-tpl-component-checkbox');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);((bbn)=>{"use strict";Vue.component('bbn-checkbox',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{value:{default:true},novalue:{default:null},name:{type:String,default:null},id:{type:String,default(){return bbn.fn.randomString(10,25);}},modelValue:{type:[String,Boolean,Number],default:undefined},required:{type:Boolean,default:false},disabled:{type:Boolean,default:false},readonly:{type:Boolean,default:false},label:{type:String,},checked:{type:Boolean,default:false},strict:{type:Boolean,default:false}},model:{prop:'modelValue',event:'input'},data(){return{valueToSet:this.value}},computed:{state(){if(this.checked&&(this.modelValue===undefined)){return true;}
if(this.checked&&((!this.strict&&(this.modelValue!=this.valueToSet))||(this.strict&&(this.modelValue!==this.valueToSet)))){return false;}
if((this.strict&&(this.modelValue===this.valueToSet))||(!this.strict&&(this.modelValue==this.valueToSet))){return true;}
return this.checked;},},methods:{toggle(){if(!this.disabled&&!this.readonly){let emitVal=!this.state?this.valueToSet:this.novalue;this.$emit('input',emitVal);this.$emit('change',emitVal,this);}},onClick(ev){if(this.disabled||this.readonly){ev.preventDefault();}
else{this.click(ev);}},onKeyDown(ev){if((this.disabled||this.readonly)&&(ev.keyCode===32)){ev.preventDefault()}
else{this.keydown(ev);}}},watch:{checked(newValue){if(newValue!==this.state){this.toggle();}}},mounted(){if(this.checked&&!this.state){this.toggle();}
if(!this.checked&&!this.state){}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}