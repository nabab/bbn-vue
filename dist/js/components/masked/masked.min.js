(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-textbox', {'bbn-disabled': !!disabled}]">
  <input ref="element"
         :disabled="disabled"
         :required="required"
         :readonly="readonly"
         :placeholder="placeholder"
         @click="click"
         @focus="focusEvent"
         @blur="blurEvent"
         @change="change"
         @keydown="keydownEvent"
         @keyup="keyupEvent"
         @mouseenter="over"
         @mouseleave="out"
         :value="inputValue"
         @input="inputEvent"
         @paste="pasteEvent"
         @cut="cutEvent"
         :size="currentInputSize"
         class="bbn-radius"
  >
  <input :value="value"
         ref="real_masked"
         :name="name"
         :disabled="disabled"
         type="hidden"
         :size="size"
         :maxlength="maxlength"
  >
</span>
`;script.setAttribute('id','bbn-tpl-component-masked');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/masked/masked.css");document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict"
Vue.component('bbn-masked',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{mask:{type:String,required:true,validator:val=>!!val.length},promptChar:{type:String,default:'_'}},data(){return{escape:'\\',patterns:{0:{pattern:'[0-9]'},9:{pattern:'[0-9\s]'},'#':{pattern:'[0-9\s\\+\\-]'},'L':{pattern:'[a-zA-Z]'},'?':{pattern:'[a-zA-Z\s]'},'&':{pattern:'\S'},'C':{pattern:'.'},'A':{pattern:'[0-9a-zA-Z]'},'a':{pattern:'[0-9a-zA-Z\s]'},'.':{static:bbn.env&&bbn.env.money&&bbn.env.money.decimal?bbn.env.money.decimal:'.'},',':{static:bbn.env&&bbn.env.money&&bbn.env.money.thousands?bbn.env.money.thousands:','},'$':{static:bbn.env&&bbn.env.money&&bbn.env.money.currency?bbn.env.money.currency:'â‚¬'}},inputValue:''}},computed:{escapePos(){if(!this.mask){return[];}
let exp=Object.keys(this.patterns).map(p=>{return this.escape.repeat(p==='?'?4:2)+p}).join('|'),reg=new RegExp(exp,'gu'),res=[],match;while(match=reg.exec(this.mask)){res.push(match.index);}
return res;},bannedPos(){let pos=[],idx=0
bbn.fn.each([...this.mask],(c,i)=>{if(!this.escapePos.includes(i)&&(!this.patterns[c]||this.patterns[c].static||this.escapePos.includes(i-1))){if(this.escapePos.includes(i-1)){idx--}
pos.push(idx)}
idx++});return pos},bannedPosRaw(){let pos=[]
bbn.fn.each([...this.mask],(c,i)=>{if(!this.escapePos.includes(i)&&(!this.patterns[c]||this.patterns[c].static||this.escapePos.includes(i-1))){pos.push(i)}});return pos},posLink(){let pos={},idx=0
bbn.fn.each([...this.mask],(c,i)=>{if(!this.escapePos.includes(i)){if(this.escapePos.includes(i-1)){idx--}
pos[idx]=i}
idx++});return pos},maxLen(){return[...this.mask].filter((c,i)=>{return!!(!this.escapePos.includes(i-1)&&!this.bannedPosRaw.includes(i)&&this.patterns[c]&&this.patterns[c].pattern)}).length},maxPos(){return this.mask.length-this.escapePos.length},currentInputSize(){if(this.autosize){let val=this.getInputValue()
return val.length||1}
return 0}},methods:{isValidChar(char,pos){let k=this.mask.charAt(this.posLink[pos])
return!!(this.patterns[k]&&this.patterns[k].pattern&&char.match(this.patterns[k].pattern))},isSpecialKey(keyCode){switch(keyCode){case 8:case 9:case 16:case 18:case 35:case 36:case 37:case 39:case 46:return true
default:return false}},isArrowKey(keyCode){switch(keyCode){case 35:case 36:case 37:case 39:return true
default:return false}},isShiftKey(keyCode){return keyCode===16},isControlKey(keyCode){return keyCode===17},isBackspaceKey(keyCode){return keyCode===8},isCancKey(keyCode){return keyCode===46},isTabKey(keyCode){return keyCode===9},isEnterKey(keyCode){return keyCode===13},setInputValue(){this.inputValue=''
this.inputValue=this.getInputValue()
this.$forceUpdate()},getInputValue(value){let ret='',idxValue=0
value=(value===undefined?(!!this.value?this.value:''):value).toString()
bbn.fn.each([...this.mask],(c,i)=>{if(!this.escapePos.includes(i)&&!this.bannedPosRaw.includes(i)&&this.patterns[c]&&this.patterns[c].pattern){if(value&&value.charAt(idxValue)&&value.charAt(idxValue).match(this.patterns[c].pattern)){ret+=value.charAt(idxValue)}
else if(this.escapePos.includes(i-1)){ret+=c}
else{ret+=this.promptChar}
idxValue++}
else if(!this.escapePos.includes(i)){ret+=this.patterns[c]&&this.patterns[c].static?this.patterns[c].static:c}});return ret},getPos(pos,event){let originalPos=pos
if((pos<0)){pos=0}
else if(pos>this.maxPos){pos=this.maxPos}
if(event&&(this.isBackspaceKey(event.keyCode)||(event.keyCode===37))){while((pos>0)&&this.bannedPos.includes(event.type==='keydown'?pos-1:pos)){pos--}}
else{while((pos<this.maxPos)&&this.bannedPos.includes(pos)){pos++}}
return(pos<0)||(pos>this.maxPos)?originalPos:pos},getIdxRange(start,end){let val=!!this.value?this.value.toString():'',idxStart=-1,idxEnd=-1
for(let i=0;i<=end;i++){if(!this.bannedPos.includes(i)){if(i<=start){idxStart++}
if(i<=end){idxEnd++}}}
return{start:idxStart<0?0:idxStart,end:idxEnd}},keydownEvent(event){if(!this.disabled&&!this.readonly){if(!this.isShiftKey(event.keyCode)&&!this.isControlKey(event.keyCode)&&!this.isArrowKey(event.keyCode)&&!this.isTabKey(event.keyCode)&&!event.ctrlKey&&!this.isEnterKey(event.keyCode)){let isSelection=this.$refs.element.selectionStart!==this.$refs.element.selectionEnd,value=this.value?this.value.toString():''
if(!this.isCancKey(event.keyCode)&&!this.isBackspaceKey(event.keyCode)&&!isSelection&&((bbn.fn.isNumber(this.maxLen)&&(value.length>=parseInt(this.maxLen)))||((this.size!==undefined)&&bbn.fn.isNumber(this.size)&&(value.length>=this.size))||((this.maxlength!==undefined)&&bbn.fn.isNumber(this.maxlength)&&(value.length>=parseInt(this.maxlength))))){event.preventDefault()
return}
let pos=this.getPos(this.$refs.element.selectionStart,event);if(!this.isSpecialKey(event.keyCode)&&!this.isValidChar(event.key,pos)){event.preventDefault()}
else if(!this.isSpecialKey(event.keyCode)&&((this.inputValue.charAt(pos)!==this.promptChar)||isSelection)){let p=this.getIdxRange(isSelection?this.$refs.element.selectionStart:pos,isSelection?this.$refs.element.selectionEnd-1:pos)
p.end=isSelection?p.end+1:p.start
value=value.slice(0,p.start)+event.key+value.slice(p.end)
this.emitInput(value)
this.$nextTick(()=>{this.setInputValue()
this.$nextTick(()=>{this.$refs.element.setSelectionRange(pos+1,pos+1)})})
event.preventDefault()}
else if(this.isCancKey(event.keyCode)||this.isBackspaceKey(event.keyCode)){event.preventDefault()
if(isSelection){let pos=this.$refs.element.selectionStart,p=this.getIdxRange(this.$refs.element.selectionStart,this.$refs.element.selectionEnd-1)
this.emitInput(value.slice(0,p.start)+value.slice(p.end+1))
this.$nextTick(()=>{this.setInputValue()
this.$nextTick(()=>{this.$refs.element.setSelectionRange(pos,pos)})})}
else{if(this.isBackspaceKey(event.keyCode)&&(pos>0)){this.inputValue=this.inputValue.slice(0,pos-1)+this.promptChar+this.inputValue.slice(pos)
pos--}
else if(this.isCancKey(event.keyCode)&&(pos<this.maxPos)){this.inputValue=this.inputValue.slice(0,pos)+this.promptChar+this.inputValue.slice(pos+1)}
this.$nextTick(()=>{this.emitInput(this.raw())
this.$nextTick(()=>{this.setInputValue()
this.$nextTick(()=>{this.$refs.element.setSelectionRange(pos,pos)})})})}}
else if(event.shiftKey&&this.isArrowKey(event.keyCode)){this.$refs.element.selectionStart=pos}
else{this.$refs.element.setSelectionRange(pos,pos)}}
this.keydown(event)}},keyupEvent(event){if(!this.disabled&&!this.readonly){if(!this.isShiftKey(event.keyCode)&&!this.isControlKey(event.keyCode)&&!this.isTabKey(event.keyCode)&&!event.ctrlKey){let pos=this.$refs.element.selectionStart
this.$nextTick(()=>{pos=this.getPos(pos,event)
if(event.shiftKey&&this.isArrowKey(event.keyCode)){this.$refs.element.selectionStart=pos}
else{this.$refs.element.setSelectionRange(pos,pos)}})}
this.keyup(event)}},inputEvent(event){let pos=this.$refs.element.selectionStart;if((pos<=this.maxPos)&&!bbn.fn.isNull(event.data)&&this.isValidChar(event.data,pos-1)&&(this.inputValue.charAt(pos-1)===this.promptChar)&&(pos===this.$refs.element.selectionEnd)){this.inputValue=this.inputValue.slice(0,pos-1)+event.data+this.inputValue.slice(pos)
this.$nextTick(()=>{this.emitInput(this.raw())
this.$refs.element.setSelectionRange(pos,pos)})}},blurEvent(event){if(!this.disabled&&!this.readonly){if(!this.value){this.inputValue='';}
this.blur(event)}},focusEvent(event){if(!this.disabled&&!this.readonly){this.setInputValue()
this.$nextTick(()=>{this.$refs.element.setSelectionRange(0,0)})
this.focus(event)}},pasteEvent(event){if(!this.disabled&&!this.readonly){let text=event.clipboardData?event.clipboardData.getData('text'):'',pos=this.getPos(this.$refs.element.selectionStart),p=this.getIdxRange(0,pos),val=this.value.toString()
event.preventDefault()
text=this.clearText(text,pos)
val=val.slice(p.start,p.end)+text+val.slice(p.end)
pos=p.end+text.length+1
this.emitInput(val.slice(0,this.maxLen))
this.$nextTick(()=>{this.$refs.element.setSelectionRange(pos,pos)})}},cutEvent(event){if(!this.disabled&&!this.readonly){let sel=document.getSelection(),text=sel.toString(),oriPos=this.$refs.element.selectionStart,pos=this.getPos(oriPos),p=this.getIdxRange(0,pos),val=this.value.toString()
event.preventDefault()
document.execCommand('copy')
text=this.clearText(text,pos)
val=val.slice(p.start,p.end)+val.slice(p.end+text.length)
this.emitInput(val.slice(0,this.maxLen))
this.$nextTick(()=>{this.$refs.element.setSelectionRange(oriPos,oriPos)})}},clearText(text,pos){let ret=''
if(text){bbn.fn.each([...text],(c,i)=>{if(this.isValidChar(c,pos)){ret+=c
pos=this.getPos(pos)}})}
return ret},raw(value){let ret=''
value=(value!==undefined?value:(this.$refs.element.value||'')).toString()
if(value){bbn.fn.each([...value],(c,i)=>{if(!this.bannedPos.includes(i)&&this.patterns[this.mask[this.posLink[i]]]&&this.patterns[this.mask[this.posLink[i]]].pattern){if(c.match(this.patterns[this.mask[this.posLink[i]]].pattern)){ret+=c}}})}
return ret}},mounted(){if(this.value){this.setInputValue()}
this.ready=true},watch:{value(newVal,oldVal){if(newVal!==oldVal){this.setInputValue()}},mask(){this.$nextTick(()=>{let pos=this.value.length;this.getRef('element').setSelectionRange(pos,pos);});}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}