(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="componentClass">
  <div v-if="master"
       :class="['bbn-breadcrumb-container', {'bbn-flex-height': content}]"
  >
    <div class="bbn-h-100 bbn-alt bbn-bordered-bottom bbn-no-border-top bbn-no-border-right bbn-vmiddle bbn-hspadded"
         :style="{
           backgroundColor: backgroundColor,
           color: fontColor
         }"
    >
      <bbn-context :source="getList"
                   tag="span"
                   min-width="10rem"
                   tabindex="0"
                   :item-component="$options.components.listItem"
                   :class="{'bbn-breadcrumb-dirty': isNumber(selected) && source[selected] && !!source[selected].dirty}"
                   :attach="$el"
      >
        <bbn-context :source="getMenuFn"
                     :source-index="isNumber(selected) ? selected : undefined"
                     tag="span"
                     min-width="10rem"
                     tabindex="0"
                     :context="true"
        >
          <span class="bbn-hxspadded">
            <i v-if="isNumber(selected) && source[selected] && !!source[selected].icon"
               :class="[source[selected].icon]"
            ></i>
            <span v-text="isNumber(selected) && source[selected] && !!source[selected].title ? source[selected].title : _('Untitled')"
                  :class="{'bbn-b': !currents.length}"
            ></span>
            <i v-if="isNumber(selected) && source[selected] && !source[selected].static"
               class="nf nf-fa-times bbn-p bbn-abs bbn-breadcrumb-icons bbn-breadcrumb-icons-close"
               @click.prevent.stop="close(selected)"
            ></i>
            <i v-if="getMenuFn(selected).length"
               class="nf nf-fa-caret_down bbn-p bbn-abs bbn-breadcrumb-icons bbn-breadcrumb-icons-menu"
               @click.prevent.stop="openMenu($event)"
            ></i>
          </span>
        </bbn-context>
      </bbn-context>
      <template v-if="currents.length"
                v-for="(sn, isn) in currents"
      >
        <span :style="{color: fontColor}">
          <i class="nf nf-fa-angle_right bbn-hsmargin bbn-large bbn-breadcrumb-arrow"></i>
        </span>
        <bbn-context :source="sn.getList"
                     tag="span"
                     min-width="10rem"
                     tabindex="0"
                     :item-component="$options.components.listItem"
                     :class="{'bbn-breadcrumb-dirty': isNumber(sn.selected) && sn.source[sn.selected] && !!sn.source[sn.selected].dirty}"
                     :attach="$el"
        >
          <bbn-context :source="sn.getMenuFn"
                       :source-index="isNumber(sn.selected) ? sn.selected : undefined"
                       tag="span"
                       min-width="10rem"
                       tabindex="0"
                       :context="true"
          >
            <span :style="{
                    backgroundColor: isNumber(sn.selected) && sn.source[sn.selected] && !!sn.source[sn.selected].bcolor ? sn.source[sn.selected].bcolor : '',
                    color: isNumber(sn.selected) && sn.source[sn.selected] && !!sn.source[sn.selected].fcolor ? sn.source[sn.selected].fcolor : fontColor
                  }"
                  class="bbn-hxspadded"
            >
              <i v-if="isNumber(sn.selected) && sn.source[sn.selected] && !!sn.source[sn.selected].icon"
                 :class="sn.source[sn.selected].icon"
              ></i>
              <span v-text="isNumber(sn.selected) && sn.source[sn.selected] && !!sn.source[sn.selected].title ? sn.source[sn.selected].title : _('Untitled')"
                    :class="{'bbn-b': !currents[isn+1]}"
              ></span>
              <i v-if="isNumber(sn.selected) && sn.source[sn.selected] && !sn.source[sn.selected].static"
                 class="nf nf-fa-times bbn-p bbn-abs bbn-breadcrumb-icons bbn-breadcrumb-icons-close"
                 @click.prevent.stop="sn.close(sn.selected)"
              ></i>
              <i v-if="sn.getMenuFn(sn.selected).length"
                 class="nf nf-fa-caret_down bbn-p bbn-abs bbn-breadcrumb-icons bbn-breadcrumb-icons-menu"
                 @click.prevent.stop="openMenu($event)"
              ></i>
            </span>
          </bbn-context>
        </bbn-context>
      </template>
    </div>
    <div v-if="content && isNumber(selected)"
         class="bbn-flex-fill"
         v-html="source[selected] && source[selected].content ? source[selected].content : ''"
         ref="content"
    ></div>
  </div>
</div>`;script.setAttribute('id','bbn-tpl-component-breadcrumb');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel','stylesheet');css.setAttribute('href',bbn.vue.libURL+'dist/js/components/breadcrumb/breadcrumb.css');document.head.insertAdjacentElement('beforeend',css);(function(bbn,Vue){"use strict";Vue.component("bbn-breadcrumb",{name:'bbn-breadcrumb',mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent,bbn.vue.localStorageComponent,bbn.vue.closeComponent,bbn.vue.observerComponent],props:{source:{type:Array,reuired:true},value:{},content:{type:Boolean,default:true},scrollable:{type:Boolean,default:false},maxTitleLength:{type:Number,default:20},menu:{type:Function},master:{type:Boolean,default:false}},data(){return{selected:false,iconsReady:false,parents:[],subBreadcrumbs:{},allSubBreadcrumbs:[],parent:false}},computed:{scrollCfg(){return this.scrollable?{axis:'x',container:true,hidden:true}:{};},router(){if(this.$parent&&(this.$parent.$options.name==='bbn-router')){return this.$parent;}
return false;},itsMaster(){if(this.master){return this;}
else if(this.router&&this.router.itsMaster&&this.router.itsMaster.itsMasterBreadcrumb){return this.router.itsMaster.itsMasterBreadcrumb;}
return bbn.fn.getRow(this.parents,{master:true})},currents(){let ret=[],sbcs=this.allSubBreadcrumbs;return this.getCurrents(this.router.selected);},backgroundColor(){return this.isNumber(this.selected)&&this.source[this.selected]&&this.source[this.selected].bcolor?this.source[this.selected].bcolor:''},fontColor(){return this.isNumber(this.selected)&&this.source[this.selected]&&this.source[this.selected].fcolor?this.source[this.selected].fcolor:''}},methods:{isNumber:bbn.fn.isNumber,register(bc,url){this.subBreadcrumbs[url]=bc;this.allSubBreadcrumbs.push(bc);if(this.itsMaster){this.itsMaster.allSubBreadcrumbs.push(bc);}},unregister(bc,url){if(this.subBreadcrumbs[url]){delete this.subBreadcrumbs[url];}
let idx=bbn.fn.search(this.allSubBreadcrumbs,{_uid:bc._uid});if(idx!==-1){this.allSubBreadcrumbs.splice(idx,1);}
if(this.itsMaster){let idx2=bbn.fn.search(this.itsMaster.allSubBreadcrumbs,{_uid:bc._uid});if(idx2!==-1){this.itsMaster.allSubBreadcrumbs.splice(idx2,1);}}},getCurrents(idx){let ret=[];if(this.router&&bbn.fn.isNumber(idx)&&this.router.views[idx]){let url=this.router.views[idx].url;if(this.router.urls[url]&&this.subBreadcrumbs[url]){ret.push(this.subBreadcrumbs[url]);if(this.subBreadcrumbs[url].currents.length){ret.push(...this.subBreadcrumbs[url].currents);}}}
return ret;},getMenuFn(idx){return this.menu?this.menu(idx):[];},close(idx,force){if(this.isValidIndex(idx)){let ev=new CustomEvent('beforeClose',{cancelable:true});this.$emit('beforeClose',idx,force,ev);if(!ev.defaultPrevented){this.source.splice(idx,1);if(this.selected>idx){this.selected--;}
else if(this.selected===idx){this.selected=false;}
this.$emit('close',idx,force);}}},closeAll(){for(let i=this.source.length-1;i>=0;i--){if(!this.source[i].static&&!this.source[i].pinned){this.close(i);}}},closeAllBut(idx){for(let i=this.source.length-1;i>=0;i--){if(!this.source[i].static&&!this.source[i].pinned&&(i!==idx)){this.close(i);}}},isValidIndex(idx){return bbn.fn.isNumber(idx)&&(this.source[idx]!==undefined);},getList(bc){if(!bc){bc=this;}
let list=[],parents=bc.itsMaster&&(bc!==bc.itsMaster)?bc.getParents():[];bbn.fn.each(bc.source,(t,i)=>{if(!t.hidden&&(i!==bc.selected)){list.push({text:t.title,icon:t.icon,key:t.url,bcolor:t.bcolor,fcolor:t.fcolor,static:t.static,parents:parents,children:bc.getCurrents(i),action:()=>{bc.selected=t.idx;},closeAction:()=>{bc.close(t.idx)}})}});return list;},getParents(){return this.parent?[...this.parent.getParents(),this.parent]:[]},openMenu(ev){let ele=ev.target.parentElement.parentElement,e=new MouseEvent("contextmenu",{bubbles:true,cancelable:true,view:window});ele.dispatchEvent(e);}},mounted(){if(!this.master){bbn.fn.each(this.ancestors('bbn-breadcrumb'),b=>{this.parents.push(b);if(b.master){return false;}});}
if(bbn.fn.isNumber(this.value)){this.selected=this.value;}
this.$nextTick(()=>{if(!this.master&&this.router){this.parent=this.router.parent.itsBreadcrumb;this.router.parent.itsBreadcrumb.register(this,bbn.fn.substr(this.router.baseURL,0,this.router.baseURL.length-1));}})
this.ready=true;setTimeout(()=>{this.iconsReady=true;},1000);},beforeDestroy(){if(!this.master&&this.router&&this.router.parent&&this.router.parent.itsBreadcrumb){this.router.parent.itsBreadcrumb.unregister(this,bbn.fn.substr(this.router.baseURL,0,this.router.baseURL.length-1));}},watch:{selected(newVal,oldVal){if(newVal!==oldVal){this.$emit('select',newVal);}},value(newVal,oldVal){if(newVal!==oldVal){this.selected=newVal}}},components:{listItem:{template:`
<span class="bbn-w-100 bbn-vxspadded bbn-hspadded">
  <span class="bbn-flex-width bbn-vmiddle">
    <span class="text bbn-flex-fill">
      <template v-for="p in source.parents">
        <span :style="{
                backgroundColor: p.source[p.selected].bcolor || false,
                color: p.source[p.selected].fcolor || false
              }"
              class="bbn-hxspadded"
        >
          <i v-if="p.source[p.selected].icon"
             :class="p.source[p.selected].icon"
          ></i>
          <span v-html="p.source[p.selected].title || '`+bbn._('Untitled')+`'"></span>
        </span>
        <i class="nf nf-fa-angle_right bbn-hsmargin bbn-large bbn-breadcrumb-arrow"></i>
      </template>
      <span :style="{
              backgroundColor: source.bcolor || false,
              color: source.fcolor || false
            }"
            class="bbn-hxspadded"
      >
        <i v-if="source.icon"
           class="source.icon"
        ></i>
        <span v-html="source.text || '`+bbn._('Untitled')+`'"></span>
      </span>
      <template v-for="(c, i) in source.children">
        <i class="nf nf-fa-angle_right bbn-hsmargin bbn-large bbn-breadcrumb-arrow"></i>
        <span :style="{
                backgroundColor: c.source[c.selected].bcolor || false,
                color: c.source[c.selected].fcolor || false
              }"
              :class="['bbn-hxspadded', {'bbn-b': !!source.children[i+1]}]"
        >
          <i v-if="c.source[c.selected].icon"
             class="c.source[c.selected].icon"
          ></i>
          <span v-html="c.source[c.selected].title || '`+bbn._('Untitled')+`'"></span>
        </span>
      </template>
    </span>
    <span v-if="!source.static"
          class="space"
          style="text-align: right"
          @click.prevent.stop="close"
    >
      <i class="nf nf-fa-times"></i>
    </span>
  </span>
</span>
        `,props:{source:{type:Object,required:true}},methods:{close(){this.source.closeAction();this.closest('bbn-context').showFloater=false;}}}}});})(bbn,Vue);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}