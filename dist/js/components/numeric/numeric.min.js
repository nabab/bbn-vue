(bbn_resolve)=>{((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, 'bbn-iblock', 'bbn-textbox', {'bbn-disabled': !!disabled}]"
     @click.stop>
  <div class="bbn-flex-width">
    <div class="bbn-flex-fill">
      <input tabindex="0"
             autocomplete="off"
             v-model="currentValue"
             :name="name"
             ref="element"
             :disabled="disabled"
             :readonly="readonly"
             :required="required"
             @blur="_blur"
             @keydown="_keydown"
             @keyup="keyup"
             @mouseenter="over"
             @mouseleave="out"
             @change="change"
             v-show="editMode"
             :size="currentInputSize"
             :style="{'paddingRight': spinners ? '0.5em !important' : ''}"
      >
      <input autocomplete="off"
             :value="inputValue"
             :name="name"
             tabindex="0"
             :disabled="disabled"
             :readonly="readonly || onlySpinners"
             :required="required"
             @focus="_focus"
             @mouseenter="over"
             @mouseleave="out"
             v-show="!editMode"
             ref="formatted"
             :size="currentInputSize"
             :style="{'paddingRight': spinners ? '0.5em !important' : ''}"
      >
      <input type="hidden"
             :value="value"
      >
    </div>
    <div v-if="spinners"
         :class="['bbn-numeric-buttons', 'bbn-radius-top-right', 'bbn-radius-bottom-right', {'bbn-disabled' : !!readonly || disabled}]">
      <div :class="[
            'bbn-reactive-block',
            'bbn-middle',
            'bbn-no-border-top',
            'bbn-no-border-right',
            'bbn-radius-top-right',
            {
              'bbn-disabled': disableIncrease,
              'bbn-p': disableIncrease,
              'bbn-numeric-no-pointer-events' : disableIncrease
            }
          ]"
          @click="increment"
          unselectable="on"
          tabindex="-1"
          :disabled="disableIncrease"
      >
        <i class="nf nf-fa-caret_up bbn-middle"></i>
      </div>
      <div :class="[
            'bbn-reactive-block',
            'bbn-middle',
            'bbn-no-border-top',
            'bbn-no-border-bottom',
            'bbn-no-border-right',
            'bbn-radius-bottom-right',
            {
              'bbn-disabled': disableDecrease,
              'bbn-p' :disableDecrease,
              'bbn-numeric-no-pointer-events' : disableDecrease
            }
          ]"
          @click="decrement"
          unselectable="on"
          tabindex="-1"
          :disabled="disableDecrease"
      >
        <i class="nf nf-fa-caret_down bbn-middle"></i>
      </div>
    </div>
  </div>
</div>`;script.setAttribute('id','bbn-tpl-component-numeric');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);let css=document.createElement('link');css.setAttribute('rel',"stylesheet");css.setAttribute('href',bbn.vue.libURL+"dist/js/components/numeric/numeric.css");document.head.insertAdjacentElement('beforeend',css);(function(bbn){"use strict";Vue.component('bbn-numeric',{mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent],props:{decimals:{type:[Number,String],default:0},unit:{type:String,default:''},max:{type:[Number,String]},min:{type:[Number,String]},step:{type:Number,default:1},spinners:{type:Boolean,default:true},onlySpinners:{type:Boolean,default:false}},data(){let isPercentage=this.unit==='%',decimals=isPercentage?parseInt(this.decimals)+2:this.decimals,value=this.value;if(!this.decimals&&this.step&&(this.step<1)){let step=this.step;while(step<1){step*=10;decimals++;}}
if((value===null)||(value==='')){value='';}
else if(value==0){value=this.getFormatted(parseFloat(0).toFixed(decimals)*(isPercentage?100:1),decimals);}
else{value=this.getFormatted(this.value*(isPercentage?100:1),isPercentage?this.decimals:decimals);}
return{editMode:false,inputValue:value,currentValue:this.value===null?'':(bbn.fn.isNumber(this.value)?parseFloat(this.value).toFixed(this.decimals):this.value),currentDecimals:decimals}},computed:{disableDecrease(){return(bbn.fn.isNumber(this.min)&&(parseFloat(this.currentValue)<=this.min))||!!this.readonly||this.disabled;},disableIncrease(){return(bbn.fn.isNumber(this.max)&&(parseFloat(this.currentValue)>=this.max))||!!this.readonly||this.disabled;},pattern(){let p='^';if(!bbn.fn.isNumber(this.min)||(this.min<0)){p+='\\-?';}
p+='[0-9]+';if(this.currentDecimals){p+='(\\.[0-9]{1,'+this.currentDecimals+'}){0,1}';}
p+='$';return new RegExp(p);},isPercentage(){return this.unit==='%'},currentInputSize(){if(this.autosize){let val=this.inputValue;return val.length||1}
return 0}},methods:{_keydown(e){const keys=([]).concat(bbn.var.keys.numbers,bbn.var.keys.upDown,bbn.var.keys.leftRight,bbn.var.keys.dels,bbn.var.keys.confirm,bbn.var.keys.numsigns);if((bbn.fn.isNumber(this.min)&&(this.min>=0)&&(e.keyCode===189))||(!this.decimals&&!this.unit&&((e.keyCode===110)||(e.keyCode===190)))||(!keys.includes(e.keyCode)&&(e.keyCode!==17))){e.preventDefault();return;}
if(this.spinners){if(e.keyCode===38){this.increment();}
if(e.keyCode===40){this.decrement();}
if(e.keyCode===33){let step=10*this.step,tmp=parseFloat(this.value)+(this.isPercentage?step / 100:step);this.changeValue(tmp);}
if(e.keyCode===34){let step=10*this.step,tmp=parseFloat(this.value)-(this.isPercentage?step / 100:step);this.changeValue(tmp);}}
this.keydown(e);},_focus(e){if(!this.disabled&&!this.readonly&&!this.onlySpinners){this.currentValue=this.value;this.editMode=true;this.$nextTick(()=>{this.focus(e);})}},_blur(e){this.checkMinMax();this.checkDecimals();this.editMode=false;this.$nextTick(()=>{this.blur(e);})},checkDecimals(){if(this.currentDecimals&&this.currentValue&&parseFloat(this.currentValue).toString().match('^\-?[0-9]+\.0{0,'+this.currentDecimals+'}[1-9]{0}$')){this.currentValue=parseFloat(this.currentValue).toFixed(0);}},checkMinMax(){let w=false;if(bbn.fn.isNumber(this.max)&&(this.currentValue!=='')&&(this.currentValue!==null)&&(parseFloat(this.currentValue)>parseFloat(this.max))){this.currentValue=parseFloat(this.max).toFixed(this.currentDecimals);w=true;}
else if(bbn.fn.isNumber(this.min)&&(this.currentValue!=='')&&(this.currentValue!==null)&&(parseFloat(this.currentValue)<parseFloat(this.min))){this.currentValue=parseFloat(this.min).toFixed(this.currentDecimals);w=true;}
if(w){this.setInputValue(this.currentValue);if(this.value!==this.currentValue){this.emitInput(this.currentValue);}}
return w;},increment(event,negative){if(!this.readonly&&!this.disabled&&(negative?!this.disableDecrease:!this.disableIncrease)){let evName=negative?'decrement':'increment',beforeEvName='before'+bbn.fn.correctCase(evName),ev=new Event(beforeEvName,{cancelable:true}),modifier=negative?-1:1,ratio=(this.currentDecimals?Math.pow(10,this.currentDecimals):1),value=this.value?Math.round(this.value*ratio):0;value+=this.step*ratio*modifier;value /=ratio;this.$emit(beforeEvName,value,ev);if(!ev.defaultPrevented){this.currentValue=value;this.$nextTick(()=>{this.checkMinMax();this.$nextTick(()=>{this.$emit(evName,this.currentValue);});})}}},decrement(){this.increment(null,true);},changeValue(newVal,oldVal){if((newVal==='')||(newVal===null)){this.currentValue='';this.setInputValue('');this.emitInput(this.nullable?null:'');}
else{if(this.pattern.exec(newVal)||(this.currentDecimals&&bbn.fn.isString(newVal)&&newVal.match(/^\-?[0-9]+\.$/))){let v=newVal?parseFloat(parseFloat(newVal).toFixed(this.currentDecimals)):0;if(this.value!==v){this.emitInput(v);}
this.setInputValue(v);}
else if((!this.currentDecimals||(bbn.fn.isString(newVal)&&!newVal.match(/^\-?[0-9]+\.$/)))&&(oldVal!==undefined)){this.currentValue=oldVal;}}},setInputValue(val){if(val===undefined){val=this.currentValue;}
if((val==='')||(val===null)){this.inputValue='';return;}
if(this.isPercentage){val=val*100;}
this.inputValue=this.getFormatted(val,this.decimals)},getFormatted(val,decimals){return bbn.fn.money(val,((bbn.env.money!==undefined)&&(bbn.env.money.kilo!==undefined))?bbn.env.money.kilo:undefined,this.unit,'',((bbn.env.money!==undefined)&&(bbn.env.money.decimal!==undefined))?bbn.env.money.decimal:undefined,((bbn.env.money!==undefined)&&(bbn.env.money.thousands!==undefined))?bbn.env.money.thousands:undefined,decimals)}},watch:{value(newVal){if((newVal!==this.currentValue)&&!this.editMode){this.currentValue=newVal;}},currentValue(newVal,oldVal){if((newVal!==oldVal)){this.changeValue(newVal,oldVal);}}}});})(bbn);if(bbn_resolve){bbn_resolve("ok");}})(bbn);}