((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, {'bbn-flex-height': scrollable, 'bbn-gallery-sorting': isSorting}]">
  <div v-if="toolbar"
       class="bbn-l bbn-widget bbn-gallery-toolbar bbn-spadded bbn-vmiddle">
    <component v-if="isObject(toolbar) || isVue(toolbar)"
               :is="toolbar"/>
    <template v-else>
      <div class="bbn-flex-width bbn-vmiddle">
        <div class="bbn-flex-fill">
          <div class="bbn-flex-width bbn-vmiddle">
            <bbn-button v-if="toolbarButtons && toolbarButtons.length"
                        v-for="(btn, idx) in toolbarButtons"
                        :disabled="isSelecting || isSorting"
                        v-bind="btn"
                        :key="idx"/>
            <bbn-button :text="_('Select')"
                        icon="nf nf-mdi-vector_selection"
                        @click="setSelecting('selection')"
                        :notext="buttonsNoText"
                        :disabled="isSelecting || isSorting"
                        v-if="!!selection"/>
            <bbn-button :text="_('Upload')"
                        icon="nf nf-fa-upload"
                        @click="$emit('upload')"
                        v-if="uploadable"
                        :notext="buttonsNoText"
                        :disabled="isSelecting || isSorting"/>
            <bbn-button :text="_('Download')"
                        icon="nf nf-fa-download"
                        @click="setSelecting('download')"
                        v-if="downloadable"
                        :disabled="isSelecting || !total || isSorting"
                        :notext="buttonsNoText"
                        class="bbn-left-xsspace"/>
            <bbn-button :text="_('Delete')"
                        icon="nf nf-fa-trash"
                        @click="setSelecting('delete')"
                        v-if="deletable"
                        :disabled="isSelecting || !total || isSorting"
                        :notext="buttonsNoText"
                        class="bbn-left-xsspace"/>
            <bbn-button :text="_('Order')"
                        icon="nf nf-fa-sort_numeric_asc"
                        @click="isSorting = !isSorting"
                        v-if="sortable && !!uid"
                        :disabled="isSelecting || !total"
                        :notext="buttonsNoText"
                        :class="['bbn-left-xsspace', {'bbn-primary': isSorting}]"/>
            <bbn-button :text="_('Ok')"
                        icon="nf nf-fa-check"
                        @click="emitAction()"
                        v-if="isSelecting"
                        :disabled="!currentSelected.length"
                        :notext="buttonsNoText"
                        class="bbn-left-space"/>
            <bbn-button :text="_('Cancel')"
                        icon="nf nf-fa-times"
                        @click="setSelecting(false)"
                        v-if="isSelecting"
                        :notext="buttonsNoText"
                        class="bbn-left-xsspace"/>
            <div v-if="filterable"
                  class="bbn-flex-fill bbn-hmargin">
              <div class="bbn-flex-width">
                <bbn-input :placeholder="_('Search')"
                           v-model="currentSearch"
                           class="bbn-flex-fill"
                           ref="search"
                           :button-right="!!currentSearch ? 'nf nf-fa-times' : 'nf nf-fa-search'"
                           @clickRightButton="resetSearch"
                           :disabled="isLoading"/>
                <!--<bbn-button icon="nf nf-fa-filter"
                            :text="_('Filter')"
                            :notext="buttonsNoText"
                            @click=""
                            class="bbn-left-xsspace"/>-->
              </div>
            </div>
          </div>
        </div>
        <div class="bbn-vmiddle">
          <bbn-range v-if="resizable"
                     class="bbn-vmiddle"
                     v-model="currentItemWidth"
                     :min="currentMinItemWidth"
                     :max="currentMaxItemWidth"
                     :disabled="isLoading"/>
        </div>
      </div>
    </template>
  </div>
  <div :class="{'bbn-flex-fill': scrollable}">
    <div :class="['bbn-flex-width', {'bbn-overlay': scrollable}]">
      <div v-if="!!currentSelected && currentSelected.length && !!uid"
           class="bbn-gallery-selected-panel bbn-rel">
        <bbn-scroll>
          <div class="bbn-gallery-selected-panel-grid bbn-hxspadded">
            <gallery-selected v-for="(sel, idx) in currentSelected"
                              :source="sel"
                              :key="idx"/>
          </div>
        </bbn-scroll>
      </div>
      <div ref="gallery"
           class="bbn-flex-fill">
        <div v-if="isLoading"
            :class="['bbn-background', 'bbn-middle', 'bbn-padded', {
              'bbn-overlay': scrollable,
            }]">
          <bbn-loadicon class="bbn-vmiddle"
                        :size="24"/>
          <span class="bbn-xl bbn-b bbn-left-sspace"
                v-text="_('Loading') + '...'"/>
        </div>
        <component :is="scrollable ? 'bbn-scroll' : 'div'"
                  v-else-if="total">
          <div class="bbn-gallery-columns-container"
               :style="{margin: '0 auto', textAlign: align}">
            <gallery-col v-for="(col, index) in cols"
                        :key="'gallery-col-'+index"
                        :index="index"
                        :source="items.filter((it, i) => {
                            return i % cols === index;
                          })"/>
          </div>
        </component>
      </div>
    </div>
  </div>
  <bbn-pager class="bbn-gallery-pager"
              :element="_self"
              ref="pager"
              v-if="(pageable || isAjax) && !!pager"/>
  <bbn-floater v-if="showFloater"
              :title="false"
              :top="0"
              @close="showFloater = false"
              :closable="true"
              width="100%"
              height="100%"
              :scrollable="false"
              :resizable="false"
              :maximizable="false"
              :component="$options.components.galleryZoom"
              :source="floaterSource"/>
  
</div>`;script.setAttribute('id','bbn-tpl-component-gallery');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(bbn=>{"use strict";Vue.component('bbn-gallery',{mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent,bbn.vue.listComponent],props:{scrollable:{type:Boolean,default:true},toolbar:{type:[Vue,Object,Boolean],default:true},toolbarButtons:{type:Array,default(){return[];}},overlay:{type:[Boolean,String],default:false},zoomable:{type:Boolean,default:false},info:{type:Boolean,default:false},columnGap:{type:Number,default:20},rowGap:{type:Number,default:20},minCol:{type:Number,default:1},maxCol:{type:Number},itemWidth:{type:[Number,String],default:150},minItemWidth:{type:Number},maxItemWidth:{type:Number},align:{type:String,default:'center'},uploadable:{type:Boolean,default:false},downloadable:{type:Boolean,default:false},deletable:{type:Boolean,default:false},buttonsNoText:{type:Boolean,default:false},preview:{type:Boolean,default:true},pathName:{type:String,default:'content'},overlayName:{type:String,default:'overlay'},searchName:{type:String,default:'title'},itemComponent:{type:[String,Object,Vue]},buttonMenu:{type:[Function,Array]},buttonMenuComponent:{type:[String,Object,Vue]},resizable:{type:Boolean,default:true},pager:{type:Boolean,default:true},sourceOrder:{type:String},sourceAction:{type:String,default:'link'},sourceInfo:{type:String,default:'info'}},data(){return{width:0,isSelecting:false,selectingMode:false,isLoaded:false,currentItemWidth:this.itemWidth,currentSearch:'',searchTimeout:0,currentSelectedData:[],showFloater:false,floaterSource:{},isSorting:false,currentLimit:!!this.pageable?this.limit:0}},computed:{cols(){return parseInt(this.lastKnownWidth /(this.currentItemWidth+this.columnGap))||1},items(){let data=this.filteredData;if(this.sortable&&!this.serverSorting){data=bbn.fn.order(data,'data.'+this.sourceOrder,'asc');}
if(this.pageable&&this.currentLimit&&(!this.isAjax||!this.serverPaging)){return data.slice(this.start,this.start+this.currentLimit);}
return data;},currentMinItemWidth(){let mw=this.itemWidth-200;return this.minItemWidth||(mw>50?mw:50);},currentMaxItemWidth(){return this.minItemWidth||(this.itemWidth+200);}},methods:{isObject:bbn.fn.isObject,isVue:bbn.fn.isVue,correctCase:bbn.fn.correctCase,setSelecting(mode){if(bbn.fn.isString(mode)){this.isSelecting=true;this.selectingMode=mode;}
else{this.isSelecting=false;this.selectingMode=false;this.currentSelected.splice(0);this.currentSelectedData.splice(0);}},emitAction(){if(this.currentSelected.length){let mess='';if(this.selectingMode==='download'){mess=bbn._("Are you sure you want to download these photos?");}
else if(this.selectingMode==='delete'){mess=bbn._("Are you sure you want to delete these photos?");}
if(mess.length){this.confirm(mess,()=>{this.$emit(this.selectingMode,this.currentSelectedData);this.setSelecting(false);});}
else{this.$emit(this.selectingMode,this.currentSelectedData);this.setSelecting(false);}}},resetSearch(){this.currentSearch='';}},mounted(){this.$nextTick(()=>{this.ready=true;});},watch:{currentSearch(newVal){if(this.searchTimeout){clearTimeout(this.searchTimeout);}
this.searchTimeout=setTimeout(()=>{let idx=bbn.fn.search(this.currentFilters.conditions,{field:this.searchName});bbn.fn.log(idx)
if(idx>-1){if(newVal){this.currentFilters.conditions[idx].value==newVal;}
else{this.currentFilters.conditions.splice(idx,1)}}
else if(newVal){this.currentFilters.conditions.push({field:this.searchName,operator:'contains',value:newVal})}},1000)},itemWidth(val){this.currentItemWidth=val;},showFloater(val){if(!val){this.floaterSource={};}}},components:{galleryCol:{name:'gallery-col',template:`
<div :style="colStyle">
  <component :is="gallery.itemComponent || 'gallery-item'"
             v-for="(item, idx) in source"
             :source="item"
             :key="'gallery-item-'+index+'-'+idx"/>
</div>`,props:{source:{type:Array,default(){return[];}},index:{type:Number}},computed:{gallery(){return this.closest('bbn-gallery');},colStyle(){return{width:`${this.gallery.currentItemWidth}px`,margin:`0 ${this.gallery.columnGap / 2}px`,verticalAlign:'top',display:'inline-block'}}},components:{galleryItem:{name:'gallery-item',template:`
<a v-if="!col.gallery.isLoading"
    :class="['bbn-gallery-item', 'bbn-box', {'bbn-primary': isSelected, 'bbn-p': !!col.gallery.zoomable}]"
    @click="action"
    @contextmenu.prevent.stop="getRef('menuButton').click()"
    :style="aStyle"
    v-draggable="!!col.gallery.isSorting && !!col.gallery.uid"
    v-droppable="!!col.gallery.isSorting && !!col.gallery.uid"
    @drop="changeOrder">
  <span :class="{
          'bbn-spadded': !loaded,
          'bbn-c': !loaded
        }"
        style="display: block">
    <img :src="imgSrc"
         @load="loaded = true"
         @error="error = true"
         :class="{
           'bbn-radius': !col.gallery.isSorting,
           'bbn-gallery-item-selected': isSelected,
           'bbn-invisible': !loaded
         }"
         :style="imgStyle"
         :alt="(source.caption ? source.caption + ' - ' : '') + (source.text ? source.text + ' - ' : '') + (source.tags || []).join(' | ')"
         :draggable="!col.gallery.isSorting">
    <bbn-loadicon class="bbn-gallery-item-loading bbn-c"
                  v-if="!loaded && !error"/>
    <i v-else-if="error && !loaded" class="bbn-red nf nf-mdi-image_off"/>
    <span v-if="showOverlay && loaded"
          class="bbn-gallery-overlay bbn-widget bbn-ellipsis bbn-radius-bottom bbn-hxspadded"
          v-text="source.data[col.gallery.overlayName]"
          :title="source.data[col.gallery.overlayName]"/>
    <i v-if="col.gallery.zoomable && loaded && !col.gallery.isSelecting && !col.gallery.isSorting"
       class="bbn-gallery-zoverlay nf nf-fa-search"/>
    <bbn-context v-if="showOverlay && !!col.gallery.buttonMenu && loaded && !col.gallery.isSelecting && !col.gallery.isSorting"
                 tag="div"
                 class="bbn-block bbn-top-left bbn-top-smargin bbn-left-smargin"
                 :source="!!col.gallery.buttonMenu
                   ? (isFunction(col.gallery.buttonMenu)
                     ? col.gallery.buttonMenu(source.data, source.index, source.key)
                     : col.gallery.buttonMenu)
                   : []"
                 :attach="buttonMenuElement"
                 :item-component="col.gallery.contextComponent"
                 @hook:mounted="buttonMenuElement = getRef('itemMenu') || undefined"
                 ref="menuButton">
        <div class="bbn-block">
          <i class="bbn-gallery-button-menu nf nf-mdi-menu"
             ref="itemMenu"/>
        </div>
    </bbn-context>
  </span>
  <div v-if="col.gallery.sortable && col.gallery.isSorting && col.gallery.sourceOrder"
        v-text="source.data[col.gallery.sourceOrder]"
        class="bbn-b bbn-gallery-item-position bbn-lg"/>
</a>
            `,props:{source:{type:[String,Object]}},data(){return{loaded:false,buttonMenuElement:undefined,error:false,}},computed:{col(){return this.closest('gallery-col');},aStyle(){let style={margin:`0 0 ${this.col.gallery.rowGap}px 0`,border:this.isSelected?'5px dotted':(this.col.gallery.isSorting?'5px var(--primary-border) solid':''),};if(!this.col.gallery.zoomable&&!this.hasLink){style.cursor='default';}
return style;},imgStyle(){return{width:this.loaded?'100%':0,height:this.loaded?'':0,margin:0,display:'block',visibility:this.loaded?'visible':'hidden','-webkit-user-drag':!this.col.gallery.isSorting}},isObj(){return bbn.fn.isObject(this.source);},showOverlay(){return this.col.gallery.overlay&&this.isObj&&(this.source.data[this.col.gallery.overlayName]!==undefined);},isSelected(){return this.col.gallery.currentSelected.includes(!!this.col.gallery.uid?this.source.data[this.col.gallery.uid]:this.source.index);},imgSrc(){let src='';if(bbn.fn.isString(this.source.data)){src=this.source.data;}
else{let prop=this.col.gallery.pathName||'thumb'||'content';if(this.source.data[prop]){src=this.source.data[prop];}}
if(src&&bbn.fn.isString(src)){return bbn.fn.escapeUrl(src,'w='+this.col.gallery.currentItemWidth+'&thumb=1');}
return null;},floaterSource(){return{data:bbn.fn.map(this.col.gallery.currentData,d=>{let obj=bbn.fn.extend(true,{},d.data);obj.content=obj[this.col.gallery.pathName];obj.type='img';obj.mode='original';if(!obj[this.col.gallery.sourceInfo]){obj[this.col.gallery.sourceInfo]=obj[this.col.gallery.overlayName];}
return obj;}),info:this.col.gallery.info,sourceInfo:this.col.gallery.sourceInfo,slide:this.source.index,preview:this.col.gallery.preview}},hasLink(){return this.col.gallery.sourceAction&&!!this.source.data[this.col.gallery.sourceAction];}},methods:{isFunction:bbn.fn.isFunction,action(ev){if(this.col.gallery.isSelecting){let id=!!this.col.gallery.uid?this.source.data[this.col.gallery.uid]:this.source.index;if(this.isSelected){this.col.gallery.currentSelected.splice(this.col.gallery.currentSelected.indexOf(id),1);if(!!this.col.gallery.uid){let idx=bbn.fn.search(this.col.gallery.currentSelectedData,this.col.gallery.uid,id);if(idx>-1){this.col.gallery.currentSelectedData.splice(idx,1);}}}
else{this.col.gallery.currentSelected.push(id);if(!!this.col.gallery.uid){this.col.gallery.currentSelectedData.push(this.source.data);}}}
else if(!ev.target.classList.contains('bbn-gallery-button-menu')&&(!ev.target.closest('.bbn-floater-list'))&&this.col.gallery.zoomable){this.col.gallery.floaterSource=this.floaterSource;this.col.gallery.showFloater=true;}
else if(this.hasLink){bbn.fn.link(this.source.data[this.col.gallery.sourceAction]);}
else{this.col.gallery.$emit('clickItem',this.source);}},changeOrder(ev){ev.preventDefault();let sortEvent=new Event('sort',{cancelable:true}),data=ev.detail.from.originalElement.__vue__.source.data,pos=data[this.col.gallery.sourceOrder],posNew=this.source.data[this.col.gallery.sourceOrder];this.col.gallery.$emit('sort',sortEvent,{[data[this.col.gallery.uid]]:posNew,[this.source.data[this.col.gallery.uid]]:pos});if(!sortEvent.defaultPrevented){this.$set(data,this.col.gallery.sourceOrder,posNew);this.source.data[this.col.gallery.sourceOrder]=pos;}}}}}},galleryZoom:{name:'gallery-zoom',template:`
<div class="bbn-overlay bbn-gallery-zoom">
  <bbn-slideshow :source="source.data"
                :show-info="source.info"
                :source-info="source.sourceInfo"
                :arrows="true"
                :show-count="true"
                :full-slide="true"
                :initial-slide="source.slide"
                :preview="source.preview"
                :keyboard="true"/>
</div>
                `,props:{source:{type:[String,Object]}}},gallerySelected:{name:'gallery-selected',template:`
<div class="bbn-rel">
  <i class="bbn-top-right nf nf-fa-close bbn-red bbn-vxspadded bbn-hspadded bbn-lg bbn-p"
     @click="unselect"/>
  <img :src="imgSrc"
       class="bbn-radius bbn-bordered"
       :alt="altSrc">
</div>
        `,props:{source:{type:[String,Number],required:true}},computed:{altSrc(){return bbn.fn.baseName(this.imgSrc);},gallery(){return this.closest('bbn-gallery');},imgSrc(){if(this.gallery){let data={},src='';if(!!this.gallery.uid){data=bbn.fn.getRow(this.gallery.currentSelectedData,this.gallery.uid,this.source);}
if(bbn.fn.isString(data)){src=data;}
else{let prop=this.gallery.pathName||'thumb'||'content';if(data[prop]){src=data[prop];}}
if(src&&bbn.fn.isString(src)){return bbn.fn.escapeUrl(src,'w=70&thumb=1');}}
return null;}},methods:{unselect(){if(this.gallery){this.gallery.currentSelected.splice(this.gallery.currentSelected.indexOf(this.source),1);}}}}}})})(bbn);})(bbn);