((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="['bbn-overlay', componentClass]"
     :style="{
       gridTemplateColumns: columnsCfg,
       gridTemplateRows: rowsCfg,
     }"
     @scroll.prevent.stop="preventScroll"
     v-show="ready && panes.length"
>
  <slot></slot>
  <div v-for="(rs, i) in resizers"
       :class="[
         'bbn-unselectable',
         'bbn-middle',
         'bbn-splitter-bar',
         'bbn-header',
         currentOrientation,
         {'bbn-splitter-resizer': !!rs.pane2},
         realResizerClass(rs)
       ]"
       ref="resizer"
       :style="{
          gridColumn: !isVertical ? rs.position : 1,
          gridRow: isVertical ? rs.position : 1,
          minWidth: resizerSize + 'px',
          minHeight: resizerSize + 'px'
        }"
       @mousedown.prevent.stop="resizeStart($event, rs)"
       @touchstart.prevent.stop="resizeStart($event, rs)"
  >
    <div v-if="areCollapsible(rs.panec1, rs.panec2)"
         class="bbn-splitter-collapser"
         :style="{fontSize: (resizerSize * 1.2) + 'px'}">
      <div v-if="isCollapsiblePrev(rs.panec1, rs.panec2)"
           @click.stop="collapse(rs.panec1, rs.panec2)"
           :class="['bbn-p', 'bbn-c', {
             'bbn-w-100': !isVertical,
             'bbn-h-100': isVertical
           }]">
        <i :class="{
           'nf nf-fa-angle_left': !isVertical,
           'nf nf-fa-angle_up': isVertical
         }">
        </i>
      </div>
      <div v-if="isCollapsibleNext(rs.panec1, rs.panec2)"
           @click.stop="collapse(rs.panec2, rs.panec1)"
           :class="['bbn-p', 'bbn-c', {
             'bbn-w-100': !isVertical,
             'bbn-h-100': isVertical
           }]">
        <i :class="['bbn-p', {
             'nf nf-fa-angle_right': !isVertical,
             'nf nf-fa-angle_down': isVertical
           }]">
        </i>
      </div>
      <div v-if="isFullyCollapsiblePrev(rs.panec1, rs.panec2, i)"
           @click.stop="collapse(rs.panec1, rs.panec2, true)"
           :class="['bbn-p', 'bbn-c', {
             'bbn-w-100': !isVertical,
             'bbn-h-100': isVertical,
           }]">
        <i :class="['bbn-p', {
             'nf nf-fa-angle_double_left': !isVertical,
             'nf nf-fa-angle_double_up': isVertical
           }]">
        </i>
      </div>
      <div v-if="isFullyCollapsibleNext(rs.panec1, rs.panec2, i)"
           @click.stop="collapse(rs.panec2, rs.panec1, true)"
           :class="['bbn-p', 'bbn-c', {
             'bbn-w-100': !isVertical,
             'bbn-h-100': isVertical
           }]">
        <i :class="['bbn-p', {
             'nf nf-fa-angle_double_right': !isVertical,
             'nf nf-fa-angle_double_down': isVertical
           }]">
        </i>
      </div>
      <!--i v-if="panes[rs.panec1] &&
                    panes[rs.panec1].collapsible &&
                    !panes[rs.panec1].collapsed && (
                      panes[rs.panec2] &&
                      panes[rs.panec2].collapsed
                    ) &&
                    !panes[rs.panec1].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_double_left': currentOrientation === 'horizontal',
           'nf nf-fa-angle_double_top': currentOrientation === 'vertical'
         }"
         @click="collapse(rs.panec1, rs.panec2, true)">
      </i>
      <i v-else-if="panes[rs.panec1] &&
                    panes[rs.panec1].collapsible && (
                      panes[rs.panec2] &&
                      panes[rs.panec2].collapsed
                    ) &&
                    panes[rs.panec1].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_double_right': currentOrientation === 'horizontal',
           'nf nf-fa-angle_double_bottom': currentOrientation === 'vertical'
         }"
         @click="collapse(rs.panec2, rs.panec1, true)">
      </i>
      
      <i v-if="rs[i-1].position === panes[rs.panec2] &&
               panes[rs.panec2].collapsible && (
                 !panes[rs.panec1] ||
                 !panes[rs.panec1].collapsed
               ) &&
               !panes[rs.panec2].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_right': currentOrientation === 'horizontal',
           'nf nf-fa-angle_bottom': currentOrientation === 'vertical'
         }"
         @click="collapse(rs.panec2, rs.panec1)">
      </i>
      <i v-else-if="panes[rs.panec2] &&
               panes[rs.panec2].collapsible && (
                 !panes[rs.panec1] ||
                 !panes[rs.panec1].collapsed
               ) &&
               panes[rs.panec2].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_left': currentOrientation === 'horizontal',
           'nf nf-fa-angle_top': currentOrientation === 'vertical'
         }"
         @click="collapse(rs.panec1, rs.panec2)">
      </i>
      <i v-else-if="panes[rs.panec2] &&
               panes[rs.panec2].collapsible && (
                 panes[rs.panec1] &&
                 panes[rs.panec1].collapsed
               ) &&
               !panes[rs.panec2].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_double_right': currentOrientation === 'horizontal',
           'nf nf-fa-angle_double_bottom': currentOrientation === 'vertical'
         }"
         @click="collapse(rs.panec1, rs.panec2, true)">
      </i>
      <i v-else-if="panes[rs.panec2] &&
               panes[rs.panec2].collapsible && (
                 panes[rs.panec1] &&
                 panes[rs.panec1].collapsed
               ) &&
               panes[rs.panec2].collapsed"
         :class="{
           'bbn-p': true,
           'nf nf-fa-angle_double_left': currentOrientation === 'horizontal',
           'nf nf-fa-angle_double_top': currentOrientation === 'vertical'
         }"
         @click="collapse(i, rs.panec2, true);">
      </i-->
    </div>
  </div>
</div>`;script.setAttribute('id','bbn-tpl-component-splitter2');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn){"use strict";Vue.component('bbn-splitter2',{mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent],props:{orientation:{type:String,default:'auto'},resizable:{type:Boolean,default:false},collapsible:{type:Boolean,default:false},scrollable:{type:Boolean,default:false},resizerSize:{type:Number,default:15},resizerClass:{type:[String,Function]},minPaneSize:{type:Number,default:40}},data(){return{initTimeout:0,isResized:false,isResizing:false,resizeCfg:null,resizers:[],currentOrientation:this.orientation,panes:[],formattedCfg:''};},computed:{isResizable(){return(this.resizable||this.collapsible)&&(bbn.fn.count(this.panes,{resizable:true})>=2)},columnsCfg(){return this.panes.length&&!this.isVertical&&this.availableSize?this.formattedCfg:'auto';},rowsCfg(){return this.panes.length&&this.isVertical&&this.availableSize?this.formattedCfg:'auto';},currentAxis(){return this.isVertical?'y':'x'},currentSizeType(){return this.isVertical?'Height':'Width';},currentOffsetType(){return this.isVertical?'top':'left';},currentSize(){return this['lastKnown'+this.currentSizeType];},availableSize(){let availableSize=this.currentSize;bbn.fn.each(this.resizers,()=>{availableSize-=this.resizerSize;});return availableSize;},isVertical(){return this.currentOrientation==='vertical';}},methods:{setFormatted(){this.formattedCfg=this.getFormatted();},getFormatted(){let pos=1,lastVisibleResizer=false;return this.panes.map((a)=>{let diff=a.currentDiff+a.savedDiff+a.tmpDiff,sz='';while(a.position>pos){sz+=lastVisibleResizer?'0 ':this.resizerSize+'px ';lastVisibleResizer=true;pos++;}
if(a.collapsed){sz+='0 ';}
else{lastVisibleResizer=false;if(a.addedSize&&(a.addedSize==='auto')){sz+='auto';}
else if(a.size){if(a.addedSize||diff){sz+='calc(';sz+=a.size+(a.isNumber||bbn.fn.isNumber(a.size)?'px':'');if(diff){sz+=' + '+diff+'px';}
if(a.addedSize){sz+=' + '+(bbn.fn.isNumber(a.addedSize)?a.addedSize+'px':a.addedSize);}
sz+=')';}
else if(a.size){sz+=a.size+(a.isNumber||bbn.fn.isNumber(a.size)?'px':'');}}
else{sz+='auto';}}
pos++;return sz;}).join(' ');},realResizerClass(resizer){if(bbn.fn.isFunction(this.resizerClass)){return this.resizerClass(resizer);}
return this.resizerClass||'';},getOrientation(){return this.lastKnownCtWidth>this.lastKnownCtHeight?'horizontal':'vertical';},onResize(){if(!this.isResizing){this.isResizing=true;if(this.orientation==='auto'){let o=this.getOrientation();if(o!==this.currentOrientation){this.currentOrientation=o;}}
let w=this.$el.style.width;let h=this.$el.style.height;this.$el.style.width='100%';this.$el.style.height='100%';setTimeout(()=>{this.$el.style.width=w;this.$el.style.height=h;this.isResizing=false;},100)}},updatePositions(){},getNextResizable(idx,arr){for(let i=idx+1;i<arr.length;i++){if(arr[i].resizable){return i;}}
return false;},getPrevResizable(idx,arr){for(let i=idx-1;i>=0;i--){if(arr[i].resizable){return i;}}
return false;},getNextCollapsible(idx,arr){for(let i=idx+1;i<arr.length;i++){if(arr[i].collapsible){return i;}}
return false;},getPrevCollapsible(idx,arr){for(let i=idx-1;i>=0;i--){if(arr[i].collapsible){return i;}}
return false;},init(){clearTimeout(this.initTimeout);this.initTimeout=setTimeout(()=>{this.panes.splice(0,this.panes.length);let currentPosition=1,tmp=[];this.$children.forEach((pane,i)=>{if(pane.$vnode.componentOptions.tag==='bbn-pane2'){let isRelative=false,isPercent=false,isFixed=false,isNumber=false,unit='',props=JSON.parse(JSON.stringify(pane.$vnode.componentOptions.propsData)),resizable=(this.resizable||props.resizable)&&(props.resizable!==false),collapsible=(this.collapsible||props.collapsible)&&(props.collapsible!==false),value=parseInt(props.size)||0;if(props.size){isFixed=true;if(props.size==='auto'){isRelative=true;props.size=false;}
else if(bbn.fn.isString(props.size)){if(props.size.substr(-1)==='%'){isPercent=true;isRelative=true;unit='%';}
else{switch(props.size.substr(-2)){case'px':isNumber=true;props.size=parseInt(props.size);unit='px';break;case'fr':case'em':isRelative=true;unit=props.size.substr(-2);break;}}}
else if(bbn.fn.isNumber(props.size)){isNumber=true;unit='px';}}
else{isRelative=true;}
tmp.push(bbn.fn.extend({index:i,value:value,currentDiff:0,savedDiff:0,addedSize:'',tmpDiff:0,collapsed:false,isRelative:isRelative,isPercent:isPercent,isFixed:isFixed,isNumber:isNumber,unit:unit,resizable:resizable,collapsible:collapsible,isResizable:collapsible||resizable,pane:pane,originalSize:pane.originalSize,formattedSize:0,resized:false},props));}});let isResizable=bbn.fn.count(tmp,{isResizable:true})>=2,hasPanes=tmp.length>1;this.resizers.splice(0,this.resizers.length);tmp.forEach((pane,idx)=>{let prev,next,prevc,nextc;if(hasPanes&&isResizable&&pane.isResizable){prev=this.getPrevResizable(idx,tmp);next=this.getNextResizable(idx,tmp);prevc=this.getPrevCollapsible(idx,tmp);nextc=this.getNextCollapsible(idx,tmp);if((prev!==false)||(prevc!==false)){let o={position:currentPosition,panec1:false,panec2:false,pane1:false,pane2:false};if(pane.resizable&&(prev!==false)){o.pane1=prev;o.pane2=idx;}
if(pane.collapsible&&(prevc!==false)){o.panec1=prevc;o.panec2=idx;}
this.resizers.push(o);currentPosition++;}}
pane.position=currentPosition;this.panes.push(pane);currentPosition++;if(hasPanes&&isResizable&&pane.isResizable){let o={position:currentPosition,panec1:false,panec2:false,pane1:false,pane2:false};if(((prev===false)&&next&&!tmp[idx+1].resizable)||((prevc===false)&&nextc&&!tmp[idx+1].collapsible)){if(pane.resizable&&(prev===false)&&next&&!tmp[idx+1].resizable){o.pane1=idx;o.pane2=next;}
if(pane.collapsible&&(prevc===false)&&nextc&&!tmp[idx+1].collapsible){o.panec1=idx;o.panec2=nextc;}}
if(o.panec2||o.pane2){this.resizers.push(o);currentPosition++;}}});this.$forceUpdate();this.ready=true;this.selfEmit(true);this.$nextTick(()=>{bbn.fn.each(this.panes,p=>{let cr=p.pane.$el.getBoundingClientRect();p.formattedSize=parseInt(this.isVertical?cr.height:cr.width)+'px';});})},200);},areCollapsible(idxPane1,idxPane2){return this.panes[idxPane1]&&this.panes[idxPane2]&&(this.panes[idxPane1].collapsible||this.panes[idxPane2].collapsible);},isCollapsiblePrev(idxPane1,idxPane2){return this.panes[idxPane2].collapsed||(!this.panes[idxPane1].collapsed&&((idxPane2===(this.panes.length-1))||!this.panes[idxPane2].collapsed))},isCollapsibleNext(idxPane1,idxPane2){return this.panes[idxPane1].collapsed||(!this.panes[idxPane2].collapsed&&((idxPane1===0)||!this.panes[idxPane2].collapsed))},isFullyCollapsiblePrev(idxPane1,idxPane2,idxResizer){return this.panes[idxPane2].collapsed&&(((idxPane2===(this.panes.length-1))&&(idxResizer===(this.resizers.length-1)))||(idxPane1===(idxPane2-1))||this.panes[idxPane1+1].collapsible)},isFullyCollapsibleNext(idxPane1,idxPane2,idxResizer){return this.panes[idxPane1].collapsed&&(((idxPane1===0)&&(idxResizer===0))||(idxPane1===(idxPane2-1))||(this.panes[idxPane2-1].collapsible))},resizeDrag(e){if(this.isResizing&&this.resizeCfg&&this.resizeCfg.panes){e.preventDefault();e.stopImmediatePropagation();let diff=(e['client'+this.currentAxis.toUpperCase()]||event.touches[0]['page'+this.currentAxis.toUpperCase()])-this.resizeCfg[this.currentOffsetType];if(diff>=this.resizeCfg.max){diff=this.resizeCfg.max;}
else if(diff<=this.resizeCfg.min){diff=this.resizeCfg.min;}
this.panes[this.resizeCfg.resizer.pane1].currentDiff=diff;this.panes[this.resizeCfg.resizer.pane2].currentDiff=-diff;this.panes[this.resizeCfg.resizer.pane1].isFixed=true;this.panes[this.resizeCfg.resizer.pane2].isFixed=true;this.panes[this.resizeCfg.resizer.pane1].isRelative=false;this.panes[this.resizeCfg.resizer.pane2].isRelative=false;this.panes[this.resizeCfg.resizer.pane1].resized=true;this.panes[this.resizeCfg.resizer.pane2].resized=true;this.setFormatted();}},resizeEnd(e){if(this.isResizing&&this.resizeCfg&&this.resizeCfg.panes){let diff=(e['client'+this.currentAxis.toUpperCase()]||event.touches[0]['page'+this.currentAxis.toUpperCase()])-this.resizeCfg[this.currentOffsetType];if(diff>=this.resizeCfg.max){diff=this.resizeCfg.max;}
else if(diff<=this.resizeCfg.min){diff=this.resizeCfg.min;}
this.panes[this.resizeCfg.resizer.pane1].currentDiff=0;this.panes[this.resizeCfg.resizer.pane2].currentDiff=0;this.panes[this.resizeCfg.resizer.pane1].savedDiff=this.panes[this.resizeCfg.resizer.pane1].savedDiff+diff;this.panes[this.resizeCfg.resizer.pane2].savedDiff=this.panes[this.resizeCfg.resizer.pane2].savedDiff-diff;this.isResizing=false;document.body.removeEventListener("touchmove",this.resizeDrag);document.body.removeEventListener("mousemove",this.resizeDrag);document.body.removeEventListener("touchend",this.resizeEnd);document.body.removeEventListener("touchcancel",this.resizeEnd);document.body.removeEventListener("mouseup",this.resizeEnd);document.body.removeEventListener("mouseleave",this.resizeEnd);this.panes[this.resizeCfg.resizer.pane1].pane.selfEmit(true);this.panes[this.resizeCfg.resizer.pane2].pane.selfEmit(true);this.resizeCfg=null;this.setFormatted();}},testMove(){bbn.fn.info("MOVE")},preventScroll(){this.$el.scrollLeft=0;this.$el.scrollTop=0;},resizeStart(e,rs){if(this.isResizable&&!this.isResizing&&this.panes[rs.pane1]&&this.panes[rs.pane1].pane&&!this.panes[rs.pane1].collapsed&&this.panes[rs.pane2]&&this.panes[rs.pane2].pane&&!this.panes[rs.pane2].collapsed){this.isResizing=true;document.body.addEventListener("touchmove",this.resizeDrag);document.body.addEventListener("mousemove",this.resizeDrag);document.body.addEventListener("touchend",this.resizeEnd);document.body.addEventListener("touchcancel",this.resizeEnd);document.body.addEventListener("mouseup",this.resizeEnd);document.body.addEventListener("mouseleave",this.resizeEnd);let vue1=this.panes[rs.pane1].pane,vue2=this.panes[rs.pane2].pane,pos=e.target.getBoundingClientRect(),pos1=vue1.$el.getBoundingClientRect(),pos2=vue2.$el.getBoundingClientRect(),min=-pos1[this.currentSizeType.toLowerCase()]+vue1.min,max=pos2[this.currentSizeType.toLowerCase()]-vue2.min;if(!this.panes[rs.pane1].size&&!this.panes[rs.pane2].size){let s1=this.isVertical?pos1.height:pos1.width,s2=this.isVertical?pos2.height:pos2.width;s1=s1<vue1.min?vue1.min:(s1>vue1.max?vue1.max:s1);s2=s2<vue2.min?vue2.min:(s2>vue2.max?vue2.max:s2);this.$set(this.panes[rs.pane1],"size",s1);this.$set(this.panes[rs.pane2],"size",s2);this.setFormatted();this.$forceUpdate();}
this.resizeCfg={resizer:rs,panes:[vue1,vue2],min:min,max:max};this.resizeCfg[this.currentOffsetType]=pos[this.currentOffsetType];bbn.fn.log("START",this.resizeCfg,e,"------------");}},collapse(toCollapse,toUpdate,full){if(this.collapsible&&this.panes[toCollapse]&&this.panes[toUpdate]){let collapsing=!this.panes[toCollapse].collapsed,smaller=collapsing?toCollapse:toUpdate,bigger=collapsing?toUpdate:toCollapse,diff1=this.panes[smaller].savedDiff,diff2=this.panes[bigger].savedDiff;if(!full&&(this.panes[toCollapse].collapsed||this.panes[toUpdate].collapsed)){this.panes[smaller].addedSize='';this.panes[bigger].addedSize='';this.panes[smaller].tmpDiff=0;this.panes[bigger].tmpDiff=0;this.panes[smaller].collapsed=false;this.panes[smaller].pane.isCollapsed=false;this.panes[bigger].collapsed=false;this.panes[bigger].pane.isCollapsed=false;}
else if(full&&(this.panes[toUpdate].collapsed===collapsing)){this.panes[bigger].tmpDiff=diff1-this.resizerSize;this.panes[smaller].tmpDiff=0;if(this.panes[smaller].size){this.panes[bigger].addedSize=this.panes[smaller].size}
this.panes[bigger].collapsed=false;this.panes[smaller].collapsed=true;this.panes[bigger].pane.isCollapsed=false;this.panes[smaller].pane.isCollapsed=true;}
else{if(this.panes[toCollapse].size&&this.panes[toUpdate].size){this.panes[bigger].addedSize=this.panes[smaller].size;}
else{this.panes[bigger].addedSize='auto';}
this.panes[bigger].tmpDiff=diff1-this.resizerSize;this.panes[smaller].tmpDiff=0;this.panes[toCollapse].collapsed=collapsing;this.panes[toCollapse].pane.isCollapsed=collapsing;}
this.setFormatted();this.$nextTick(()=>{this.selfEmit();});}},hasExpander(paneIdx,resizerIdx){return false;let pane=this.panes[paneIdx],paneBefore=this.panes[paneIdx+1];if(this.collapsible&&(pane.collapsible!==false)&&paneBefore&&(paneBefore.collapsible!==false)&&(paneBefore.resizable!==false)){return true;}
return false;},expanderClass(paneIdx,resizerIdx){return'';},setSize(size,idx){if((idx!==undefined)&&(size!==undefined)){if(bbn.fn.isVue(idx)){bbn.fn.each(this.panes,p=>{if(p.pane&&(p.pane===idx)){idx=p.index;return;}})}
if(bbn.fn.isNumber(idx)&&(idx>-1)){if(bbn.fn.isNumber(size)){if(size<this.panes[idx].pane.min){size=this.panes[idx].pane.min;}
if(size>this.panes[idx].pane.max){size=this.panes[idx].pane.max;}
size=size+'px';}
this.panes[idx].size=size;this.panes[idx].savedDiff=0;this.panes[idx].isFixed=true;this.setFormatted();}}},},mounted(){if(this.currentOrientation==='auto'){this.currentOrientation=this.getOrientation();this.$forceUpdate();}},updated(){},watch:{orientation(newVal,oldVal){if((newVal!==oldVal)&&(newVal!==this.currentOrientation)){this.currentOrientation=newVal==='auto'?this.getOrientation():newVal;}},currentOrientation(){this.init();},isResized(){},panes(){this.setFormatted();},},});})(bbn);})(bbn);