((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-flex-width', 'bbn-vmiddle']"
     :style="(currentSize !== '') ? 'width:' + currentSize : '' ">
  <input :value="value"
         type="range"
         :name="name"
         ref="element"
         :readonly="readonly"
         :disabled="disabled"
         :required="required"
         :min="min"
         :max="max"
         @input="emitInput(parseInt($refs.element.value))"
         @click="click"
         @focus="focus"
         @blur="blur"
         @change="change"
         @keydown="keydown"
         @keyup="keyup"
         @mouseenter="over"
         @mouseleave="out"
         :tabindex="tabindex"
         :size="currentInputSize"
         class="bbn-range-input bbn-radius bbn-flex-fill">
  <i class="nf nf-mdi-backup_restore bbn-p bbn-m bbn-left-xsspace"
     @click="reset"
     :title="_('Reset')"/>
</span>`;script.setAttribute('id','bbn-tpl-component-range');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn,Vue){"use strict";Vue.component("bbn-range",{name:'bbn-range',mixins:[bbn.vue.basicComponent,bbn.vue.eventsComponent,bbn.vue.inputComponent],props:{min:{type:Number,default:1},max:{type:Number,default:100}},data(){return{currentSize:this.size||'',originalValue:this.value}},computed:{currentInputSize(){return this.autosize?(this.value?this.value.toString().length:1):0}},methods:{reset(){if(!this.disabled&&!this.readonly){this.emitInput(this.originalValue)}}},mounted(){this.ready=true;}});})(bbn,Vue);})(bbn);