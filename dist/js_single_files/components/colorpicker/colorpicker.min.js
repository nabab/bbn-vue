((bbn)=>{let script_dep=document.createElement('script');script_dep.setAttribute('src','https://cdn.jsdelivr.net/combine/gh/jaames/iro.js@5.0.0/dist/iro.js');script_dep.onload=()=>{let script=document.createElement('script');script.innerHTML=`<span :class="['bbn-iblock', componentClass, {'bbn-disabled': !!isDisabled}]">
  <input :value="value"
         class="bbn-colorpicker-input-hidden"
         :name="name"
         ref="element"
         :disabled="isDisabled"
         :readonly="readonly"
         :required="required"
         @click="click($event)"
         @focus="focus($event)"
         @blur="blur($event)"
         @keydown="keydown($event)"
         @keyup="keyup($event)"
  >
  <div :class="['bbn-textbox', 'bbn-colorpicker-input', {'bbn-disabled': !!isDisabled}]">
    <div :class="['bbn-flex-width', 'bbn-radius', {'bbn-p': !isDisabled && !readonly}]"
         @click="openCloseFloater"
    >
      <div class="bbn-flex-fill bbn-right-xsspace bbn-radius bbn-colorpicker-input-color bbn-middle bbn-bordered"
           :style="{backgroundColor: value || ''}"
      >
        <i v-if="!value"
           class="nf nf-fae-thin_close bbn-s bbn-red"
        ></i>
      </div>
      <div class="bbn-colorpicker-icon">
        <i :class="{'nf nf-fa-caret_down': !readonly, 'nf nf-fa-lock': !!readonly}"></i>
      </div>
    </div>
  </div>
  <bbn-floater :scrollable="false"
               :element="$el"
               hpos="right"
               :auto-hide="200"
               v-if="!!showFloater && !isDisabled && !readonly"
               ref="floater"
               @close="showFloater = false"
               @hook:mounted="init"
               height="24em"
               width="45em"
               :min-width="450"
               :min-height="300"
  >
    <bbn-splitter orientation="horizontal">
      <bbn-pane>
        <div class="bbn-overlay bbn-middle">
          <div class="bbn-colorpicker-picker"
               ref="picker"
               @dblclick.prevent.stop=""
          ></div>
          <bbn-scroll v-if="showPalette || onlyPalette" class="bbn-background">
            <div class="bbn-c bbn-vsmargin">
              <div v-for="p in palette"
                   class="bbn-iblock bbn-colorpicker-palette bbn-bordered bbn-smargin bbn-p"
                   :style="{backgroundColor: p}"
                   @click="setColor(p)"
              ></div>
            </div>
          </bbn-scroll>
        </div>
      </bbn-pane>
      <bbn-pane>
        <div class="bbn-overlay bbn-middle">
          <div class="bbn-colorpicker-details">
            <div class="bbn-colorpicker-preview bbn-bottom-space bbn-box bbn-middle"
                 :style="{backgroundColor: currentValue}"
            >
              <i v-if="!currentValue"
                 class="nf nf-fae-thin_close bbn-red"
              ></i>
            </div>
            <div v-if="showCodes"
                 class="bbn-colorpicker-details-inputs bbn-grid bbn-bottom-space"
            >
              <span class="bbn-vmiddle">HEX</span>
              <span class="bbn-vmiddle">
                <i class="nf nf-fa-long_arrow_right"></i>
              </span>
              <div>
                <bbn-input :value="currentHex"
                           @change="fromInput"
                ></bbn-input>
              </div>
              <span class="bbn-vmiddle">RGB</span>
              <span class="bbn-vmiddle">
                <i class="nf nf-fa-long_arrow_right"></i>
              </span>
              <div>
                <bbn-input :value="currentRgb"
                           @change="fromInput"
                ></bbn-input>
              </div>
              <span class="bbn-vmiddle">RGBA</span>
              <span class="bbn-vmiddle">
                <i class="nf nf-fa-long_arrow_right"></i>
              </span>
              <div>
                <bbn-input :value="currentRgba"
                           @change="fromInput"
                ></bbn-input>
              </div>
              <span class="bbn-vmiddle">HSL</span>
              <span class="bbn-vmiddle">
                <i class="nf nf-fa-long_arrow_right"></i>
              </span>
              <div>
                <bbn-input :value="currentHsl"
                           @change="fromInput"
                ></bbn-input>
              </div>
            </div>
            <div class="bbn-flex-width">
              <div v-if="palette.length">
                <bbn-button :icon="!showPalette ? 'nf nf-fae-palette_color' : 'nf nf-fa-adjust'"
                            :notext="true"
                            :text="!showPalette ? _('Show palette') : _('Close palette')"
                            @click="showPalette = !showPalette"
                            v-if="!onlyPalette"
                ></bbn-button>
              </div>
              <div class="bbn-flex-fill bbn-r">
                <bbn-button icon="nf nf-fa-close"
                            :notext="true"
                            :text="_('Close')"
                            @click="showFloater = false"
                ></bbn-button>
                <bbn-button icon="nf nf-oct-diff_ignored"
                            :notext="true"
                            :text="_('Empty')"
                            @click="empty"
                            v-if="emptyButton"
                ></bbn-button>
                <bbn-button icon="nf nf-fa-check"
                            :notext="true"
                            :text="_('Save')"
                            @click="save"
                ></bbn-button>
              </div>
            </div>
          </div>
        </div>
      </bbn-pane>
    </bbn-splitter>
  </bbn-floater>
</span>
`;script.setAttribute('id','bbn-tpl-component-colorpicker');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(bbn=>{"use strict";Vue.component('bbn-colorpicker',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent,bbn.vue.resizerComponent],props:{value:{type:String,},wheel:{type:Boolean,default:true},slider:{tyoe:Boolean,default:false},brightness:{type:Boolean,default:true},saturation:{type:Boolean,default:true},onlyPalette:{type:Boolean,default:false},color:{type:String,default:'#FDFDFD'},showCodes:{type:Boolean,default:true},palette:{type:Array,default(){return bbn.var.colors?Object.values(bbn.var.colors):[]}},emptyButton:{type:Boolean,default:true},codeColor:{type:String,default:"hex",validator:c=>['hex','rgb','rgba','hsl'].includes(c)}},data(){return{widget:false,showFloater:false,showPalette:this.onlyPalette,currentValue:this.value,currentHex:'',currentRgb:'',currentRgba:'',currentHsl:'',initTimeout:false}},computed:{currentCfg(){let obj={handleRadius:6,color:this.value||this.color,layout:[]};if(this.wheel&&!this.slider&&!this.onlyPalette){obj.layout.push({component:iro.ui.Wheel});}
else if(!this.onlyPalette){obj.layout.push({component:iro.ui.Slider,options:{sliderType:'hue'}});}
if(this.brightness&&!this.onlyPalette){obj.layout.push({component:iro.ui.Slider});}
if(this.saturation&&!this.onlyPalette){obj.layout.push({component:iro.ui.Slider,options:{sliderType:'saturation'}});}
return obj;}},methods:{onResize(){this.$nextTick(()=>{this.init();})},init(){if(this.widget){this.destroy();}
clearTimeout(this.initTimeout);this.initTimeout=setTimeout(()=>{let el=this.getRef('picker');if(el){let parent=el.offsetParent;let width;if(parent){width=parent.getBoundingClientRect().width-100;}
else{width=400;}
this.widget=new iro.ColorPicker(el,bbn.fn.extend(true,{width:width},this.currentCfg));this.setEvents();}},300);},setCurrents(color){if(bbn.fn.isObject(color)){this.currentHex=color.hexString;this.currentRgb=color.rgbString;this.currentRgba=color.rgbaString;this.currentHsl=color.hslString;switch(this.codeColor){case'hex':this.currentValue=this.currentHex;break;case'rgb':this.currentValue=this.currentRgb;break;case'rgba':this.currentValue=this.currentRgba;break;case'hsl':this.currentValue=this.currentHsl;break;}}
else{this.currentHex='';this.currentRgb='';this.currentRgba='';this.currentHsl='';this.currentValue='';}},setEvents(){this.widget.on('mount',cp=>{if(this.value){this.setCurrents(cp.color);}
cp.on('color:change',color=>{this.setCurrents(color);})});},unsetEvents(){if(this.widget){this.widget.off('color:change');}},destroy(){if(this.widget){this.unsetEvents();this.widget.base.remove();this.widget=false;}},empty(){this.setCurrents();},save(){if(this.value!==this.currentValue){this.emitInput(this.currentValue||(this.nullable?null:''));this.$emit('change',this.currentValue);}
this.showFloater=false},setColor(color){this.widget.color.set(color);},fromInput(event){this.setColor(event.target.value);},openCloseFloater(){if(this.showFloater){this.showFloater=false;}
else if(!this.isDisabled&&!this.readonly){this.showFloater=true;}}},mounted(){this.ready=true;},beforeDestroy(){this.destroy();}});})(bbn);};document.head.insertAdjacentElement("beforeend",script_dep);})(bbn);