((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, 'bbn-textbox', {'bbn-input-nullable': isNullable}]">
  <bbn-button v-if="buttonPosition === 'left'"
              icon="nf nf-fa-calendar"
              @click="isOpened = !isOpened"
              :disabled="disabled || readonly"
              tabindex="-1"
              class="bbn-button-left bbn-no-vborder"/>
  <bbn-masked ref="element"
              :disabled="disabled"
              :readonly="readonly"
              :required="required"
              :mask="currentMask"
              @hook:mounted="maskedMounted = true"
              @blur="inputChanged"
              @keydown.enter="inputChanged"
              v-model="inputValue"
              class="bbn-flex-fill"
              :autosize="autosize"
              :inputmode="inputmode"/>
  <div v-if="isNullable && !readonly && !disabled"
       class="bbn-block bbn-h-100 bbn-input-nullable-container">
    <i v-if="hasValue"
       class="nf nf-fa-times_circle bbn-p"
       @mousedown.prevent.stop="clear"/>
  </div>
  <bbn-button v-if="buttonPosition === 'right'"
              icon="nf nf-fa-calendar"
              @click="isOpened = !isOpened"
              :disabled="disabled || readonly"
              tabindex="-1"
              class="bbn-button-right bbn-no-vborder"/>
  <bbn-floater v-if="isOpened && !disabled && !readonly"
               :element="$el"
               ref="floater"
               :auto-hide="1000"
               @close="isOpened = false"
               :element-width="false">
    <bbn-calendar :arrows-buttons="false"
                  @selected="setDate"
                  :value="value ? value.toString() : ''"
                  :selection="true"
                  :auto-selection="true"
                  :type="type"
                  ref="calendar"
                  :date="value ? value.toString() : ''"
                  :min="min"
                  :max="max"
                  :extra-items="true"
                  :disable-dates="disableDates"
                  :items-range="datesRange"
                  :source="source"
                  :onlyEvents="onlyEvents"/>
  </bbn-floater>
</div>
`;script.setAttribute('id','bbn-tpl-component-datepicker');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn){"use strict";Vue.component('bbn-datepicker',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{source:{type:[String,Array],default(){return[];}},format:{type:String},valueFormat:{type:[String,Function]},mask:{type:String},max:{type:String},min:{type:String},type:{type:String,default:'days',validator:(m)=>['days','weeks','months','years'].includes(m)},disableDates:{type:[Array,Function]},datesRange:{type:Array,default(){return[];}},autosize:{type:Boolean,default:true},onlyEvents:{type:Boolean,default:false},buttonPosition:{type:String,default:'right',validator:pos=>['right','left'].includes(pos)}},data(){return{isOpened:false,maskedMounted:false,inputValue:'',oldInputValue:''}},computed:{currentMask(){if(this.mask){return this.mask;}
switch(this.type){case'months':return'00/0000';case'years':return'0000';}
return'00/00/0000';},currentValueFormat(){if(this.valueFormat){return this.valueFormat;}
switch(this.type){case'months':return'YYYY-MM';case'years':return'YYYY';}
return'YYYY-MM-DD';},currentFormat(){if(this.format){return this.format;}
switch(this.type){case'months':return'MM/YYYY';case'years':return'YYYY';}
return'DD/MM/YYYY';},inputValueChanged(){return this.inputValue!==this.oldInputValue;}},methods:{getValueFormat(val){return bbn.fn.isFunction(this.valueFormat)?this.valueFormat(val):this.currentValueFormat;},setDate(val){this.setValue(dayjs(val,this.getValueFormat(val)).isValid()?dayjs(val,this.getValueFormat(val)).format(this.getValueFormat(val)):'');},setValue(val){let format=!!val?this.getValueFormat(val.toString()):false,value=format?(dayjs(val.toString(),format).isValid()?dayjs(val.toString(),format).format(format):''):'';if(value){if(this.min&&(value<this.min)){value=this.min;}
if(this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){value=this.nullable?null:'';}}
else if(this.nullable){value=null;}
if(value!==this.value){this.emitInput(value);}
else{this.setInputValue(value);}
if(!value){this.inputValue='';this.oldInputValue='';}
this.isOpened=false;},updateCalendar(){if(this.getRef('calendar')){this.getRef('calendar').refresh();}},inputChanged(){let mask=this.getRef('element'),newVal=mask.inputValue,value=!!newVal?dayjs(newVal,this.currentFormat).format(this.getValueFormat(newVal)):'';if(mask.raw(newVal)!==this.oldInputValue){if(value&&this.min&&(value<this.min)){value=this.min;}
if(value&&this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){this.setValue(false);}
else{this.setValue(value);this.$nextTick(()=>{if(this.value!==value){this.$emit('change',value);}});}}},setInputValue(newVal){if(newVal){let mask=this.getRef('element'),mom=dayjs(newVal.toString(),this.getValueFormat(newVal.toString()));this.inputValue=newVal&&mask&&mom.isValid()?mask.raw(mom.format(this.currentFormat)):'';}
else{this.inputValue='';}
this.oldInputValue=this.inputValue;this.updateCalendar();},clear(){this.setValue('');this.$nextTick(()=>{this.$set(this.getRef('element'),'inputValue','');})}},beforeCreate(){if(bbn.env&&bbn.env.lang&&(bbn.env.lang!==dayjs.locale())){dayjs.locale(bbn.env.lang);}},mounted(){this.ready=true;},watch:{min(){this.setValue(this.value||'');this.updateCalendar();},max(){this.setValue(this.value||'');this.updateCalendar();},valueFormat(){this.setValue(this.value||'');},maskedMounted(newVal){if(newVal){this.setInputValue(this.value);}},value(newVal){this.setInputValue(newVal);}}});})(bbn);})(bbn);