((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-textbox', {'bbn-input-nullable': isNullable}]">
  <bbn-masked v-model="inputValue"
              ref="element"
              :disabled="isDisabled"
              :readonly="readonly"
              :required="required"
              :mask="currentMask"
              @hook:mounted="maskedMounted = true"
              @blur="inputChanged"
              @keydown.enter="inputChanged"
              class="bbn-flex-fill"
              :autosize="autosize"
              :inputmode="inputmode"
              :placeholder="placeholder"/>
  <div v-if="isNullable && !readonly && !isDisabled"
       class="bbn-block bbn-h-100 bbn-input-nullable-container">
    <i v-if="hasValue" class="nf nf-fa-times_circle bbn-p"
       @mousedown.prevent.stop="clear"/>
  </div>
  <bbn-button icon="nf nf-fa-clock_o"
              @click="isOpened = !isOpened"
              :disabled="isDisabled || readonly"
              tabindex="-1"
              class="bbn-button-right bbn-no-vborder"/>
  <bbn-floater v-if="isOpened && !isDisabled && !readonly"
               :element="$el"
               ref="floater"
               @close="isOpened = false"
               :scrollable="false"
               :auto-hide="1000"
               :element-width="false"
               max-width="15rem"
               min-width="10rem">
    <bbn-timewheel @change="setValue"
                   :show-second="showSecond"
                   :value="value"
                   @cancel="isOpened = false"
                   :format="currentValueFormat"/>
  </bbn-floater>
</span>
`;script.setAttribute('id','bbn-tpl-component-timepicker');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn){"use strict";Vue.component('bbn-timepicker',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{mode:{type:String,default:'dropdown',validator:m=>['scroll','dropdown','block'].includes(m)},format:{type:String},valueFormat:{type:[String,Function]},mask:{type:String},max:{type:String},min:{type:String},showSecond:{type:Boolean,default:false},autosize:{type:Boolean,default:true}},data(){return{isOpened:false,maskedMounted:false,inputValue:'',oldInputValue:''}},computed:{currentMask(){return this.mask||(this.showSecond?'00:00:00':'00:00');},currentValueFormat(){return this.valueFormat||(this.showSecond?'HH:mm:ss':'HH:mm');},currentFormat(){return this.format||(this.showSecond?'HH:mm:ss':'HH:mm');},inputValueChanged(){return this.inputValue!==this.oldInputValue;},scrollMode(){return this.mode==='scroll';},dropdownMode(){return this.mode==='dropdown';},blockMode(){return this.mode==='block';}},methods:{getValueFormat(val){return bbn.fn.isFunction(this.valueFormat)?this.valueFormat(val):this.currentValueFormat;},setValue(val,format){if(!format){format=!!val?this.getValueFormat(val.toString()):false;}
let value=!!format&&!!val?(dayjs(val.toString(),format).isValid()?dayjs(val.toString(),format).format(format):''):'';if(value){if(value&&this.min&&(value<this.min)){value=this.min;}
if(value&&this.max&&(value>this.max)){value=this.max;}}
else if(this.nullable){value=null;}
if(value!==this.value){this.emitInput(value);this.$emit('change',value);}
else{this.setInputValue(value);}
if(!value){this.inputValue='';this.oldInputValue='';}
this.isOpened=false;},inputChanged(){let mask=this.getRef('element'),newVal=mask.inputValue,value=!!newVal?dayjs(newVal,this.currentFormat).format(this.getValueFormat(newVal)):'';if(mask.raw(newVal)!==this.oldInputValue){if(value&&this.min&&(value<this.min)){value=this.min;}
if(value&&this.max&&(value>this.max)){value=this.max;}
this.setValue(value);}},setInputValue(newVal){if(newVal){let mask=this.getRef('element'),mom=dayjs(newVal.toString(),this.getValueFormat(newVal.toString()));this.inputValue=newVal&&mask&&mom.isValid()?mask.raw(mom.format(this.currentFormat)):'';}
else{this.inputValue='';}
this.oldInputValue=this.inputValue;},clear(){this.setValue('');this.$nextTick(()=>{this.$set(this.getRef('element'),'inputValue','');})}},beforeCreate(){if(bbn.env&&bbn.env.lang&&(bbn.env.lang!==dayjs.locale())){dayjs.locale(bbn.env.lang);}},mounted(){if(this.value){this.setValue(this.value);}
this.ready=true;},watch:{min(){this.setValue(this.value||'');},max(){this.setValue(this.value||'');},valueFormat(){this.setValue(this.value||'');},maskedMounted(newVal){if(newVal){this.setInputValue(this.value);}},value(newVal){this.setInputValue(newVal);}}});})(bbn);})(bbn);