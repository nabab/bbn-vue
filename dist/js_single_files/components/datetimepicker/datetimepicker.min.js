((bbn)=>{let script=document.createElement('script');script.innerHTML=`<span :class="[componentClass, 'bbn-textbox', {'bbn-input-nullable': isNullable}]">
  <bbn-masked ref="element"
              :disabled="disabled"
              :readonly="readonly"
              :required="required"
              :mask="currentMask"
              @hook:mounted="maskedMounted = true"
              @blur="inputChanged"
              @keydown.enter="inputChanged"
              v-model="inputValue"
              class="bbn-flex-fill"
              :autosize="autosize"
              :inputmode="inputmode"
  ></bbn-masked>
  <div v-if="isNullable && !readonly && !disabled"
      class="bbn-block bbn-h-100 bbn-input-nullable-container"
  >
    <i v-if="hasValue" class="nf nf-fa-times_circle bbn-p"
        @mousedown.prevent.stop="clear"
    ></i>
  </div>
  <bbn-button icon="nf nf-fa-calendar"
              @click="showCalendar"
              :disabled="disabled || readonly"
              class="bbn-datetimepicker-calendar bbn-no-vborder bbn-no-border-right"
              tabindex="-1"
  ></bbn-button>
  <bbn-button icon="nf nf-fa-clock_o"
              @click="showTime"
              :disabled="disabled || readonly"
              class="bbn-datetimepicker-clock bbn-button-right bbn-no-vborder"
  ></bbn-button>
  <bbn-floater v-if="isCalendarOpened && !disabled && !readonly"
                :element="$el"
                :auto-hide="1000"
                ref="calendarFloater"
                @close="isCalendarOpened = false"
  >
    <bbn-calendar :arrows-buttons="false"
                    @selected="setDate"
                    :value="value ? value.toString() : ''"
                    :selection="true"
                    :auto-selection="true"
                    ref="calendar"
                    :date="value ? value.toString() : ''"
                    :min="min"
                    :max="max"
                    :extra-items="true"
                    :disable-dates="disableDates"
                    :items-range="datesRange"
                    :element-width="false"
    ></bbn-calendar>
  </bbn-floater>
  <bbn-floater v-if="isTimeOpened && !disabled && !readonly"
                :element="$el"
                ref="timeFloater"
                @close="isTimeOpened = false"
                
                max-width="10em"
                :scrollable="!!blocksMode || !scrollMode"
                hpos="right"
                :auto-hide="1000"
                :element-width="false"
  >
    <timepicker inline-template
                ref="timepicker"
                @change="setTime"
    >
      <div v-if="comp.scrollMode"
           style="width: auto; height: auto"
           class="bbn-overlay"
      >
        <bbn-splitter orientation="horizontal">
          <bbn-pane class="bbn-c bbn-border-color" style="border-right: 1px solid">
            <div class="bbn-flex-height">
              <div v-text="_('Hour').substr(0,1)"
                  title="_('Hour')"
                  class="bbn-unselectable bbn-header bbn-no-border-top bbn-no-hborder"
              ></div>
              <div class="bbn-flex-fill">
                <bbn-scroll :hidden="true"
                            ref="hourScroll"
                            @hook:mounted="hourReady = true"
                >
                  <div v-for="h in hours"
                      :class="['bbn-p', 'bbn-text', 'bbn-vspadded', 'bbn-reactive', {
                        'bbn-bordered-bottom': h.value !== 23,
                        'bbn-state-selected': hour === h.value
                      }]"
                      @click="setHour(h.value)"
                      :ref="hour === h.value ? 'hourActive' : undefined"
                  >
                    <strong v-text="h.text"
                            style="opacity: .5"
                    ></strong>
                  </div>
                </bbn-scroll>
              </div>
            </div>
          </bbn-pane>
          <bbn-pane class="bbn-c">
            <div class="bbn-flex-height">
              <div v-text="_('Minute').substr(0,1)"
                  title="_('Minute')"
                  class="bbn-unselectable bbn-header bbn-no-border-top bbn-no-hborder"
              ></div>
              <div class="bbn-flex-fill">
                <bbn-scroll :hidden="true"
                            ref="minuteScroll"
                            @hook:mounted="minuteReady = true"
                >
                  <div v-for="m in minsec"
                      :class="['bbn-p', 'bbn-text', 'bbn-vspadded', 'bbn-reactive', {
                        'bbn-bordered-bottom': m.value !== 59,
                        'bbn-state-selected': minute === m.value
                      }]"
                      @click="setMinute(m.value)"
                      :ref="minute === m.value ? 'minuteActive' : undefined"
                  >
                    <strong v-text="m.text"
                            style="opacity: .5"
                    ></strong>
                  </div>
                </bbn-scroll>
              </div>
            </div>
          </bbn-pane>
          <bbn-pane class="bbn-c bbn-border-color"
                    v-if="comp.showSecond"
                    style="border-left: 1px solid"
          >
            <div class="bbn-flex-height">
              <div v-text="_('Second').substr(0,1)"
                    title="_('Second')"
                    class="bbn-unselectable bbn-header bbn-no-border-top bbn-no-hborder"
              ></div>
              <div class="bbn-flex-fill">
                <bbn-scroll :hidden="true"
                            ref="secondScroll"
                            @hook:mounted="secondReady = true"
                >
                  <div v-for="s in minsec"
                      :class="['bbn-p', 'bbn-text', 'bbn-vspadded', 'bbn-background-internal', {
                        'bbn-bordered-bottom': s.value !== 59,
                        'bbn-state-selected': second === s.value
                      }]"
                      @click="setSecond(s.value)"
                      :ref="second === s.value ? 'secondActive' : undefined"
                  >
                    <strong v-text="s.text"
                            style="opacity: .5"
                    ></strong>
                  </div>
                </bbn-scroll>
              </div>
            </div>
          </bbn-pane>
        </bbn-splitter>
      </div>
      <div v-else-if="!comp.scrollMode && !comp.blocksMode"
           class="bbn-c"
      >
        <div class="bbn-iblock">
          <div v-text="_('Hour').substr(0,1)"
               title="_('Hour')"
               class="bbn-unselectable bbn-header"
          ></div>
          <bbn-dropdown :source="hours"
                        v-model="hour"
                        style="width: 60px"
          ></bbn-dropdown>
        </div>
        <div class="bbn-iblock">
          <div v-text="_('Minute').substr(0,1)"
               title="_('Minute')"
               class="bbn-unselectable bbn-header"
          ></div>
          <bbn-dropdown :source="minsec"
                        v-model="minute"
                        style="width: 60px"
          ></bbn-dropdown>
        </div>
        <div class="bbn-iblock"
             v-if="comp.showSecond"
        >
          <div v-text="_('Second').substr(0,1)"
               title="_('Second')"
               class="bbn-unselectable bbn-header"
          ></div>
          <bbn-dropdown :source="minsec"
                        v-model="second"
                        style="width: 60px"
          ></bbn-dropdown>
        </div>
      </div>
      <div v-else-if="!comp.scrollMode && comp.blocksMode"
           class="bbn-block bbn-background"
      >
        <div class="bbn-block">
          <div v-text="_('Hour').substr(0,1)"
               title="_('Hour')"
               class="bbn-unselectable bbn-header bbn-c bbn-no-border-top bbn-no-border-left bbn-no-border-right"
          ></div>
          <div class="bbn-c bbn-block">
            <div class="bbn-block" style="vertical-align: top;">
              <div v-for="n in 12"
                   :class="[
                     'bbn-hspadded',
                     'bbn-left-padded',
                     'bbn-vxxspadded',
                     'bbn-middle',
                     'bbn-unselectable',
                     'bbn-datetimepicker-timeblock',
                     'bbn-p',
                     {
                       'bbn-bordered-bottom': n !== 12,
                       'bbn-selected-background': hour === (n - 1),
                       'bbn-selected-text': hour === (n - 1)
                     }
                   ]"
                   @click="setHour(n - 1)"
              >
                <strong v-text="(n - 1).toString().length === 1 ? '0' + (n - 1) : (n - 1)"
                        style="opacity: .5"
                ></strong>
              </div>
            </div>
            <div class="bbn-block" style="vertical-align: top;">
              <div v-for="n in 12"
                   :class="[
                     'bbn-hspadded',
                     'bbn-right-padded',
                     'bbn-vxxspadded',
                     'bbn-bordered-left',
                     'bbn-middle',
                     'bbn-unselectable',
                     'bbn-datetimepicker-timeblock',
                     'bbn-p',
                     {
                       'bbn-bordered-bottom': n !== 12,
                       'bbn-selected-background': hour === n + 11,
                       'bbn-selected-text': hour === n + 11
                     }
                   ]"
                   @click="setHour(n + 11)"
              >
                <strong v-text="n + 11"
                        style="opacity: .5"
                ></strong>
              </div>
            </div>
          </div>
        </div>
        <div class="bbn-block bbn-bordered-left">
          <div v-text="_('Minute').substr(0,1)"
               title="_('Minute')"
               class="bbn-unselectable bbn-header bbn-c bbn-no-hborder bbn-no-border-top bbn-no-border-left"
          ></div>
          <div class="bbn-c bbn-block">
            <div class="bbn-block" style="vertical-align: top;">
              <div v-for="n in 12"
                   :class="[
                     'bbn-hpadded',
                     'bbn-vxxspadded',
                     'bbn-middle',
                     'bbn-unselectable',
                     'bbn-datetimepicker-timeblock',
                     'bbn-p',
                     {
                       'bbn-bordered-bottom': n !== 12,
                       'bbn-selected-background': minute === (n - 1) * 5,
                       'bbn-selected-text': minute === (n - 1) * 5
                     }
                   ]"
                   @click="setMinute((n - 1) * 5)"
              >
                <strong v-text="((n - 1) * 5).toString().length === 1 ? '0' + ((n - 1) * 5) : ((n - 1) * 5)"
                        style="opacity: .5"
                ></strong>
              </div>
            </div>
          </div>
        </div>
        <div v-if="comp.showSecond"
             class="bbn-block bbn-bordered-left">
          <div v-text="_('Second').substr(0,1)"
               title="_('Second')"
               class="bbn-unselectable bbn-header bbn-c bbn-no-border-right bbn-no-border-top bbn-no-border-left"
          ></div>
          <div class="bbn-c bbn-block">
            <div class="bbn-block" style="vertical-align: top;">
              <div v-for="n in 12"
                   :class="[
                     'bbn-hpadded',
                     'bbn-vxxspadded',
                     'bbn-middle',
                     'bbn-unselectable',
                     'bbn-datetimepicker-timeblock',
                     'bbn-p',
                     {
                       'bbn-bordered-bottom': n !== 12,
                       'bbn-selected-background': second === (n - 1) * 5,
                       'bbn-selected-text': second === (n - 1) * 5
                     }
                   ]"
                   @click="setSecond((n - 1) * 5)"
              >
                <strong v-text="((n - 1) * 5).toString().length === 1 ? '0' + ((n - 1) * 5) : ((n - 1) * 5)"
                        style="opacity: .5"
                ></strong>
              </div>
            </div>
          </div>
        </div>
      </div>
    </timepicker>
  </bbn-floater>
</span>`;script.setAttribute('id','bbn-tpl-component-datetimepicker');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn){"use strict";Vue.component('bbn-datetimepicker',{mixins:[bbn.vue.basicComponent,bbn.vue.inputComponent,bbn.vue.eventsComponent],props:{format:{type:String},valueFormat:{type:[String,Function]},mask:{type:String},max:{type:String},min:{type:String},disableDates:{type:[Array,Function]},datesRange:{type:Array,default(){return[];}},showSecond:{type:Boolean,default:false},scrollMode:{type:Boolean,default:true},blocksMode:{type:Boolean,default:false},autosize:{type:Boolean,default:true}},data(){return{isCalendarOpened:false,isTimeOpened:false,maskedMounted:false,inputValue:'',oldInputValue:''}},computed:{currentMask(){return this.mask||(this.showSecond?'00/00/0000 00:00:00':'00/00/0000 00:00');},currentValueFormat(){return this.valueFormat||(this.showSecond?'YYYY-MM-DD HH:mm:ss':'YYYY-MM-DD HH:mm');},currentFormat(){return this.format||(this.showSecond?'DD/MM/YYYY HH:mm:ss':'DD/MM/YYYY HH:mm');},inputValueChanged(){return this.inputValue!==this.oldInputValue;}},methods:{showCalendar(){this.isTimeOpened=false;this.$nextTick(()=>{this.isCalendarOpened=!this.isCalendarOpened;});},showTime(){this.isCalendarOpened=false;this.$nextTick(()=>{this.isTimeOpened=!this.isTimeOpened;});},getValueFormat(val){return bbn.fn.isFunction(this.valueFormat)?this.valueFormat(val):this.currentValueFormat;},setDate(val){val=dayjs(val,'YYYY-MM-DD').isValid()?dayjs(val,'YYYY-MM-DD'):'';if(this.value&&val){let mom=dayjs(this.value.toString(),this.getValueFormat(this.value.toString()));val.hour(mom.hour()).minute(mom.minute());if(this.showSecond){val.second(mom.second());}}
this.setValue(val?val.format(this.getValueFormat(val)):'');},setTime(val){val=dayjs(val,'HH:mm'+(this.showSecond?':ss':''));if(this.value){let mom=dayjs(this.value.toString(),this.getValueFormat(this.value.toString()));val.date(mom.date()).month(mom.month()).year(mom.year());}
this.setValue(val.format(this.getValueFormat(val)));},setValue(val,format){if(!format){format=!!val?this.getValueFormat(val.toString()):false;}
let value=!!format&&!!val?(dayjs(val.toString(),format).isValid()?dayjs(val.toString(),format).format(format):''):'';if(value){if(this.min&&(value<this.min)){value=this.min;}
if(this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){value=this.nullable?null:'';}}
else if(this.nullable){value=null;}
if(value!==this.value){this.emitInput(value);}
else{this.setInputValue(value);}
if(!value){this.inputValue='';this.oldInputValue='';}
this.isCalendarOpened=false;this.isTimeOpened=false;},updateCalendar(){if(this.getRef('calendar')){this.getRef('calendar').refresh();}},inputChanged(){let mask=this.getRef('element'),newVal=mask.inputValue,value=!!newVal?dayjs(newVal,this.currentFormat).format(this.getValueFormat(newVal)):'';if(mask.raw(newVal)!==this.oldInputValue){if(value&&this.min&&(value<this.min)){value=this.min;}
if(value&&this.max&&(value>this.max)){value=this.max;}
if(this.disableDates&&(bbn.fn.isFunction(this.disableDates)&&this.disableDates(value))||(bbn.fn.isArray(this.disableDates)&&this.disableDates.includes(value))){this.setValue(false);}
else{this.setValue(value);this.$nextTick(()=>{if(this.value!==value){this.$emit('change',value);}});}}},setInputValue(newVal){if(newVal){let mask=this.getRef('element'),mom=dayjs(newVal.toString(),this.getValueFormat(newVal.toString()));this.inputValue=newVal&&mask&&mom.isValid()?mask.raw(mom.format(this.currentFormat)):'';}
else{this.inputValue='';}
this.oldInputValue=this.inputValue;this.updateCalendar();},clear(){this.setValue('');this.$nextTick(()=>{this.$set(this.getRef('element'),'inputValue','');})}},beforeCreate(){if(bbn.env&&bbn.env.lang&&(bbn.env.lang!==dayjs.locale())){dayjs.locale(bbn.env.lang);}},mounted(){this.ready=true;},watch:{min(){this.setValue(this.value||'');this.updateCalendar();},max(){this.setValue(this.value||'');this.updateCalendar();},valueFormat(){this.setValue(this.value||'');},maskedMounted(newVal){if(newVal){this.setInputValue(this.value);}},value(newVal){this.setInputValue(newVal);}},components:{timepicker:{name:'timepicker',data(){return{comp:bbn.vue.closest(this,'bbn-datetimepicker'),minsec:Array.from({length:60},(v,i)=>{return{text:i.toString().length===1?'0'+i:i,value:i};}),hour:null,minute:null,second:null,hourReady:false,minuteReady:false,secondReady:false,ready:false}},computed:{hours(){if(this.comp){let min=false,max=false;return Array.from({length:24},(v,i)=>{return{text:i.toString().length===1?'0'+i:i,value:i};}).filter((v)=>{return!((min&&(v.value<min))||(max&&(v.value>max)))})}
return[];},checkScroll(){return!!(this.comp&&this.comp.scrollMode&&this.hourReady&&this.minuteReady&&this.getRef('minuteActive')&&this.getRef('hourActive')&&this.comp.getRef('timeFloater').ready&&(!this.comp.showSecond||(this.secondReady&&this.getRef('secondActive'))));}},methods:{getTime(){if(!bbn.fn.isNull(this.hour)&&!bbn.fn.isNull(this.minute)&&(!this.comp.showSecond||!bbn.fn.isNull(this.second))){let v=dayjs().minute(this.minute).hour(this.hour),f='HH:mm';if(this.comp.showSecond){v.second(this.second);f+=':ss';}
return v.format(f);}
return'';},setHour(h){this.hour=h;let time=this.getTime();if(!!time){this.$emit('change',time,'HH:mm'+(this.comp.showSecond?':ss':''));}},setMinute(m){this.minute=m;let time=this.getTime();if(!!time){this.$emit('change',time,'HH:mm'+(this.comp.showSecond?':ss':''));}},setSecond(s){this.second=s;let time=this.getTime();if(!!time){this.$emit('change',time,'HH:mm'+(this.comp.showSecond?':ss':''));}}},beforeMount(){this.ready=false;if(this.comp.value){let format=this.comp.getValueFormat(this.comp.value),mom=format?dayjs(this.comp.value,format):false;this.hour=mom?mom.hour():null;this.minute=mom?mom.minute():null;this.second=mom&&this.comp.showSecond?mom.second():null;}},mounted(){this.$nextTick(()=>{this.ready=true;});},watch:{hour(newVal,oldVal){if(this.ready&&(newVal!==oldVal)){this.setHour(newVal);}},minute(newVal,oldVal){if(this.ready&&(newVal!==oldVal)){this.setMinute(newVal);}},second(newVal,oldVal){if(this.ready&&(newVal!==oldVal)&&this.comp.showSecond){this.setSecond(newVal);}},checkScroll(newVal){if(newVal){this.$nextTick(()=>{setTimeout(()=>{let hs=this.getRef('hourScroll'),ms=this.getRef('minuteScroll'),ss=this.getRef('secondScroll');if(!bbn.fn.isNull(this.hour)&&hs){hs.onResize();hs.scrollTo(0,this.getRef('hourActive'));}
if(!bbn.fn.isNull(this.minute)&&ms){ms.onResize();ms.scrollTo(0,this.getRef('minuteActive'));}
if(!bbn.fn.isNull(this.second)&&ss){ss.onResize();ss.scrollTo(0,this.getRef('secondActive'));}},400)})}}}}}});})(bbn);})(bbn);