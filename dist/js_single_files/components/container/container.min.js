((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, visual ? '' : 'bbn-overlay']"
     @subready.stop
     :style="visual ? visualStyle : {}"
     v-show="visible || visual">
  <div class="bbn-100">
    <transition name="fade"
                v-on:enter="enter"
                v-on:after-enter="onResize">
      <div :class="{
        'bbn-overlay': !visual,
        'bbn-flex-height': visual,
        'bbn-w-100': visual
      }"
          v-show="visible || visual">
        <!-- The header -->
        <div v-if="visual"
            :class="'bbn-b bbn-hpadded bbn-vspadded bbn-flex-width ' + (visible ? ' bbn-m' : '')"
            :style="{
              fontSize: visible && !router.visualShowAll ? null : '10em',
              backgroundColor: bcolor || '#666',
              color: fcolor || '#EEE'
            }">
          <div class="bbn-flex-fill bbn-vmiddle">
            <bbn-context v-if="visible"
                        class="bbn-right-sspace bbn-lg bbn-p"
                        :floater-title="_('Container menu')"
                        tag="span"
                        :source="showMenu">
              <i class="nf nf-fa-bars"/>
            </bbn-context>
            <span v-if="icon"
                  class="bbn-right-sspace bbn-lg">
              <i :class="icon"/>
            </span>
            <span v-text="title"
                  style="overflow: hidden"/>
          </div>
          <div v-if="visible && !static && !pinned && !router.visualShowAll"
              class="bbn-block bbn-p bbn-vmiddle bbn-h-100"
              @click="close">
            <i class="nf nf-fa-times bbn-lg"/>
          </div>
        </div>
        <!-- The main container (the one we take screenshots of) -->
        <div :class="{
          'bbn-background': true,
          'bbn-overlay': !fullScreen && !visual,
          'bbn-flex-fill': !fullScreen && visual,
          'bbn-container-full-screen': fullScreen,
          'bbn-container-visible': visible
        }"
            ref="canvasSource">
          <!-- This is shown when it's ready -->
          <component :is="scrollable ? 'bbn-scroll' : 'div'"
                    v-if="ready && isLoaded && (visible || cached || visual)"
                    v-show="visible || (visual && !thumbnail)"
                    ref="scroll"
                    :axis="scrollable ? 'y' : null"
                    class="bbn-overlay">
            <!-- This is an ad hoc component with unique name -->
            <component v-if="isComponent"
                      :is="$options.components[componentName]"
                      :source="source"
                      ref="component"
            ></component>
            <!-- This is a classic component -->
            <component v-else-if="component"
                      :is="component"
                      :source="source"
                      ref="component"
                      v-bind="options"
            ></component>
            <!-- This is just HTML content -->
            <div v-else-if="content"
                v-html="content">
            </div>
            <!-- This is the slot -->
            <slot v-else></slot>
            <!-- Adding style as acomponent -->
            <component is="style"
                      v-if="css"
                      scoped="scoped"
                      v-html="css"/>
            <bbn-loader v-if="hasLoader"/>
          </component>
          <!-- If loading showing loader -->
          <bbn-loader v-else-if="visible && !isLoaded"/>
          <!-- Thumbnail image -->
          <div v-if="!visible && visual && thumbnail"
              style="overflow: hidden"
              class="bbn-overlay">
            <img :src="thumbnail"
                style="width: 100%; max-height: 100%; height: auto">
          </div>
          <!-- Icon for closing when in full screen mode -->
          <span  v-if="fullScreen"
                class="bbn-container-full-screen-closer bbn-xl bbn-p">
            <i class="nf nf-fa-times_circle"
              @click="fullScreen = false"/>
          </span>
          <!-- The container's popup, from each floater will come -->
          <bbn-popup ref="popup"
                    :source="popups"
                    v-if="!hidden && ready && isLoaded && (visible || cached)"/>
        </div>
      </div>
    </transition>
    <!-- When in visual mode a layer prevents interaction with the content -->
    <div v-if="visual && (!visible || router.visualShowAll)"
        class="bbn-overlay"
        style="z-index: 12; background-color: black; opacity: 0.2;">
    </div>
    <div v-if="visual && (!visible || router.visualShowAll)"
        class="bbn-overlay"
        @click="show() && router.route(current, true)"
        @mouseenter="isOver = true"
        @mouseleave="isOver = false"
        style="z-index: 12">
      <transition name="fade">
        <div class="bbn-bottom-left bbn-w-100"
            v-show="isOver"
            :style="{
                fontSize: visible ? null : '12em'
              }">
          <div class="bbn-bottom-left bbn-w-100 bbn-bg-black"
              style="opacity: 0.6; color: transparent">
              <div class="bbn-w-50 bbn-p bbn-spadded"
              @click.stop="">
            <i class="nf nf-fa-bars"/>
          </div>
          <div class="bbn-w-50 bbn-right bbn-p bbn-spadded"
              @click.stop="close"
              v-if="!pinned && !static">
              <i class="nf nf-fa-times"/>
          </div>
          <div class="bbn-w-50 bbn-right bbn-p bbn-spadded"
              @click.stop="unpin"
              v-else-if="pinned">
              <i class="nf nf-oct-pin"/>
          </div>
        </div>
          <div class="bbn-bottom-left bbn-w-100 bbn-white">
            <div class="bbn-w-50 bbn-p bbn-spadded"
                @click.stop="">
              <i class="nf nf-fa-bars"/>
            </div>
            <div class="bbn-w-50 bbn-right bbn-p bbn-spadded"
                @click.stop="close"
                v-if="!pinned && !static">
                <i class="nf nf-fa-times"/>
            </div>
            <div class="bbn-w-50 bbn-right bbn-p bbn-spadded"
                @click.stop="unpin"
                v-else-if="pinned">
                <i class="nf nf-oct-pin"/>
            </div>
          </div>
        </div>
      </transition>
    </div>
  </div>
</div>
`;script.setAttribute('id','bbn-tpl-component-container');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn,Vue){"use strict";let componentsList=[];Vue.component("bbn-container",{name:'bbn-container',mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent,bbn.vue.viewComponent,bbn.vue.observerComponent],props:{idx:{type:Number},uid:{type:String,default(){return bbn.fn.randomString();}},visual:{type:Boolean,default:false}},data(){return{isVisible:false,router:null,visible:false,dirty:false,isComponent:null,fullScreen:false,componentName:this.randomName(),popups:[],isComponentActive:false,isLoaded:!this.load||this.loaded,isPinned:this.pinned,isStatic:this.static,currentURL:this.current||this.url,hasLoader:false,isOver:false,_bbn_container:null,thumbnail:false,forms:[]};},computed:{visualStyle(){if(this.visual){let r=this.router;if((r.views.length>1)&&(!this.visible||r.visualShowAll)){return{zoom:0.1,width:'100%',height:'100%',overflow:'hidden'};}
let coord=[1,r.numVisualCols+1,1,r.numVisualRows+1];if(r.views.length>1){switch(r.visualOrientation){case'top':coord[2]=2;break;case'bottom':coord[3]=coord[3]-1;break;case'left':coord[0]=2;break;case'right':coord[1]=coord[1]-1;break;}}
return{gridColumnStart:coord[0],gridColumnEnd:coord[1],gridRowStart:coord[2],gridRowEnd:coord[3],zoom:1};}
return{};},anonymousComponent(){return this.$refs.component;}},methods:{getFullCurrentURL(){return this.router.getFullBaseURL()+this.currentURL;},getFullURL(){return this.router.getFullBaseURL()+this.url;},setLoaded(val){this.isLoaded=!!val;},randomName(){let n=bbn.fn.randomString(20,15).toLowerCase();while(componentsList.indexOf(n)>-1){n=bbn.fn.randomString(20,15).toLowerCase();}
return n;},show(){this.visible=true;if(this.visual&&this.router.visualShowAll){this.router.visualShowAll=false;}
return true;},hide(){this.visible=false
return true;},close(){this.router.close(this.idx);},setCurrent(url){if(url.indexOf(this.url)===0){this.currentURL=url;return true;}
return false;},setTitle(title){if(this.router){this.router.views[this.idx].title=title;}},setColor(bcolor,fcolor){if(this.router){if(bcolor){this.router.$set(this.router.views[this.idx],"bcolor",bcolor);}
if(fcolor){this.router.$set(this.router.views[this.idx],"fcolor",fcolor);}}},popup(){let popup=this.getPopup();return arguments.length?popup.open.apply(popup,arguments):popup;},getComponent(){return this.getRef('component');},enter(){this.$parent.enter(this);},reload(){this.router.reload(this.idx);},addMenu(obj){if((this.idx>-1)&&obj.text&&this.$parent.views&&this.$parent.views[this.idx]){if(this.$parent.views[this.idx].menu===undefined){this.$parent.views[this.idx].menu=[];}
let menu=this.$parent.views[this.idx].menu||[],idx=bbn.fn.isFunction(menu)?-1:bbn.fn.search(menu||[],{text:obj.text});if(idx===-1){if(bbn.fn.isFunction(menu)){this.$parent.views[this.idx].menu=()=>{let items=menu()||[];if(bbn.fn.search(items,obj)===-1){if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
items.push(obj);}
return items;};}
else{if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
menu.push(obj);}}
else{obj.key=menu[idx].key;menu.splice(idx,1,obj);}
this.$parent.views[this.idx].menu=menu;return obj.key;}
return false;},deleteMenu(key){if((this.idx>-1)&&this.$parent.views&&this.$parent.views[this.idx]){let menu=this.$parent.views[this.idx].menu||[];if(bbn.fn.isFunction(menu)){menu=()=>{let items=menu()||[];let idx=bbn.fn.search(items,"key",key);if(idx>-1){items.splice(idx,1);this.$parent.views[this.idx].menu=items;this.$parent.$forceUpdate();return true;}};}
else{let idx=bbn.fn.search(menu,"key",key);if(idx>-1){menu.splice(idx,1);this.$parent.views[this.idx].menu=menu;this.$parent.$forceUpdate();return true;}}}
return false;},onResize(){if(this.visible&&this.ready){this.$emit("resize");}},init(){if(this.real||(this.isLoaded&&!this.ready)){let res;if(this.script){res=typeof this.script==='string'?eval(this.script):this.script;if(res){if(bbn.fn.isFunction(res)){this.onMount=res;this.isComponent=false;}
else if(typeof(res)==='object'){this.isComponent=true;}
else{}}}
else if(this.content){this.isComponent=false;}
if(this.isComponent){let cont=this;let o=bbn.fn.extend(true,res?res:{},{template:'<div class="'+(this.scrollable?'':'bbn-overlay')+'">'+this.content+'</div>',methods:{getContainer(){if(!this._bbn_container){this._bbn_container=this.closest('bbn-container');}
return this._bbn_container;},getTab(){return this.getContainer();},addMenu(){return this.getContainer().addMenu.apply(this.$parent,arguments)},deleteMenu(){return this.getContainer().deleteMenu.apply(this.$parent,arguments)}},props:['source']});this.$options.components[this.componentName]=o;}
else{this.isComponent=false;}
setTimeout(()=>{if(bbn.env.url.indexOf('#')){let scroll=this.getRef('scroll');if(scroll&&(scroll.currentY||scroll.currentX)){return;}
let hash=bbn.env.url.split('#')[1];if(hash){hash='#'+hash;location.hash=null;location.hash=hash;}}
if(this.visual){this.takeScreenshot();}},2000);this.ready=true;}},showMenu(){if(this.visual){return this.router.getMenuFn(this.idx);}},takeScreenshot(num_tries=0){if(this.visual&&this.router.db&&window.html2canvas){setTimeout(()=>{let prom;let scroll=this.getRef('scroll');if(!scroll){if(num_tries<=10){this.takeScreenshot(num_tries+1);}
return;}
let w=scroll.lastKnownWidth;let h=scroll.lastKnownHeight;let ct=this.getRef('canvasSource');if(!w||!h){if(num_tries<=10){this.takeScreenshot(num_tries+1);}
return;}
ct.style.width=w+'px';ct.style.height=h+'px';try{prom=html2canvas(this.getRef('canvasSource'),{width:w,height:h});}
catch(e){bbn.fn.log("Error");return;}
prom.then(canvas=>{bbn.fn.log(canvas);bbn.fn.log(canvas.height);let img=bbn.fn.canvasToImage(canvas);if(!img){bbn.fn.log("Error for screenshot image");return;}
ct.style.width=null;ct.style.height=null;let ctx=canvas.getContext('2d');let size=Math.min(w,h);let num=Math.min(this.router.numVisualCols,this.router.numVisualRows);let msize=Math.ceil(size / num);ctx.drawImage(img,0,0,size,size,0,0,msize,msize);this.router.db.insert('containers',{url:this.getFullURL(),image:img.src});}).catch(e=>{bbn.fn.log("ERROR",e);});},1000)}},},created(){this.componentClass.push('bbn-resize-emitter');if(this.isComponent){componentsList.push(this.componentName);}
else if(this.isComponent===null){this.onMount=()=>{return false;};let res;}
this.router=this.closest('bbn-router');if(this.visual&&this.router.db){let url=this.getFullURL();this.router.db.selectOne('containers','image',{url:url}).then(res=>{if(res){this.thumbnail=res;}})}},mounted(){if(!this.router){throw new Error(bbn._("bbn-container cannot be rendered without a bbn-router"));}
if(!this.router.ready){this.router.$on('ready',()=>{this.router.register(this);});}
else{this.router.register(this);}},beforeDestroy(){this.router.unregister(this);if(this.isComponent){let idx=componentsList.indexOf(this.componentName);if(idx>-1){componentsList.splice(idx,1);}}},watch:{idx(){if(this.visual){this.isOver=false;}},current(newVal){if(newVal.indexOf(this.url)===0){this.currentURL=newVal;}},currentURL(newVal,oldVal){if(!newVal||(newVal.indexOf(this.url)!==0)){this.currentURL=this.url;}},ready(v){if(v){if(this.onMount){this.onMount(this.$el,this.source);}}},load(nv,ov){},visible(nv,ov){this.$nextTick(()=>{this.$emit(nv?'view':'unview',this);if(nv){this.$nextTick(()=>{this.onResize();});}
else if(this.visual){}});},content(newVal,oldVal){if(newVal){this.isComponentActive=false;}},fullScreen(newVal){let fn=e=>{if(e.keyCode===27){this.fullScreen=false;}};if(newVal){document.body.addEventListener('keydown',fn);}
else{document.body.removeEventListener('keydown',fn);}
this.$nextTick(()=>{this.selfEmit(true)})},dirty(v){this.router.views[this.idx].dirty=v;this.router.retrieveDirtyContainers();}},});})(bbn,Vue);})(bbn);