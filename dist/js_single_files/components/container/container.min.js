((bbn)=>{let script=document.createElement('script');script.innerHTML=`<div :class="[componentClass, {
  'bbn-overlay': !visual && router.scrollContent,
  'bbn-w-100': !router.scrollContent
}]"
     @subready.stop
     :style="visual ? visualStyle : {}"
     v-show="visible || visual">
  <div :class="{
    'bbn-100': router.scrollContent,
    'bbn-container-full-screen': fullScreen,
    'bbn-w-100': !router.scrollContent
  }">
    <transition name="fade"
                v-on:enter="enter"
                v-on:after-enter="onResize">
      <div :class="{
        'bbn-overlay': !visual && router.scrollContent,
        'bbn-flex-height': (visual || fullScreen) && router.scrollContent,
        'bbn-w-100': visual || !router.scrollContent
      }"
          v-show="visible || visual">
        <!-- The header -->
        <div v-if="visual || fullScreen"
            :class="'bbn-transition-bcolor bbn-b bbn-vspadded bbn-flex-width ' + (visible ? ' bbn-m' : '')"
            :style="{
              paddingLeft: '0.5em',
              paddingRight: '0.5em',
              fontSize: visible && !router.visualShowAll ? null : '10em',
              backgroundColor: bcolor || router.bcolor,
              color: fcolor || router.fcolor
            }">
          <div class="bbn-flex-fill bbn-vmiddle">
            <bbn-context v-if="visible"
                        class="bbn-right-sspace bbn-lg bbn-p"
                        :floater-title="_('Container menu')"
                        tag="span"
                        :source="showMenu">
              <i class="nf nf-fa-bars"/>
            </bbn-context>
            <span v-if="icon"
                  class="bbn-right-sspace bbn-lg">
              <i :class="icon"/>
            </span>
            <span v-text="title"
                  style="overflow: hidden"/>
          </div>
          <!-- Icon for restoring size when in full screen mode -->
          <div v-if="visible && fullScreen"
              class="bbn-block bbn-p bbn-vmiddle bbn-h-100"
              @click="fullScreen = false">
            <i class="nf nf-mdi-arrow_collapse bbn-lg"/>
          </div>
          <!-- Icon for closing  -->
          <div v-else-if="visible && !static && !pinned && !router.visualShowAll"
              class="bbn-block bbn-p bbn-vmiddle bbn-h-100"
              @click="close">
            <i class="nf nf-fa-times bbn-lg"/>
          </div>
        </div>
        <!-- The main container (the one we take screenshots of) -->
        <div :class="{
          'bbn-background': true,
          'bbn-overlay': !fullScreen && !visual && router.scrollContent,
          'bbn-flex-fill': (fullScreen || visual) && router.scrollContent,
          'bbn-w-100': !router.scrollContent,
          'bbn-container-visible': visible
        }"
            ref="canvasSource">
          <!-- This is shown when it's ready -->
          <bbn-scroll v-if="isLoaded && (visible || (cached && ready) || visual)"
                      v-show="ready && visible || (visual && !thumbnail)"
                      ref="scroll"
                      @ready="init"
                      :scrollable="scrollable && router.scrollContent"
                      axis="y"
                      :class="{
                        'bbn-overlay': router.scrollContent,
                        'bbn-w-100': !router.scrollContent
                      }">
            <!-- This is an ad hoc component with unique name -->
            <component v-if="isComponent"
                      :is="$options.components[componentName]"
                      :source="source"
                      ref="component"/>
            <!-- This is a classic component -->
            <component v-else-if="component"
                      :is="component"
                      :source="source"
                      ref="component"
                      v-bind="options"/>
            <!-- This is just HTML content -->
            <div v-else-if="content"
                 v-html="content">
            </div>
            <!-- This is the slot -->
            <slot v-else></slot>
            <!-- Adding style as a component -->
            <component is="style"
                      v-if="css"
                      scoped="scoped"
                      v-html="css"/>
          </bbn-scroll>
          <!-- If loading showing loader -->
          <div v-else-if="visible && errorStatus"
               class="bbn-overlay bbn-middle bbn-lg">
            <div class="bbn-lpadded bbn-state-error bbn-block bbn-nowrap">
              <h1 v-text="errorStatus.status"/>
              <div v-text="url"/>
              <div class="bbn-vlpadded bbn-b"
                   v-text="errorStatus.statusText"/>
              <div class="bbn-c">
                <bbn-button @click="close"
                            icon="nf nf-fa-times"
                            :text="_('Close')"
                            class="bbn-state-error"/>
              </div>
            </div>
          </div>
          <!-- If loading showing loader -->
          <bbn-loader v-else-if="visible && !isLoaded"/>
          <!-- Thumbnail image -->
          <div v-if="!visible && visual && thumbnail"
              style="overflow: hidden"
              class="bbn-overlay">
            <img :src="thumbnail"
                style="width: 100%; max-height: 100%; height: auto">
          </div>
          <!-- The container's popup, from each floater will come -->
          <bbn-popup ref="popup"
                    :source="popups"
                    v-if="!hidden && ready && isLoaded && (visible || cached)"/>
        </div>
      </div>
    </transition>
    <!-- When in visual mode a layer prevents interaction with the content -->
    <div v-if="visual && (!visible || router.visualShowAll)"
        class="bbn-overlay"
        style="z-index: 12; background-color: black; opacity: 0.2;">
    </div>
    <!-- When in visual mode this is the interaction layer -->
    <div v-if="visual && (!visible || router.visualShowAll)"
        class="bbn-overlay"
        @click="show() && router.route(current, true)"
        @mouseenter="isOver = true"
        @mouseleave="isOver = false"
        style="z-index: 12">
      <transition name="fade">
        <div class="bbn-bottom-left bbn-w-100"
            v-show="isOver"
            :style="{
                fontSize: visible && !router.visualShowAll ? null : '10em'
              }">
          <!-- Semi-transparent dark layer these buttons are not used -->
          <div class="bbn-bottom-left bbn-w-100 bbn-bg-black"
               style="opacity: 0.6; color: transparent">
            <div class="bbn-w-50 bbn-spadded">
              <!--span class="bbn-spadded bbn-p">
                <i class="nf nf-fa-bars"/>
              </span-->
            </div>
            <div class="bbn-w-50 bbn-right bbn-spadded">
              <span class="bbn-spadded bbn-p"
                    v-if="!pinned && !static">
                <i class="nf nf-fa-times"/>
              </span>
              <span class="bbn-spadded bbn-p"
                    v-else-if="pinned">
                <i class="nf nf-mdi-pin"/>
              </span>
              <span class="bbn-spadded bbn-p">
                <i class="nf nf-oct-pin"/>
              </span>
            </div>
          </div>
          <!-- These buttons are the real ones (white) -->
          <div class="bbn-bottom-left bbn-w-100 bbn-white">
            <div class="bbn-w-50 bbn-spadded">
              &nbsp;
              <!--bbn-context class="bbn-spadded bbn-iblock bbn-p"
                           tag="span"
                           :source="showMenu">
                <i class="nf nf-fa-bars"
                   @click.stop="pin"/>
              </bbn-context-->
            </div>
            <div class="bbn-w-50 bbn-right bbn-spadded">
              <span v-if="!pinned && !static"
                    @click.stop="pin"
                    class="bbn-spadded bbn-p">
                <i class="nf nf-oct-pin"/>
              </span>
              <span class="bbn-spadded bbn-p"
                    @click.stop="close"
                    v-if="!pinned && !static">
                <i class="nf nf-fa-times"/>
              </span>
              <span class="bbn-spadded bbn-p"
                    @click.stop="unpin"
                    v-else-if="pinned && !static">
                <i class="nf nf-mdi-pin_off"/>
              </span>
              &nbsp;
            </div>
          </div>
        </div>
      </transition>
    </div>
  </div>
</div>
`;script.setAttribute('id','bbn-tpl-component-container');script.setAttribute('type','text/x-template');document.body.insertAdjacentElement('beforeend',script);(function(bbn,Vue){"use strict";let componentsList=[];Vue.component("bbn-container",{name:'bbn-container',mixins:[bbn.vue.basicComponent,bbn.vue.resizerComponent,bbn.vue.viewComponent,bbn.vue.observerComponent],props:{idx:{type:Number},last:{type:Number},uid:{type:String,default(){return bbn.fn.randomString();}},visual:{type:Boolean,default:false}},data(){return{isVisible:this.loading,router:null,visible:this.loading,dirty:false,isComponent:null,fullScreen:false,componentName:this.randomName(),popups:[],isComponentActive:false,isLoaded:!this.load||this.loaded,isPinned:this.pinned,isStatic:this.static,currentURL:this.current||this.url,isOver:false,_bbn_container:null,thumbnail:false,forms:[],errorStatus:null,currentTitle:this.title,currentIcon:this.icon};},computed:{visualStyle(){if(this.visual){let r=this.router;if((r.views.length>1)&&(!this.visible||r.visualShowAll)){return{zoom:0.1,width:'100%',height:'auto',overflow:'hidden'};}
let coord=[1,r.numVisualCols+1,1,r.numVisualRows+1];if(r.views.length>1){switch(r.visualOrientation){case'top':coord[2]=2;break;case'bottom':coord[3]=coord[3]-1;break;case'left':coord[0]=2;break;case'right':coord[1]=coord[1]-1;break;}}
return{gridColumnStart:coord[0],gridColumnEnd:coord[1],gridRowStart:coord[2],gridRowEnd:coord[3],zoom:1};}
return{};},anonymousComponent(){return this.$refs.component;}},methods:{getFullCurrentURL(){return this.router.getFullBaseURL()+this.currentURL;},getFullURL(){return this.router.getFullBaseURL()+this.url;},setLoaded(val){this.isLoaded=!!val;},randomName(){let n=bbn.fn.randomString(20,15).toLowerCase();while(componentsList.indexOf(n)>-1){n=bbn.fn.randomString(20,15).toLowerCase();}
return n;},show(){this.visible=true;if(this.visual&&this.router.visualShowAll){this.router.visualShowAll=false;}
return true;},hide(){this.visible=false
return true;},close(){this.router.close(this.idx);},setCurrent(url){if(url.indexOf(this.url)===0){this.currentURL=url;return true;}
return false;},setTitle(title){if(this.router){if(!this.real){this.router.views[this.idx].title=title;}
else{this.currentTitle=title;}}},setIcon(icon){if(this.router){if(!this.real){this.router.views[this.idx].icon=icon;}
else{this.currentIcon=icon;}}},setColor(bcolor,fcolor){if(this.router){let view=this.router.getView(this.url);if(view){if(bcolor){this.router.$set(view,"bcolor",bcolor);}
if(fcolor){this.router.$set(view,"fcolor",fcolor);}}}},popup(){let popup=this.getPopup();return arguments.length?popup.open.apply(popup,arguments):popup;},getComponent(){return this.getRef('component');},enter(){this.$parent.enter(this);},pin(){this.router.pin(this.idx);},unpin(){this.router.unpin(this.idx);},reload(){this.router.reload(this.idx);},addMenu(obj){if((this.idx>-1)&&obj.text&&this.$parent.views&&this.$parent.views[this.idx]){if(this.$parent.views[this.idx].menu===undefined){this.$parent.views[this.idx].menu=[];}
let menu=this.$parent.views[this.idx].menu||[],idx=bbn.fn.isFunction(menu)?-1:bbn.fn.search(menu||[],{text:obj.text});if(idx===-1){if(bbn.fn.isFunction(menu)){this.$parent.views[this.idx].menu=()=>{let items=menu()||[];if(bbn.fn.search(items,obj)===-1){if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
items.push(obj);}
return items;};}
else{if(!obj.key){obj.key=bbn.fn.randomInt(99999,99999999999);}
menu.push(obj);}}
else{obj.key=menu[idx].key;menu.splice(idx,1,obj);}
this.$parent.views[this.idx].menu=menu;return obj.key;}
return false;},deleteMenu(key){if((this.idx>-1)&&this.$parent.views&&this.$parent.views[this.idx]){let menu=this.$parent.views[this.idx].menu||[];if(bbn.fn.isFunction(menu)){menu=()=>{let items=menu()||[];let idx=bbn.fn.search(items,"key",key);if(idx>-1){items.splice(idx,1);this.$parent.views[this.idx].menu=items;this.$parent.$forceUpdate();return true;}};}
else{let idx=bbn.fn.search(menu,"key",key);if(idx>-1){menu.splice(idx,1);this.$parent.views[this.idx].menu=menu;this.$parent.$forceUpdate();return true;}}}
return false;},onResize(){if(this.visible&&this.ready){bbn.vue.resizerComponent.methods.onResize.apply(this,arguments);}},init(){if(this.visible&&(this.real||(this.isLoaded&&!this.ready))){let res;if(this.script){res=typeof this.script==='string'?eval(this.script):this.script;if(res){if(bbn.fn.isFunction(res)){this.onMount=res;this.isComponent=false;}
else if(typeof(res)==='object'){this.isComponent=true;}
else{}}}
else if(this.content){this.isComponent=false;}
if(this.isComponent){let cont=this;let o=bbn.fn.extend(true,res?res:{},{template:'<div class="'+(this.router.scrollContent?'':'bbn-w-100')+'">'+this.content+'</div>',methods:{getContainer(){if(!this._bbn_container){this._bbn_container=this.closest('bbn-container');}
return this._bbn_container;},getTab(){return this.getContainer();},addMenu(){return this.getContainer().addMenu.apply(this.$parent,arguments)},deleteMenu(){return this.getContainer().deleteMenu.apply(this.$parent,arguments)}},props:['source']});this.$options.components[this.componentName]=o;}
else{this.isComponent=false;}
setTimeout(()=>{if(bbn.env.url.indexOf('#')){let scroll=this.getRef('scroll');if(scroll&&(scroll.currentY||scroll.currentX)){return;}
let hash=bbn.env.url.split('#')[1];if(hash){hash='#'+hash;location.hash=null;location.hash=hash;}}},2000);if(this.visual){this.setScreenshot();}
this.ready=true;}},showMenu(){return this.router.getMenuFn(this.idx);},setScreenshot(){setTimeout(()=>{if(this.selected){this.takeScreenshot();this._screenshotInterval=setInterval(()=>{this.takeScreenshot();},30000);}},3000);},unsetScreenshot(){if(this._screenshotInterval){clearInterval(this._screenshotInterval)
this._screenshotInterval=false;}},takeScreenshot(num_tries=0){if(this.selected&&this.router.db&&window.html2canvas&&document.hasFocus()){let scroll=this.getRef('scroll');if(!scroll){if(num_tries<=10){setTimeout(()=>{this.takeScreenshot(num_tries+1);},1000);}
return;}
if(scroll.$el){scroll=scroll.$el;}
let w=scroll.clientWidth;let h=scroll.clientHeight;let ct=this.getRef('canvasSource');if(!ct||!w||!h){if(num_tries<=10){setTimeout(()=>{return this.takeScreenshot(num_tries+1);},1000);}
return;}
ct.style.width=w+'px !important';ct.style.height=h+'px !important';html2canvas(this.getRef('canvasSource'),{width:w,height:h,windowWidth:w,windowHeight:h}).then(canvas=>{ct.style.width=null;ct.style.height=null;let img=bbn.fn.canvasToImage(canvas);if(!img){bbn.fn.log("Error for screenshot image");return;}
let ctx=canvas.getContext('2d');let size=Math.min(w,h);let num=Math.min(this.router.numVisualCols,this.router.numVisualRows);let msize=Math.ceil(size / num);ctx.drawImage(img,0,0,size,size,0,0,msize,msize);this.thumbnail=img.src;this.router.db.insert('containers',{url:this.getFullURL(),image:img.src});}).catch(e=>{ct.style.width=null;ct.style.height=null;bbn.fn.log(w,h,"ERROR",e);});}},updateScreenshot(){if(this.visual&&this.router.db){let url=this.getFullURL();this.router.db.selectOne('containers','image',{url:url}).then(res=>{if(res){this.thumbnail=res;}})}}},created(){this.componentClass.push('bbn-resize-emitter');if(this.isComponent){componentsList.push(this.componentName);}
else if(this.isComponent===null){this.onMount=()=>{return false;};let res;}
this.router=this.closest('bbn-router');this.updateScreenshot()
this._screenshotInterval=false;},mounted(){if(!this.router){throw new Error(bbn._("bbn-container cannot be rendered without a bbn-router"));}
if(!this.router.ready){this.router.$on('ready',()=>{this.router.register(this);});}
else{this.router.register(this);}},beforeDestroy(){this.router.unregister(this);if(this.isComponent){let idx=componentsList.indexOf(this.componentName);if(idx>-1){componentsList.splice(idx,1);}}},watch:{title(v){this.currentTitle=v;},icon(v){this.currentIcon=v;},loaded(v){this.isLoaded=v;},loading(v){this.isLoading=v;},selected(v){this.visible=v;if(this.visual){if(v){this.setScreenshot()}
else{this.unsetScreenshot();}}},idx(){if(this.visual){this.isOver=false;}},current(newVal){if(newVal.indexOf(this.url)===0){this.currentURL=newVal;}},currentURL(newVal,oldVal){if(!newVal||(newVal.indexOf(this.url)!==0)){this.currentURL=this.url;}},ready(v){if(v){if(this.onMount){this.onMount(this.$el,this.source);}}},load(nv,ov){},visible(nv,ov){this.$nextTick(()=>{this.$emit(nv?'view':'unview',this);if(nv){this.$nextTick(()=>{this.onResize();});}});},content(newVal,oldVal){if(newVal){this.isComponentActive=false;}},fullScreen(newVal){let fn=e=>{if(e.keyCode===27){this.fullScreen=false;}};if(newVal){document.body.addEventListener('keydown',fn);}
else{document.body.removeEventListener('keydown',fn);}
this.$nextTick(()=>{this.selfEmit(true)})},dirty(v){let view=this.router.getView(this.url);if(view){view.dirty=v;this.router.retrieveDirtyContainers();}}},});})(bbn,Vue);})(bbn);